{"version":3,"file":"static/js/823.d64653f5.chunk.js","mappings":"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","sources":["pages/Investors/Documentview.jsx","components/Users/MainHeaderInvestor.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\r\nimport DataTable from \"react-data-table-component\";\r\nimport MainHeaderInvestor from \"../../components/Users/MainHeaderInvestor.js\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  SectionWrapper,\r\n  Wrapper,\r\n} from \"../../components/Styles/MainHeadStyles.js\";\r\nimport { DataRoomSection } from \"../../components/Styles/DataRoomStyle.js\";\r\nimport { FaDownload } from \"react-icons/fa\"; // FontAwesome icons\r\nimport axios from \"axios\";\r\nimport InvestorShareReport from \"../../components/Users/popup/InvestorShareReport.jsx\";\r\nexport default function Documentview() {\r\n  const navigate = useNavigate();\r\n  const [records, setrecords] = useState([]);\r\n  const [IsModalOpenShareReport, setIsModalOpenShareReport] = useState(false);\r\n  var apiURLINFile = \"https://blueprintcatalyst.com/api/user/investorreport/\";\r\n\r\n  const { code } = useParams();\r\n  const [datalist, setdatalist] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getInvestorInfocheck();\r\n  }, []);\r\n  const getInvestorInfocheck = async () => {\r\n    const formData = {\r\n      code: code,\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        apiURLINFile + \"getInvestorInfocheck\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      console.log(res.data.results.length);\r\n      if (res.data.results.length === 0) {\r\n        navigate(\"/investor/information/\" + code);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n    //  Optionally, call AI Summary API here\r\n  };\r\n  useEffect(() => {\r\n    getInvestorReport();\r\n  }, []);\r\n  const getInvestorReport = async () => {\r\n    const formData = {\r\n      code: code,\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        apiURLINFile + \"getreportForInvestor\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.data.results.length === 0) {\r\n        // navigate(\"/\");\r\n      } else {\r\n        setdatalist(res.data.results[0]);\r\n        setrecords(res.data.results);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n    //  Optionally, call AI Summary API here\r\n  };\r\n  function formatCurrentDate(input) {\r\n    const date = new Date(input); // ✅ Convert input to Date\r\n\r\n    if (isNaN(date)) return \"\"; // ⛔ Invalid date check\r\n\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n\r\n    const day = date.getDate();\r\n    const month = months[date.getMonth()];\r\n    const year = date.getFullYear();\r\n\r\n    const getOrdinal = (n) => {\r\n      if (n >= 11 && n <= 13) return \"th\";\r\n      switch (n % 10) {\r\n        case 1:\r\n          return \"st\";\r\n        case 2:\r\n          return \"nd\";\r\n        case 3:\r\n          return \"rd\";\r\n        default:\r\n          return \"th\";\r\n      }\r\n    };\r\n\r\n    return `${month} ${day}${getOrdinal(day)}, ${year}`;\r\n  }\r\n  const columns = [\r\n    {\r\n      name: \"Date of Report\",\r\n      selector: (row) => formatCurrentDate(row.date_report),\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Name of Report\",\r\n      selector: (row) => row.document_name,\r\n      sortable: true,\r\n    },\r\n    {\r\n      name: \"Action\",\r\n      cell: (row) => (\r\n        <div className=\"d-flex gap-2\">\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => handleDownload(row.downloadUrl, row.id)}\r\n            rel=\"noopener noreferrer\"\r\n            className=\"btn btn-sm btn-outline-success\"\r\n            title=\"Download\"\r\n          >\r\n            <FaDownload />\r\n          </button>\r\n        </div>\r\n      ),\r\n      ignoreRowClick: true,\r\n      allowOverflow: true,\r\n      button: true,\r\n    },\r\n  ];\r\n  const handleDownload = async (url, id) => {\r\n    let formData = {\r\n      id: id,\r\n    };\r\n    try {\r\n      const res = await axios.post(apiURLINFile + \"viewReport\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      window.open(url, \"_blank\");\r\n    } catch (err) {\r\n      console.error(\"Error generating summary\", err);\r\n    }\r\n  };\r\n  const data = [\r\n    {\r\n      id: 1,\r\n      report: \"Investor Updates / Reporting\",\r\n      dateofreport: \"12-12-2025\",\r\n      nameofreport: \"Investor Update v2\",\r\n      download: \"Download 1\",\r\n    },\r\n    {\r\n      id: 2,\r\n      report: \"Due Diligence Document\",\r\n      dateofreport: \"\",\r\n      nameofreport: \"\",\r\n      download: \"\",\r\n    },\r\n    {\r\n      id: 3,\r\n      report: \"Term Sheet\",\r\n      dateofreport: \"\",\r\n      nameofreport: \"\",\r\n      download: \"\",\r\n    },\r\n    {\r\n      id: 4,\r\n      report: \"Subscription Documents\",\r\n      dateofreport: \"\",\r\n      nameofreport: \"\",\r\n      download: \"\",\r\n    },\r\n    {\r\n      id: 5,\r\n      report: \"Dataroom\",\r\n      dateofreport: \"\",\r\n      nameofreport: \"\",\r\n      download: \"\",\r\n    },\r\n  ];\r\n\r\n  const customStyles = {\r\n    headCells: {\r\n      style: {\r\n        fontSize: \"14px\",\r\n      },\r\n    },\r\n  };\r\n\r\n  const [searchText, setSearchText] = useState(\"\");\r\n\r\n  // Filter data by nameofreport (case insensitive)\r\n  const filteredData = records.filter((item) => {\r\n    const search = searchText.toLowerCase();\r\n    return (\r\n      (item.document_name || \"\").toLowerCase().includes(search) ||\r\n      formatCurrentDate(item.created_at).toLowerCase().includes(search) ||\r\n      (item.download || \"\").toLowerCase().includes(search)\r\n    );\r\n  });\r\n  //handle Share Report\r\n\r\n  const handleShareReport = () => {\r\n    const selectedReports = records.filter((row) => row.shared === true);\r\n    setIsModalOpenShareReport(true);\r\n  };\r\n  const returnrefresh = () => {\r\n    setIsModalOpenShareReport(false);\r\n  };\r\n  //handle Share Report\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <div className=\"fullpage d-block\">\r\n          <MainHeaderInvestor />\r\n          <SectionWrapper className=\"d-block py-5\">\r\n            <div className=\"container-lg\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-12\">\r\n                  <DataRoomSection className=\"d-flex flex-column gap-2\">\r\n                    <div className=\"titleroom d-flex justify-content-between align-items-center border-bottom pb-3\">\r\n                      <h4>\r\n                        Report: Entrepreneur ({datalist.first_name}{\" \"}\r\n                        {datalist.last_name}){\" \"}\r\n                      </h4>\r\n                    </div>\r\n                    <div className=\"d-flex flex-column justify-content-between align-items-start\">\r\n                      <DataTable\r\n                        customStyles={customStyles}\r\n                        columns={columns}\r\n                        data={filteredData}\r\n                        pagination\r\n                        highlightOnHover\r\n                        striped\r\n                        responsive\r\n                      />\r\n                    </div>\r\n                  </DataRoomSection>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </SectionWrapper>\r\n        </div>\r\n      </Wrapper>\r\n      {IsModalOpenShareReport && (\r\n        <InvestorShareReport\r\n          onClose={() => setIsModalOpenShareReport(false)}\r\n          records={records}\r\n          returnrefresh={returnrefresh}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Tophead,\r\n  Slan,\r\n  CenterNav,\r\n  MenuButtonWrapper,\r\n  NavItem,\r\n  NavList,\r\n} from \"../../components/Styles/MainHeadStyles\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { Globe, Menu } from \"lucide-react\";\r\nimport axios from \"axios\";\r\nexport default function MainHeaderInvestor() {\r\n  const [userdataa, setuserdataa] = useState(\"\");\r\n  const code = useParams();\r\n  const navigate = useNavigate();\r\n  const [getdatamodule, setgetdatamodule] = useState([]);\r\n  var apiURL = \"https://blueprintcatalyst.com/api/user/\";\r\n  var apiURLAiFile = \"https://blueprintcatalyst.com/api/user/aifile/\";\r\n  var apiURLINFile = \"https://blueprintcatalyst.com/api/user/investorreport/\";\r\n  const [InvestorData, setInvestorData] = useState(\"\");\r\n  useEffect(() => {\r\n    checkinvestorCode();\r\n  }, []);\r\n\r\n  const checkinvestorCode = async () => {\r\n    let formData = {\r\n      code: code,\r\n    };\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        apiURLINFile + \"checkinvestorCode\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n      if (res.data.results.length === 0) {\r\n        navigate(\"/\");\r\n      } else {\r\n        setInvestorData(res.data.results[0]);\r\n      }\r\n    } catch (err) {}\r\n  };\r\n  useEffect(() => {\r\n    getModules();\r\n  }, []);\r\n  function formatCurrentDate(input) {\r\n    const date = new Date(input); // ✅ Convert input to Date\r\n\r\n    if (isNaN(date)) return \"\"; // ⛔ Invalid date check\r\n\r\n    const months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\",\r\n    ];\r\n\r\n    const day = date.getDate();\r\n    const month = months[date.getMonth()];\r\n    const year = date.getFullYear();\r\n\r\n    const getOrdinal = (n) => {\r\n      if (n >= 11 && n <= 13) return \"th\";\r\n      switch (n % 10) {\r\n        case 1:\r\n          return \"st\";\r\n        case 2:\r\n          return \"nd\";\r\n        case 3:\r\n          return \"rd\";\r\n        default:\r\n          return \"th\";\r\n      }\r\n    };\r\n\r\n    return `${month} ${day}${getOrdinal(day)}, ${year}`;\r\n  }\r\n  const getModules = async () => {\r\n    let formData = {\r\n      id: \"\",\r\n    };\r\n    try {\r\n      const res = await axios.post(apiURL + \"getModules\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      setgetdatamodule(res.data.results);\r\n    } catch (err) {}\r\n  };\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setMenuOpen(!menuOpen);\r\n  };\r\n  const [creditBalanceData, setcreditBalanceData] = useState(\"\");\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  const handleClosepayPopup = () => {\r\n    setShowPopup(false);\r\n  };\r\n  const dateformate = (date) => {\r\n    const formattedDate = new Date(date).toLocaleDateString(\"en-GB\", {\r\n      year: \"numeric\",\r\n      month: \"long\",\r\n      day: \"numeric\",\r\n    });\r\n    return formattedDate;\r\n  };\r\n  return (\r\n    <>\r\n      <Tophead>\r\n        <div className=\"container-lg\">\r\n          <div className=\"d-flex gap-4 position-relative\">\r\n            <Link href=\"/\" className=\"logo\">\r\n              <img src=\"/logos/logo.png\" alt=\"logo\" />\r\n            </Link>\r\n            <MenuButtonWrapper>\r\n              <button type=\"button\" onClick={toggleMenu}>\r\n                <Menu strokeWidth={2} />\r\n              </button>\r\n            </MenuButtonWrapper>\r\n            <Slan>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn bg-dark text-white py-2 hoverbge creditb\"\r\n              >\r\n                Expired On {formatCurrentDate(InvestorData.expired_at)}\r\n              </button>\r\n            </Slan>\r\n          </div>\r\n        </div>\r\n      </Tophead>\r\n      {showPopup && creditBalanceData && (\r\n        <div\r\n          className=\"modal fade show d-block\"\r\n          style={{ backgroundColor: \"rgba(0, 0, 0, 0.5)\" }}\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"paymentModalLabel\"\r\n          aria-hidden=\"false\"\r\n        >\r\n          <div className=\"modal-dialog modal-dialog-centered modal-lg\">\r\n            <div className=\"modal-content rounded-4 shadow-lg p-4\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close position-absolute top-0 end-0 m-3\"\r\n                onClick={handleClosepayPopup}\r\n                aria-label=\"Close\"\r\n              ></button>\r\n\r\n              <>\r\n                <h2\r\n                  className=\"modal-title text-center fw-bold text-dark mb-4 \"\r\n                  id=\"paymentModalLabel\"\r\n                >\r\n                  Credit Balance\r\n                </h2>\r\n\r\n                <div className=\"mb-4\">\r\n                  <ul className=\"list-group list-group-flush mt-3\">\r\n                    <li className=\"list-group-item text-dark ps-0\">\r\n                      Access to Dataroom for 3 months (till{\" \"}\r\n                      <strong>\r\n                        {dateformate(creditBalanceData.valid_until)}\r\n                      </strong>\r\n                      )\r\n                    </li>\r\n\r\n                    <li className=\"list-group-item text-dark ps-0\">\r\n                      Due diligence documents generated:{\" \"}\r\n                      <strong>{creditBalanceData.total_generated}</strong> / 2\r\n                      allowed\r\n                    </li>\r\n                    <li className=\"list-group-item text-dark ps-0\">\r\n                      Credit Balance Left:{\" \"}\r\n                      <strong>{creditBalanceData.credit_balance}</strong>\r\n                    </li>\r\n                    {creditBalanceData.extra_generations > 0 && (\r\n                      <li className=\"list-group-item text-danger ps-0\">\r\n                        <strong>\r\n                          {creditBalanceData.extra_generations} additional\r\n                          generation (s) will incur €100 each\r\n                        </strong>\r\n                      </li>\r\n                    )}\r\n                  </ul>\r\n                </div>\r\n              </>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["Documentview","navigate","useNavigate","records","setrecords","useState","IsModalOpenShareReport","setIsModalOpenShareReport","apiURLINFile","code","useParams","datalist","setdatalist","useEffect","getInvestorInfocheck","async","formData","res","axios","post","headers","Accept","console","log","data","results","length","err","error","getInvestorReport","formatCurrentDate","input","date","Date","isNaN","day","getDate","month","getMonth","year","getFullYear","n","getOrdinal","columns","name","selector","row","date_report","sortable","document_name","cell","_jsx","className","children","type","onClick","handleDownload","downloadUrl","id","rel","title","FaDownload","ignoreRowClick","allowOverflow","button","url","window","open","searchText","setSearchText","filteredData","filter","item","search","toLowerCase","includes","created_at","download","_jsxs","_Fragment","Wrapper","MainHeaderInvestor","SectionWrapper","DataRoomSection","first_name","last_name","DataTable","customStyles","headCells","style","fontSize","pagination","highlightOnHover","striped","responsive","InvestorShareReport","onClose","returnrefresh","userdataa","setuserdataa","getdatamodule","setgetdatamodule","InvestorData","setInvestorData","checkinvestorCode","getModules","apiURL","menuOpen","setMenuOpen","creditBalanceData","setcreditBalanceData","showPopup","setShowPopup","Tophead","Link","href","src","alt","MenuButtonWrapper","toggleMenu","Menu","strokeWidth","Slan","expired_at","backgroundColor","tabIndex","role","handleClosepayPopup","valid_until","toLocaleDateString","total_generated","credit_balance","extra_generations"],"sourceRoot":""}