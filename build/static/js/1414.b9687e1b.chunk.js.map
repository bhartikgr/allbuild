{"version":3,"file":"static/js/1414.b9687e1b.chunk.js","mappings":"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","sources":["components/MediaRendererFile.jsx","pages/ReceivedMessagesChat.jsx","../node_modules/@tabler/icons-react/src/defaultAttributes.ts","../node_modules/@tabler/icons-react/src/createReactComponent.ts","../node_modules/@tabler/icons-react/src/icons/IconHome.ts"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport fileIcon from \"../assets/images/documents.png\"; // Your default icon\r\n\r\nconst MediaRendererFile = ({ url, onClick, className }) => {\r\n  const [mediaType, setMediaType] = useState(null); // \"image\", \"video\", or \"file\"\r\n  const [isIphone, setIsIphone] = useState(false);\r\n  const [base64Image, setBase64Image] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const userAgent = navigator.userAgent || \"\";\r\n    if (/iPhone|iPad|iPod/i.test(userAgent)) {\r\n      setIsIphone(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!url) return;\r\n\r\n    const extension = url.split(\".\").pop().toLowerCase();\r\n    const isAvif = extension === \"avif\";\r\n    const imageTypes = [\"jpg\", \"jpeg\", \"png\", \"gif\", \"webp\", \"avif\"];\r\n    const videoTypes = [\"mp4\", \"webm\", \"ogg\", \"mov\"];\r\n\r\n    if (isIphone && isAvif) {\r\n      fetch(url)\r\n        .then((res) => res.blob())\r\n        .then((blob) => {\r\n          const reader = new FileReader();\r\n          reader.onloadend = () => {\r\n            setBase64Image(reader.result);\r\n            setMediaType(\"image\");\r\n          };\r\n          reader.onerror = () => setMediaType(\"file\");\r\n          reader.readAsDataURL(blob);\r\n        })\r\n        .catch(() => setMediaType(\"file\"));\r\n    } else if (imageTypes.includes(extension)) {\r\n      setMediaType(\"image\");\r\n    } else if (videoTypes.includes(extension)) {\r\n      setMediaType(\"video\");\r\n    } else {\r\n      setMediaType(\"file\");\r\n    }\r\n  }, [url, isIphone]);\r\n\r\n  if (!mediaType) return <></>;\r\n\r\n  return (\r\n    <>\r\n      {mediaType === \"image\" ? (\r\n        isIphone && url.endsWith(\".avif\") ? (\r\n          <img\r\n            src={base64Image || \"\"}\r\n            alt=\"media\"\r\n            className={className}\r\n            style={{ maxWidth: \"100%\" }}\r\n            onClick={onClick}\r\n          />\r\n        ) : (\r\n          <picture>\r\n            {url.endsWith(\".avif\") && <source srcSet={url} type=\"image/avif\" />}\r\n            <img\r\n              src={url.endsWith(\".avif\") ? url.replace(\".avif\", \".jpg\") : url}\r\n              alt=\"media\"\r\n              className={className}\r\n              style={{ maxWidth: \"100%\" }}\r\n              onClick={onClick}\r\n            />\r\n          </picture>\r\n        )\r\n      ) : mediaType === \"video\" ? (\r\n        <video\r\n          controls\r\n          style={{ maxWidth: \"100%\", cursor: \"pointer\" }}\r\n          className={className}\r\n          onClick={onClick}\r\n        >\r\n          <source src={url} />\r\n        </video>\r\n      ) : (\r\n        <Link\r\n          to={url}\r\n          download\r\n          target=\"_blank\"\r\n          title=\"File\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"h-100 d-inline-block chatfiles\"\r\n        >\r\n          <img src={fileIcon} alt=\"File\" style={{ maxWidth: \"100%\" }} />\r\n        </Link>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MediaRendererFile;\r\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport ev1 from \"../assets/images/in1.png\";\nimport ev2 from \"../assets/images/in2.png\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport Headertwo from \"../components/Headertwo\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport axios from \"axios\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { HiDotsVertical } from \"react-icons/hi\";\nimport { RiHome6Line } from \"react-icons/ri\";\nimport { IconHome } from \"@tabler/icons-react\";\nimport { Report } from \"../components/Report\";\nimport { FaAngleDown } from \"react-icons/fa6\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport MediaRendererFile from \"../components/MediaRendererFile\";\nimport fileIcon from \"../assets/images/documents.png\";\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\nfunction ReceivedMessagesChat() {\n  const navigate = useNavigate(); // Correctly define the navigate function\n  const [seenn, setSeen] = useState(false); // Track if the function has been called\n  const [arrow, setarrow] = useState(false); // Track if the function has been called\n  const [showMenu, setShowMenu] = useState(false);\n  const [isonlyallbumPublic, setisonlyallbumPublic] = useState([]);\n  const toggleMenu = (index) => {\n    setShowMenu(showMenu === index ? null : index);\n    setShowMenu_Left(false);\n  };\n  const [refreshNotifications, setRefreshNotifications] = useState(true);\n  const inputRef = useRef(null);\n  const [Totalcountmessage, setTotalcountmessage] = useState(\"\");\n  const [ImagesFriends, setImagesFriends] = useState([]);\n  const [VideosFriends, setVideosFriends] = useState([]);\n  const [ImagesFriendsOwn, setImagesFriendsOwn] = useState([]);\n  const [VideosFriendsOwn, setVideosFriendsOwn] = useState([]);\n  const [PasswordId, setPasswordId] = useState(\"\");\n  const [redirectid, setredirectid] = useState(\"\");\n  const [Openpassword, setOpenpassword] = useState(false);\n  const [chooseallId_left, setchooseallId_left] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const chatEndRef = useRef(null); // Ref to the chat container\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [userblock, setuserblock] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [AllFriends, setAllFriends] = useState([]);\n  const apiUrl = \"https://backend.amourette.no/api/members/\";\n  const apiUrlProfile = \"https://backend.amourette.no/api/profile/\";\n  const [message, setMessage] = useState(\"\");\n  const [userdetail, setuserdetail] = useState(\"\");\n  const [messages, setmessages] = useState([]);\n  const [allmessages, setmessagesall] = useState([]);\n  const [LoginData, setLoginData] = useState(null);\n  const [error, seterror] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const [Isfile, setFiles] = useState([]);\n  const [to_id, setto_id] = useState(\"\");\n  const { slug } = useParams();\n  const [showPopError, setShowPopError] = useState(false);\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [isCheckfriend, setCheckfriend] = useState(\"\");\n  const [restr_message, setrestr_message] = useState(false);\n  const [albumdata, setalbumdata] = useState([]);\n  const [userper, setuserper] = useState(false);\n  const [isonlyallbum, setisonlyallbum] = useState([]);\n  const [isonlyallbumfriend, setisonlyallbumfriend] = useState([]);\n  const [UserDetail, setUserDetail] = useState(\"\");\n  const [IdArray, setIdArray] = useState([]);\n  // State to track the active button\n  const [activeIndex, setActiveIndex] = useState(0); // Default to the first button\n  const [searchText, setSearchText] = useState(\"\"); // Search query\n  const [filteredMessages, setFilteredMessages] = useState([]);\n\n  const [offset, setOffset] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n\n  const handleButtonClick = (index) => {\n    setActiveIndex(index); // Set the clicked button as active\n  };\n  const chatBoxRef = useRef(null);\n  useEffect(() => {\n    console.log(messages);\n    setFilteredMessages(messages);\n  }, [messages]);\n  const readmessageuser = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    if (to_id !== \"\") {\n      let formData = {\n        to_id: to_id,\n        user_id: userLogin.id,\n      };\n\n      try {\n        const res = await axios.post(apiUrl + \"readmessageuser\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Correct content type for file uploads\n          },\n        });\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n          console.error(\"Response error:\", err.response);\n        } else if (err.request) {\n          console.error(\"Request error:\", err.request);\n        } else {\n          console.error(\"General error:\", err.message);\n        }\n      }\n    }\n  };\n  const isScrolledToBottom = (element) => {\n    return element.scrollHeight - element.scrollTop === element.clientHeight;\n  };\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  // const handleKeyDown = (e) => {\n  //   // Prevent sending automatically when a file is added\n  //   if (e.key === \"Enter\" && !e.shiftKey) {\n  //     if (message.trim() !== \"\" || Isfile.length > 0) {\n  //       e.preventDefault();\n\n  //       // Ensure Enter key is manually pressed, not triggered by state update\n  //       if (document.activeElement === inputRef.current) {\n  //         handleSend();\n  //       }\n  //     }\n  //   }\n  // };\n  useEffect(() => {\n    if (to_id) {\n      fetchMessages(0); // or any logic requiring to_id\n    }\n  }, [to_id]);\n  useEffect(() => {\n    if (slug !== undefined) {\n      const getUserDetails = async (slug) => {\n        const storedUsername = localStorage.getItem(\"userLogin\");\n        const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n        let formData = { slug: slug, user_id: userLogin.id };\n        try {\n          const res = await axios.post(\n            apiUrlProfile + \"getUserSlug\",\n            formData,\n            {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n            }\n          );\n\n          if (res.data.row.length > 0) {\n            var respo = res.data.row[0];\n\n            setto_id(respo.id);\n\n            getUsercheckPermisson(respo.id);\n            getCheckfriend(respo.id);\n            chatsectionUser(respo.id);\n            checkuserblock(respo.id);\n\n            //getAllfriends();\n            console.log(messages);\n            setTimeout(() => {\n              if (chatEndRef.current) {\n                chatEndRef.current.scrollIntoView({\n                  behavior: \"smooth\",\n                  block: \"end\",\n                });\n                hanldeseenmessagenew();\n              }\n            }, 100);\n          } else {\n            navigate(\"/receivedmessages\");\n          }\n        } catch (err) {\n          // Enhanced error handling\n          if (err.response) {\n            console.error(\"Error response:\", err.response);\n          } else if (err.request) {\n            console.error(\"Request data:\", err.request);\n          } else {\n            console.error(\"Error message:\", err.message);\n          }\n        }\n      };\n      getUserDetails(slug);\n    }\n  }, [slug, LoginData]);\n  useEffect(() => {\n    if (to_id !== \"\") {\n      getmessageCount();\n    }\n  }, [to_id]);\n  const getmessageCount = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      to_id: to_id,\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getmessageCount\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Correct content type for file uploads\n        },\n      });\n\n      var alldata = res.data.results;\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n      const unreadCount = alldata.filter((item) => item.read === \"No\").length;\n\n      setTotalcountmessage(unreadCount);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request error:\", err.request);\n      } else {\n        console.error(\"General error:\", err.message);\n      }\n    }\n  };\n  const fetchMessages = async (newOffset) => {\n    setLoadingMore(true);\n    console.log(to_id);\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    if (!to_id) {\n      setLoadingMore(false);\n      return;\n    }\n    let formdata = {\n      user_id: userLogin.id,\n      to_id: to_id,\n      offset: newOffset,\n    };\n    const chatBox = chatBoxRef.current;\n    const previousScrollHeight = chatBox?.scrollHeight || 0;\n    try {\n      const res = await axios.post(apiUrl + \"getuserChatmessage\", formdata, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      const newMessages = res.data.results;\n      // if (newMessages.length === 0) {\n      //   setHasMore(false);\n      // } else {\n      //   setmessages((prevMessages) => {\n      //     const existingIds = new Set(prevMessages.map((msg) => msg.id)); // or msg.message_id\n      //     const filteredNewMessages = newMessages.filter(\n      //       (msg) => !existingIds.has(msg.id) // or msg.message_id\n      //     );\n      //     return [...prevMessages, ...filteredNewMessages];\n      //   });\n\n      //   setmessagesall(newMessages);\n      //   setOffset((prev) => prev + newMessages.length);\n      // }\n      //const reversed = [...newMessages].reverse(); // show newest last\n\n      setmessages(newMessages);\n      setFilteredMessages(newMessages);\n      // if (newOffset === 0) {\n      //   const reversed = [...newMessages].reverse(); // show newest last\n\n      //   setmessages(reversed);\n      //   setFilteredMessages(reversed);\n      // } else {\n      //   setFilteredMessages((prevMessages) => {\n      //     const existingIds = new Set(prevMessages.map((msg) => msg.id));\n      //     const filteredNewMessages = newMessages.filter(\n      //       (msg) => !existingIds.has(msg.id)\n      //     );\n\n      //     return [...filteredNewMessages.reverse(), ...prevMessages]; // prepend older messages\n      //   });\n      // }\n      // setOffset((prev) => prev + newMessages.length);\n      setTimeout(() => {\n        //const newScrollHeight = chatBoxRef.scrollHeight;\n        //chatBoxRef.scrollTop = newScrollHeight - previousScrollHeight;\n        // chatEndRef.current?.scrollIntoView({\n        //   behavior: \"smooth\",\n        //   block: \"end\",\n        // });\n        setarrow(false);\n      }, 50);\n    } catch (error) {\n      console.error(\"Error fetching messages\", error);\n    }\n\n    setLoadingMore(false);\n  };\n  const hasScrolledRef = useRef(false); // Ensures scroll runs only once\n\n  useEffect(() => {\n    if (!hasScrolledRef.current && filteredMessages.length > 0) {\n      const chatContainer = chatBoxRef.current;\n      if (chatContainer) {\n        chatContainer.scrollTop = chatContainer.scrollHeight;\n        hasScrolledRef.current = true;\n      }\n    }\n  }, [filteredMessages]);\n\n  const handleScroll = async () => {\n    const chatBox = chatBoxRef.current;\n\n    const bottomThreshold = 50;\n    const distanceFromBottom =\n      chatBox.scrollHeight - chatBox.scrollTop - chatBox.clientHeight;\n    const isAtBottom = distanceFromBottom <= bottomThreshold;\n    // if (chatBoxRef.current && isScrolledToBottom(chatBoxRef.current)) {\n\n    // }\n    const isAtTop = chatBox.scrollTop <= 7;\n    if (isAtTop && hasMore && !loadingMore) {\n      const oldScrollHeight = chatBox.scrollHeight; // ✅ here\n\n      await fetchMessages(offset); // fetch next 10 (older) messages\n\n      // Maintain scroll position after loading more messages\n      // setTimeout(() => {\n      //   const newScrollHeight = chatBox.scrollHeight;\n      //   chatBox.scrollTop = newScrollHeight - oldScrollHeight; // ✅ now it's in scope\n      // }, 1000);\n    }\n    setarrow(isAtBottom);\n    if (isAtBottom) {\n      setarrow(true);\n      hanldeseenmessage();\n      // const storedUsername = localStorage.getItem(\"userLogin\");\n      // const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n      // if (to_id !== \"\") {\n      //   let formData = {\n      //     user_id: userLogin.id,\n      //     to_id: to_id,\n      //   };\n\n      //   try {\n      //     const res = await axios.post(apiUrl + \"messageseen\", formData, {\n      //       headers: {\n      //         Accept: \"application/json\",\n      //         \"Content-Type\": \"application/json\",\n      //       },\n      //     });\n\n      //     if (res.data.status === \"1\") {\n      //       chatsectionUser(to_id);\n      //     }\n      //     getmessageCount();\n      //   } catch (err) {\n      //     // Enhanced error handling\n      //     if (err.response) {\n      //       console.error(\"Error response:\", err.response);\n      //     } else if (err.request) {\n      //       console.error(\"Request data:\", err.request);\n      //     } else {\n      //       console.error(\"Error message:\", err.message);\n      //     }\n      //   }\n      // }\n    } else {\n    }\n  };\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        setSelectedImage(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [setSelectedImage]);\n\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    var st = userLogin.id;\n    if (userLogin && to_id) {\n      // Ensure `to_id` is not empty before updating\n      setIdArray([userLogin.id, to_id]);\n    }\n  }, [to_id]);\n  const updateReadMessagesread = async () => {};\n  const updateReadMessages = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    const lastMessage = allmessages[allmessages.length - 1];\n\n    if (lastMessage !== undefined && lastMessage !== null) {\n      let formData = {\n        user_id: userLogin.id,\n\n        to_id: to_id,\n      };\n      try {\n        const res = await axios.post(apiUrl + \"messageseen\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (res.data.status === \"1\") {\n          chatsectionUser(to_id);\n        }\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n          console.error(\"Error response:\", err.response);\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    updateReadMessagesread();\n  }, [messages]);\n  // useEffect(() => {\n  //   const chatBox = chatBoxRef.current;\n  //   if (!chatBox) return;\n\n  //   chatBox.addEventListener(\"scroll\", handleScroll);\n\n  //   return () => {\n  //     chatBox.removeEventListener(\"scroll\", handleScroll);\n  //   };\n  // }, [arrow]);\n\n  useEffect(() => {\n    const chatBox = chatBoxRef.current;\n    if (!chatBox) return;\n\n    chatBox.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      chatBox.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [arrow, offset, hasMore, loadingMore]);\n\n  // Scroll to the bottom when new messages arrive\n\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    setLoginData(userLogin);\n  }, []); // Remove LoginData from the dependency array to prevent unnecessary calls\n\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\"); // Adjust port if needed\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        if (!receivedMessage) {\n          console.error(\"Received invalid JSON:\", event.data);\n          return;\n        }\n        const senderId = Number(receivedMessage.user_id); // Sender's ID (e.g. 5)\n        const receiverId = Number(receivedMessage.to_id); // Receiver's ID (e.g. 1)\n        const loggedInUserId = Number(LoginData.id); // Currently logged-in user's ID (e.g. 1 or 5)\n\n        var ttt = Number(to_id);\n\n        if (\n          receivedMessage.event === \"DeleteChatMessage\" ||\n          receivedMessage.event === \"DeleteChatMessage_other\"\n        ) {\n          if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n            setMessageFormessage(receivedMessage.id);\n            chatsectionUserRefresh();\n            setRefreshNotifications(true);\n          }\n        }\n        if (receivedMessage.event === \"DeleteChatMessageMultiple\") {\n          if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n            setMessageForultiple(receivedMessage.id);\n            chatsectionUserRefresh();\n            setRefreshNotifications(true);\n          }\n        }\n        if (\n          receivedMessage.event !== \"DeleteChatMessageMultiple\" &&\n          receivedMessage.event !== \"DeleteChatMessage\"\n        ) {\n          if (receivedMessage.event === \"MessageseenScroll\") {\n            if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n              //setto_id(receiverId);\n              getSEndMessagequick(receivedMessage, senderId, receiverId);\n              setRefreshNotifications(true);\n            }\n          }\n          // Ensure message is only seen by the sender or receiver\n          if (receivedMessage.event === \"ChatMessage\") {\n            if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n              // setto_id(receiverId);\n              getSEndMessagequick(receivedMessage, senderId, receiverId);\n              setRefreshNotifications(true);\n              //hanldeseenmessagenotscroll();\n              // If the logged-in user is the sender, auto-scroll\n\n              if (loggedInUserId === senderId) {\n                setTimeout(() => {\n                  chatEndRef.current.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"end\",\n                  });\n                }, 350);\n              } else {\n              }\n            }\n            // if (loggedInUserId === senderId || loggedInUserId === receiverId) {\n            //   getSEndMessage(receivedMessage, senderId, receiverId);\n            //   setRefreshNotifications(true);\n            //   // If the logged-in user is the sender, auto-scroll\n\n            //   if (loggedInUserId === receiverId) {\n            //     //updateReadMessages();\n            //   }\n            //   if (loggedInUserId === senderId) {\n            //     setTimeout(() => {\n            //       chatEndRef.current.scrollIntoView({\n            //         behavior: \"smooth\",\n            //         block: \"nearest\",\n            //       });\n            //     }, 350);\n            //   } else {\n            //     console.log(\"This is a receiver's message:\", receivedMessage);\n            //   }\n            // } else {\n            //   // Ignore the message for any other users\n            //   console.log(\"Message ignored for this user:\", loggedInUserId);\n            // }\n          }\n        }\n      } catch (error) {\n        console.error(\"Failed to parse WebSocket message:\", error);\n        console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [LoginData, to_id, IdArray]);\n  const getSEndMessagequick = async (form, n, t) => {\n    let formData = {\n      data: form,\n      user_id: n,\n      to_id: t,\n    };\n    console.log(formData, \"que\");\n    try {\n      const res = await axios.post(apiUrl + \"getSEndMessagequick\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Correct content type for file uploads\n        },\n      });\n\n      var alldata = res.data.results;\n      console.log(alldata, \"check\");\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      if (t === userLogin.id) {\n        if (alldata.length > 0) {\n          const unreadCount = alldata.filter(\n            (item) => item.read === \"No\"\n          ).length;\n          console.log(unreadCount);\n          getmessageCount();\n          //setTotalcountmessage(unreadCount);\n        }\n      }\n      // Assuming res.data.results is the array of messages you want to append\n      if (res.data && Array.isArray(res.data.results)) {\n        // Update the messages state with new messages appended\n\n        setmessages((prevMessages) => [...prevMessages, ...res.data.results]);\n        setmessagesall(res.data.results);\n      } else {\n        console.error(\"No valid results found in the response:\", res.data);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request error:\", err.request);\n      } else {\n        console.error(\"General error:\", err.message);\n      }\n    }\n  };\n  const getSEndMessage = async (form, n, t) => {\n    let formData = {\n      data: form,\n      user_id: n,\n      to_id: t,\n    };\n\n    console.log(formData, \"que\");\n    try {\n      const res = await axios.post(apiUrl + \"getSEndMessage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Correct content type for file uploads\n        },\n      });\n\n      var alldata = res.data.results;\n      console.log(alldata, \"check\");\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      if (t === userLogin.id) {\n        if (alldata.length > 0) {\n          const unreadCount = alldata.filter(\n            (item) => item.read === \"No\"\n          ).length;\n\n          getmessageCount();\n        }\n      }\n\n      if (res.data && Array.isArray(res.data.results)) {\n        setTimeout(() => {\n          setmessages((prevMessages) => [...prevMessages, ...res.data.results]);\n          setmessagesall(res.data.results);\n        }, 200);\n      } else {\n        console.error(\"No valid results found in the response:\", res.data);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request error:\", err.request);\n      } else {\n        console.error(\"General error:\", err.message);\n      }\n    }\n  };\n\n  const getUsercheckPermisson = async (toid) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = { slug: slug, user_id: userLogin.id, to_id: toid };\n    console.log(\"kl\", formData);\n    try {\n      const res = await axios.post(\n        apiUrlProfile + \"getUsercheckPermisson\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      console.log(\"kl\", res.data.row);\n      if (res.data.row !== undefined) {\n        var respo = res.data.row[0];\n        setuserdetail(respo);\n      } else {\n        // navigate(\"/receivedmessages\");\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const checkuserblock = async (toidd) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      to_id: toidd,\n    };\n    console.log(formData, \"checkblock\");\n    try {\n      const res = await axios.post(apiUrl + \"checkuserblock\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Correct content type for file uploads\n        },\n      });\n\n      console.log(res.data);\n      if (res.data.result.length > 0) {\n        setuserblock(true);\n      } else {\n        setuserblock(false);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request error:\", err.request);\n      } else {\n        console.error(\"General error:\", err.message);\n      }\n    }\n  };\n  const chatsectionUser = async (id) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    // Ensure LoginData is not null\n    if (!userLogin || !userLogin.id) {\n      console.error(\"Login data is not available\");\n      return; // Exit the function if LoginData is null\n    }\n\n    let formData = {\n      user_id: userLogin.id,\n      to_id: id,\n      offset: 0,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getuserChatmessage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n\n      //setmessages(respo);\n      //setmessagesall(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const chatsectionUserRefresh = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    // Ensure LoginData is not null\n    if (!userLogin || !userLogin.id) {\n      console.error(\"Login data is not available\");\n      return; // Exit the function if LoginData is null\n    }\n\n    let formData = {\n      user_id: userLogin.id,\n      to_id: to_id,\n      offset: 0,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getuserChatmessage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n\n      // setmessages(respo);\n      // setmessagesall(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const setMessageFormessage = (recid) => {\n    setFilteredMessages((prevMessages) =>\n      prevMessages.filter((msg) => msg.id !== recid)\n    );\n  };\n  const setMessageForultiple = (recidArray) => {\n    setFilteredMessages(\n      (prevMessages) =>\n        prevMessages.filter((msg) => !recidArray.includes(msg.id)) // Remove all matching IDs\n    );\n  };\n  const calculateAge = (birthday) => {\n    const birthDate = new Date(birthday);\n    const today = new Date();\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDifference = today.getMonth() - birthDate.getMonth();\n\n    // Adjust age if the birthday hasn't occurred yet this year\n    if (\n      monthDifference < 0 ||\n      (monthDifference === 0 && today.getDate() < birthDate.getDate())\n    ) {\n      age--;\n    }\n\n    return age;\n  };\n  const MAX_FILE_SIZE_MB = 25;\n  const getFileSrc = (fileUrl) => {\n    const allowedExtensions = [\".png\", \".jpg\", \".jpeg\", \".gif\"];\n    return allowedExtensions.some((ext) => fileUrl.endsWith(ext))\n      ? fileUrl\n      : null; // Return null if not an image\n  };\n  const handleFileChange = (e) => {\n    const selectedFiles = Array.from(e.target.files);\n    const validFiles = [];\n    const errorFiles = [];\n\n    selectedFiles.forEach((file) => {\n      if (file.size / 1024 / 1024 <= MAX_FILE_SIZE_MB) {\n        validFiles.push(file);\n      } else {\n        errorFiles.push(file);\n      }\n    });\n\n    if (errorFiles.length > 0) {\n      seterror(\n        `Some files are larger than ${MAX_FILE_SIZE_MB} MB and were not added.`\n      );\n    } else {\n      seterror(\"\");\n    }\n\n    setFiles((prevFiles) => [...prevFiles, ...validFiles]);\n\n    if (inputRef.current) {\n      inputRef.current.focus(); // Focus back to input field\n\n      // Manually trigger Enter key event\n      const event = new KeyboardEvent(\"keydown\", {\n        key: \"Enter\",\n        code: \"Enter\",\n        keyCode: 13,\n        bubbles: true,\n      });\n      inputRef.current.dispatchEvent(event);\n    }\n  };\n\n  const isButtonDisabled =\n    (!message.trim() && Isfile.length === 0) || restr_message; // Enable button if either input is filled\n  const handleInputChange = (e) => {\n    const inputValue = e.target.value;\n    setMessage(inputValue);\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    if (hasRestrictedWord) {\n      setrestr_message(true);\n    } else {\n      setrestr_message(false);\n    }\n  };\n  const removeImage = (index) => {\n    setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index)); // Remove image by index\n  };\n  const MAX_WORDS = 2000;\n  const countWords = (text) => {\n    return text.trim() ? text.split(/\\s+/).length : 0; // Count words by splitting on whitespace\n  };\n  const handleSend = async () => {\n    setShowMenu(false);\n    if (userblock === true) {\n      setShowPopError(true);\n      setPoperrorMessage(\"User is blocked\");\n      setTimeout(() => {\n        setShowPopError(false);\n        setPoperrorMessage(\"\");\n      }, 1500);\n    } else {\n      setarrow(true);\n      const formData = new FormData();\n      setspinner(true);\n      var commentText = message?.trim();\n      console.log(commentText);\n\n      if (commentText !== \"\") {\n        const currentWordCount = countWords(commentText);\n        if (currentWordCount < 2000) {\n          formData.append(\"message\", message);\n          formData.append(\"fileType\", \"chats\");\n          formData.append(\"user_id\", LoginData.id);\n          formData.append(\"to_id\", to_id);\n          Isfile.forEach((file) => {\n            formData.append(\"files\", file); // Use the key 'files' for your backend to handle multiple files\n          });\n\n          console.log(\"Message:\", message);\n          console.log(\"Files:\", Isfile);\n\n          try {\n            const res = await axios.post(apiUrl + \"saveUserChat\", formData, {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"multipart/form-data\", // Correct content type for file uploads\n              },\n            });\n\n            setspinner(false);\n            var respo = res.data;\n            //setMessages((prevMessages) => [...prevMessages, res.data]); // Update messages state\n\n            // Scroll to the bottom of the chat\n            if (chatEndRef.current) {\n              chatEndRef.current.scrollIntoView({\n                behavior: \"smooth\",\n                block: \"end\",\n              });\n            }\n            //await getChatAfterSave();\n            setTimeout(() => {\n              if (chatEndRef.current) {\n                chatEndRef.current.scrollIntoView({\n                  behavior: \"smooth\",\n                  block: \"end\",\n                });\n              }\n              setTimeout(() => {\n                setarrow(true);\n              }, 50);\n            }, 500);\n          } catch (err) {\n            // Enhanced error handling\n            if (err.response) {\n              console.error(\"Response error:\", err.response);\n            } else if (err.request) {\n              console.error(\"Request error:\", err.request);\n            } else {\n              console.error(\"General error:\", err.message);\n            }\n          }\n\n          // Reset message and files after sending\n          setMessage(\"\");\n          setFiles([]);\n        } else {\n          setspinner(false);\n          setShowPopError(true);\n          setPoperrorMessage(\n            `Comment cannot exceed ${MAX_WORDS} words. Currently: ${currentWordCount} words.`\n          );\n          setTimeout(() => {\n            setShowPopError(false);\n            setPoperrorMessage(\"\");\n          }, 1500);\n        }\n      } else {\n        formData.append(\"message\", message);\n        formData.append(\"fileType\", \"chats\");\n        formData.append(\"user_id\", LoginData.id);\n        formData.append(\"to_id\", to_id);\n        Isfile.forEach((file) => {\n          formData.append(\"files\", file); // Use the key 'files' for your backend to handle multiple files\n        });\n\n        console.log(\"Message:\", message);\n        console.log(\"Files:\", Isfile);\n\n        try {\n          const res = await axios.post(apiUrl + \"saveUserChat\", formData, {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"multipart/form-data\", // Correct content type for file uploads\n            },\n          });\n          setspinner(false);\n          var respo = res.data;\n          //setMessages((prevMessages) => [...prevMessages, res.data]); // Update messages state\n\n          // Scroll to the bottom of the chat\n          if (chatEndRef.current) {\n            chatEndRef.current.scrollIntoView({\n              behavior: \"smooth\",\n              block: \"nearest\",\n            });\n          }\n          //await getChatAfterSave();\n          setTimeout(() => {\n            if (chatEndRef.current) {\n              chatEndRef.current.scrollIntoView({\n                behavior: \"smooth\",\n                block: \"nearest\",\n              });\n            }\n          }, 500);\n        } catch (err) {\n          // Enhanced error handling\n          if (err.response) {\n            console.error(\"Response error:\", err.response);\n          } else if (err.request) {\n            console.error(\"Request error:\", err.request);\n          } else {\n            console.error(\"General error:\", err.message);\n          }\n        }\n\n        // Reset message and files after sending\n        setMessage(\"\");\n        setFiles([]);\n      }\n    }\n  };\n  const getCheckfriend = async (id) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      id: id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getCheck_friendUser\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      if (res.data.results.length > 0) {\n        setCheckfriend(true);\n      } else {\n        setCheckfriend(false);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const requestToview = async (albumid) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    if (userblock === true) {\n      setShowPopError(true);\n      setPoperrorMessage(\"User is blocked\");\n      setTimeout(() => {\n        setShowPopError(false);\n        setPoperrorMessage(\"\");\n      }, 1500);\n    } else {\n      let formDataa = {\n        user_id: userLogin.id,\n        to_id: to_id,\n      };\n      console.log(formDataa);\n      try {\n        const res = await axios.post(apiUrl + \"getcheckfriendss\", formDataa, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        var respoo = res.data.is_friend;\n        console.log(respoo);\n        if (respoo === true) {\n          let formData = {\n            user_id: userLogin.id,\n            to_id: to_id,\n            albumid: albumid,\n          };\n          // console.log(formData);\n\n          try {\n            const res = await axios.post(apiUrl + \"requestToview\", formData, {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\", // Correct content type for file uploads\n              },\n            });\n\n            var respo = res.data;\n            if (respo.status === \"2\") {\n              setShowPopSuccess(true);\n              setPopsuccessMessage(\"Request allready sent\");\n            }\n            if (respo.status === \"3\") {\n              // setShowPopSuccess(true);\n              //setPopsuccessMessage(\"Request confirmed.\");\n            }\n            if (respo.status === \"1\") {\n              setShowPopSuccess(true);\n              setPopsuccessMessage(\"Request successfully sent\");\n            }\n            //getUserDetails(slug);\n            //  console.log(respo);\n            setTimeout(() => {\n              setShowPopSuccess(false);\n              setPopsuccessMessage(\"\");\n            }, 1000);\n          } catch (err) {\n            // Enhanced error handling\n            if (err.response) {\n              console.error(\"Response error:\", err.response);\n            } else if (err.request) {\n              console.error(\"Request error:\", err.request);\n            } else {\n              console.error(\"General error:\", err.message);\n            }\n          }\n        } else {\n          setShowPopError(true);\n          setPoperrorMessage(\n            \"You cannot make this request because you are not friend.\"\n          );\n          setTimeout(() => {\n            setShowPopError(false);\n            setPoperrorMessage(\"\");\n          }, 1500);\n        }\n        // console.log(\"cjecl\");\n        // console.log(respo);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          // console.error(\"Request data:\", err.request);\n        } else {\n          //console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n\n  const [isPopupOpen1, setIsPopupOpen1] = useState(false);\n\n  const openPopup1 = () => {\n    setIsPopupOpen1(true);\n    // Disable body scroll when popup is open\n    document.body.style.overflowY = \"hidden\";\n  };\n\n  const closePopup1 = () => {\n    setIsPopupOpen1(false);\n    // Re-enable body scroll when popup is closed\n    document.body.style.overflowY = \"auto\";\n  };\n  const handlereport = async () => {\n    setIsPopupOpen1(true);\n    console.log(\"d\");\n  };\n  const lastMessage = messages[messages.length - 1];\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n\n    console.log(t(\"LeftMenu_yourprofile\")); // Testing translation\n  }, [i18n, t]);\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  var apiUrll = \"https://backend.amourette.no/api/members/\";\n  useEffect(() => {\n    const get_albumStatusonly = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      if (to_id !== \"\") {\n        let formData = {\n          user_id: to_id,\n        };\n\n        try {\n          const res = await axios.post(\n            apiUrll + \"getalbumStatusonly\",\n            formData,\n            {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n              },\n            }\n          );\n          console.log(res.data, \"getalbumStatusonly\");\n          //setisonlyallbum(res.data.results);\n        } catch (err) {\n          // Enhanced error handling\n          if (err.response) {\n          } else if (err.request) {\n            //console.error(\"Request data:\", err.request);\n          } else {\n            //console.error(\"Error message:\", err.message);\n          }\n        }\n      }\n    };\n    get_albumStatusonly();\n  }, [to_id]);\n  useEffect(() => {\n    const getUserDetailsfetch = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        to_id: to_id,\n        user_id: userLogin.id,\n        id: to_id,\n      };\n      //console.log(formData);\n      try {\n        const res = await axios.post(\n          apiUrl + \"getUserDetailMemberOther\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n            },\n          }\n        );\n\n        setisonlyallbum(res.data.results);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          // console.error(\"Request data:\", err.request);\n        } else {\n          // console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    getUserDetailsfetch();\n  }, [to_id]);\n  useEffect(() => {\n    const getalbumStatus = async () => {\n      let formData = {\n        user_id: userdetail.id,\n        status: userdetail.album_setting_status,\n      };\n      console.log(formData, \"fff\");\n      try {\n        const res = await axios.post(apiUrll + \"getalbumStatus\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n\n        setalbumdata(res.data.results);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    getalbumStatus();\n  }, [userdetail]);\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    console.log(\"*****************\", userdetail.id);\n    if (String(userLogin.id) === String(userdetail.id)) {\n      setuserper(true);\n    } else {\n      setuserper(false);\n    }\n  }, [userper, userdetail]);\n  useEffect(() => {\n    const getAllfriendss = async () => {\n      let formData = {\n        user_id: to_id,\n      };\n      console.log(formData);\n      try {\n        const res = await axios.post(apiUrl + \"getAllfriend_s\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        var respo = res.data.results;\n\n        setAllFriends(respo);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    if (to_id !== \"\") {\n      getAllfriendss();\n    }\n  }, [to_id]);\n  // const getAllfriends = async () => {\n  //   let formData = {\n  //     user_id: to_id,\n  //   };\n  //   console.log(formData);\n  //   try {\n  //     const res = await axios.post(apiUrl + \"getAllfriend_s\", formData, {\n  //       headers: {\n  //         Accept: \"application/json\",\n  //         \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n  //       },\n  //     });\n  //     var respo = res.data.results;\n\n  //     setAllFriends(respo);\n  //   } catch (err) {\n  //     // Enhanced error handling\n  //     if (err.response) {\n  //     } else if (err.request) {\n  //       console.error(\"Request data:\", err.request);\n  //     } else {\n  //       console.error(\"Error message:\", err.message);\n  //     }\n  //   }\n  // };\n  const [showPicker, setShowPicker] = useState(false);\n  const pickerRef = useRef(null); // hold refs for each index\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (pickerRef.current && !pickerRef.current.contains(event.target)) {\n        setShowPicker(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  const handleEmojiClick = (emojiObject) => {\n    setMessage((prevMessage) => prevMessage + emojiObject.emoji);\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n    setShowPicker(false); // Hide picker after selecting an emoji\n  };\n  const handlesearchmessage = (e) => {\n    const searchValue = e.target.value.toLowerCase();\n    setSearchText(searchValue);\n\n    if (!searchValue) {\n      setFilteredMessages(messages); // Reset to all messages when search is empty\n      return;\n    }\n\n    const filtered = messages.filter(\n      (chat) =>\n        chat && // Ensure `chat` exists\n        chat.message && // Ensure properties exist\n        chat.message.toLowerCase().includes(searchValue)\n    );\n\n    setFilteredMessages(filtered);\n  };\n  const formatTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Ensure the date string is correctly formatted\n    const postDate = new Date(dateString);\n    if (isNaN(postDate)) return \"Invalid Date\";\n\n    // Adjust time by adding 1 hour (3600000 milliseconds)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Format using Intl.DateTimeFormat with Europe/Oslo timezone\n    const options = {\n      timeZone: \"Europe/Oslo\",\n      day: \"2-digit\",\n      month: \"short\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: true, // Use AM/PM format\n    };\n\n    const formatter = new Intl.DateTimeFormat(\"en-US\", options);\n    return formatter.format(adjustedPostDate);\n  };\n  const handledeletemainpopup = async (id) => {\n    let deleteev = {\n      id: id,\n      user_id: LoginData.id,\n      to_id: to_id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"deletemessagechat\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      setShowMenu(false);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const [chooseallId, setchooseallId] = useState([]);\n  const [showdeletebutton, setshowdeletebutton] = useState(false);\n  const [selectall, setselectall] = useState(false);\n  const handlealldelete = async () => {\n    let deleteev = {\n      id: chooseallId,\n      user_id: LoginData.id,\n      to_id: to_id,\n      other_id: chooseallId_left,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"deletemultiplemessagechat\",\n        deleteev,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      setTimeout(() => {\n        setchooseallId([]);\n        setshowdeletebutton(false);\n        setselectall(false);\n        setchooseallId_left([]);\n        setshowdeletebutton(false);\n      }, 500);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const handleCloseDeletePopup = () => {\n    setShowMenu(false);\n    setShowMenu_Left(false);\n  };\n  const handleallselect = () => {\n    setselectall(!selectall);\n  };\n  const handlechooseAll = (id) => {\n    setchooseallId(\n      (prev) =>\n        prev.includes(id)\n          ? prev.filter((item) => item !== id) // Remove if already selected\n          : [...prev, id] // Add if not selected\n    );\n  };\n  useEffect(() => {\n    if (chooseallId_left.length > 0 || chooseallId.length > 0) {\n      setshowdeletebutton(true);\n    } else {\n      setshowdeletebutton(false);\n    }\n  }, [chooseallId_left, chooseallId]);\n\n  const [showMenu_Left, setShowMenu_Left] = useState(false);\n  const handlechooseAll_left = (id) => {\n    setchooseallId_left(\n      (prev) =>\n        prev.includes(id)\n          ? prev.filter((item) => item !== id) // Remove if already selected\n          : [...prev, id] // Add if not selected\n    );\n  };\n\n  const toggleMenu_Left = (index) => {\n    setShowMenu_Left(showMenu_Left === index ? null : index);\n    setShowMenu(false);\n  };\n  const handledeletemainpopup_Left = async (id) => {\n    let deleteev = {\n      id: id,\n      user_id: LoginData.id,\n      to_id: to_id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"deletemessagechat_Left\",\n        deleteev,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const confirmPassword = (useralbumid, passid) => {\n    setShowPopSuccess(false);\n    setPopsuccessMessage(\"\");\n    setPasswordId(useralbumid);\n    setredirectid(passid);\n    const newTabUrl = `/previewimages/${passid}`;\n    window.open(newTabUrl, \"_blank\");\n    //tOpenpassword(true);\n  };\n  useEffect(() => {\n    const getUserDetailsFriends = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n      let formData = {\n        to_id: to_id,\n        user_id: userLogin.id,\n        id: to_id,\n      };\n\n      try {\n        const res = await axios.post(\n          apiUrl + \"getUserDetailsFriends\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n\n        // Extract the images/videos from the API response\n        const mediaList = res.data.results;\n\n        // Initialize empty arrays for images and videos\n        let images = [];\n        let videos = [];\n\n        // Supported image and video extensions\n        const imageExtensions = [\"jpg\", \"jpeg\", \"png\", \"gif\", \"webp\"];\n        const videoExtensions = [\"mp4\", \"mov\", \"avi\", \"mkv\", \"webm\"];\n\n        mediaList.forEach((media) => {\n          if (typeof media.images === \"string\") {\n            let mediaArray = JSON.parse(media.images);\n\n            mediaArray.forEach((file) => {\n              images.push(file);\n            });\n          }\n        });\n        console.log(images);\n        setImagesFriends(images);\n        setVideosFriends(videos);\n      } catch (err) {\n        console.error(\"Error fetching data:\", err);\n      }\n    };\n\n    getUserDetailsFriends();\n  }, [to_id]);\n\n  useEffect(() => {\n    const getUserDetailsOwn = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n      let formData = {\n        to_id: to_id,\n        user_id: userLogin.id,\n        id: to_id,\n      };\n\n      try {\n        const res = await axios.post(apiUrl + \"getUserDetailsOwn\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        // Extract the images/videos from the API response\n        const mediaList = res.data.results;\n\n        // Initialize empty arrays for images and videos\n        let images = [];\n        let videos = [];\n\n        // Supported image and video extensions\n        const imageExtensions = [\"jpg\", \"jpeg\", \"png\", \"gif\", \"webp\"];\n        const videoExtensions = [\"mp4\", \"mov\", \"avi\", \"mkv\", \"webm\"];\n\n        mediaList.forEach((media) => {\n          if (typeof media.images === \"string\") {\n            let mediaArray = JSON.parse(media.images);\n\n            mediaArray.forEach((file) => {\n              images.push(file);\n            });\n          }\n        });\n        setImagesFriendsOwn(images);\n        setVideosFriendsOwn(videos);\n      } catch (err) {\n        console.error(\"Error fetching data:\", err);\n      }\n    };\n\n    getUserDetailsOwn();\n  }, [to_id]);\n  useEffect(() => {\n    const getUserDetailsfetchUserdata = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        to_id: to_id,\n        user_id: userLogin.id,\n        id: to_id,\n      };\n      //console.log(formData);\n      try {\n        const res = await axios.post(apiUrl + \"getUserDetailMember\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n\n        if (res.data.row !== undefined && res.data.row.length > 0) {\n          var respo = res.data.row[0];\n          setUserDetail(respo);\n        } else {\n        }\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          // console.error(\"Request data:\", err.request);\n        } else {\n          // console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    getUserDetailsfetchUserdata();\n  }, [to_id]);\n  const handleModalClose = async () => {\n    setOpenpassword(false);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      password: e.target.password.value,\n      user_id: userLogin.id,\n      idd: PasswordId,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"checkprotectedpassword\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      var respo = res.data;\n      console.log(respo);\n      if (respo.status === \"2\") {\n        setShowPopError(true);\n        setPoperrorMessage(respo.message);\n        setTimeout(() => {\n          setShowPopError(\"\");\n        }, 1000);\n      } else {\n        setShowPopSuccess(true);\n        setPopsuccessMessage(respo.message);\n        setTimeout(() => {\n          navigate(`/previewimages/${redirectid}`);\n          setShowPopSuccess(false);\n          setOpenpassword(false);\n          setPopsuccessMessage(\"\");\n        }, 1500);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    const get_albumStatusonlyPublic = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        user_id: to_id,\n      };\n\n      try {\n        const res = await axios.post(\n          apiUrl + \"get_albumStatusonlyPublic\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n            },\n          }\n        );\n        // console.log(res.data.results);\n        setisonlyallbumPublic(res.data.results);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          //console.error(\"Request data:\", err.request);\n        } else {\n          //console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    if (to_id !== \"\") {\n      get_albumStatusonlyPublic();\n    }\n  }, [to_id]);\n  useEffect(() => {\n    const get_albumStatusonlyfriend = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        user_id: to_id,\n      };\n\n      try {\n        const res = await axios.post(\n          apiUrl + \"get_albumStatusonlyfriend\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n            },\n          }\n        );\n        console.log(res.data.results);\n        setisonlyallbumfriend(res.data.results);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          //console.error(\"Request data:\", err.request);\n        } else {\n          //console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    if (to_id !== \"\") {\n      get_albumStatusonlyfriend();\n    }\n  }, [to_id]);\n\n  const hanldeseenmessage = async () => {\n    // console.log(seenn);\n    if (!to_id || arrow) return;\n    // setSeen(true);\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      to_id: to_id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      setTimeout(() => {\n        chatEndRef.current.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\",\n        });\n      }, 350);\n      getmessageCount();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const hanldeseenmessagenew = async () => {\n    // console.log(seenn);\n    if (!to_id || arrow) return;\n    // setSeen(true);\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      to_id: to_id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      console.log(\"ll\");\n\n      getmessageCount();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const hanldeseenmessageAll = async () => {\n    if (!to_id) return;\n\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    let formData = {\n      user_id: userLogin.id,\n      to_id: to_id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      // Smooth scroll to bottom\n      const chatContainer = chatBoxRef.current;\n      if (chatContainer) {\n        chatContainer.scrollTop = chatContainer.scrollHeight;\n      }\n\n      // Wait until the scroll animation completes (~300ms)\n      setTimeout(() => {\n        setarrow(true); // Hide the button\n        getmessageCount(); // Optionally refresh message count\n      }, 400);\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const hanldeseenmessagenotscroll = async () => {\n    if (to_id !== \"\") {\n      let formData = {\n        user_id: userLogin.id,\n        to_id: to_id,\n      };\n      console.log(formData);\n      try {\n        const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        setTimeout(() => {\n          setarrow(true);\n        }, 350);\n        getmessageCount();\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n          console.error(\"Error response:\", err.response);\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    console.log(filteredMessages);\n    if (filteredMessages.length <= 4) {\n      readmessageuser();\n    }\n  }, [filteredMessages]);\n  //slider\n  const allImagesRef = useRef([]);\n  useEffect(() => {\n    const allImages = [];\n\n    if (Array.isArray(isonlyallbumPublic)) {\n      isonlyallbumPublic.forEach((item) => {\n        if (item.visibility === \"Public_visible\" && item.addToAlbum === \"No\") {\n          try {\n            const parsedImages = JSON.parse(item.images);\n            allImages.push(...parsedImages);\n          } catch (e) {\n            console.error(\"Image parse error\", e);\n          }\n        }\n      });\n    }\n\n    if (userLogin.id === Number(to_id) && Array.isArray(ImagesFriendsOwn)) {\n      ImagesFriendsOwn.forEach((img) => {\n        allImages.push(img); // ✅ img is already a URL\n      });\n    }\n\n    allImagesRef.current = allImages;\n  }, [isonlyallbumPublic, ImagesFriendsOwn]);\n\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (!selectedImage) return;\n\n      const images = allImagesRef.current;\n      const index = images.findIndex((img) => img === selectedImage);\n\n      if (e.key === \"ArrowLeft\" && index > 0) {\n        setSelectedImage(images[index - 1]);\n      }\n\n      if (e.key === \"ArrowRight\" && index < images.length - 1) {\n        setSelectedImage(images[index + 1]);\n      }\n\n      if (e.key === \"Escape\") {\n        setSelectedImage(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [selectedImage]);\n\n  return (\n    <>\n      <Headertwo refreshNotifications={refreshNotifications} />\n      {showPopError && <ErrorPop message={errorPopMessage} />}\n      {showPopSuccess && <SuccessPop message={successPopMessage} />}\n      <section className=\"inboxblock d-block gapy\">\n        <div className=\"container-lg\">\n          <div className=\"row gy-4\">\n            <div className=\"col-md-3 sticky-md-top h-100  evleft\">\n              <div className=\"d-flex flex-column gap-3 pe-2 \">\n                <h1>Inbox</h1>\n                {/* <div className=\"filtersearch\">\n                  <form action=\"\">\n                    <input type=\"text\" placeholder=\"search groups\" />\n                  </form>\n                </div> */}\n                <div className=\"d-flex flex-column gap-2\">\n                  <Link\n                    to=\"/dashboard\"\n                    className=\"d-flex gap-3 align-items-center listoficons\"\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"userpic userpic_main ofit rounded-circle overflow-hidden ratio-unset\">\n                        <IconHome\n                          stroke={1}\n                          className=\"w-100 h-100 main_homei\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <h4>{t(\"Home\")}</h4>\n                    </div>\n                  </Link>\n                  <Link\n                    to=\"/receivedmessages\"\n                    className={`d-flex gap-2 align-items-center filterlist ${\n                      activeIndex === 1 ? \"active\" : \"\"\n                    }`}\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"eventicon fulw\">\n                        <img src={ev1} alt=\"eventicon\" />\n                      </div>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <h3>{t(\"Received_messages\")}</h3>\n                    </div>\n                  </Link>\n                  <Link\n                    to=\"/sendmessages\"\n                    className={`d-flex gap-2 align-items-center filterlist ${\n                      activeIndex === 1 ? \"\" : \"\"\n                    }`}\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"eventicon fulw\">\n                        <img src={ev2} alt=\"eventicon\" />\n                      </div>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <h3>{t(\"Sent_messages\")}</h3>\n                    </div>\n                  </Link>\n\n                  <hr className=\"linehr\" />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-9\">\n              <div className=\"row gy-4\">\n                <div className=\"col-lg-8\">\n                  <div className=\"d-flex flex-column gap-0 chat_box\">\n                    <div className=\"d-flex align-items-sm-center gap-3 mess_head\">\n                      <Link\n                        target=\"_blank\"\n                        to={`/friend/${userdetail.id}`}\n                        className=\"d-block chat_profile\"\n                      >\n                        {userdetail.profile_image ? ( // Display the image URL if available\n                          <img\n                            className=\"w-100 h-100\"\n                            src={userdetail.profile_image} // Use the URL from the member object\n                            alt=\"userpic\"\n                          />\n                        ) : (\n                          <img\n                            className=\"w-100 h-100\"\n                            src={require(\"../assets/images/thumb.jpg\")} // Default image if profile image is not available\n                            alt=\"userpic\"\n                          />\n                        )}\n                      </Link>\n                      <div className=\"d-flex align-items-sm-center flex-sm-row flex-column justify-content-between w-100 gap-2 chat_name\">\n                        <div className=\"d-flex flex-column gap-3\">\n                          <div className=\"d-flex flex-column gap-3\">\n                            <div className=\"d-flex flex-column gap-1\">\n                              <div className=\"d-flex align-items-sm-center gap-2\">\n                                <div className=\"newclass\">\n                                  <Link\n                                    target=\"_blank\"\n                                    className=\"unamecolor\"\n                                    to={`/friend/${userdetail.id}`}\n                                  >\n                                    {userdetail.username}\n                                  </Link>\n                                </div>\n                                ,\n                                <h3>\n                                  {userdetail.birthday_date != null\n                                    ? `${calculateAge(\n                                        userdetail.birthday_date\n                                      )}`\n                                    : \"\"}\n                                </h3>\n                              </div>\n                              <h5>{userdetail.location}</h5>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"d-flex flex-column justify-content-end align-items-end gap-2\">\n                          <div className=\"search-box\">\n                            <i className=\"fas fa-search\"></i>\n                            <input\n                              type=\"search\"\n                              placeholder={t(\"search\")}\n                              onInput={(e) => handlesearchmessage(e)}\n                            />\n                          </div>\n                          <div className=\"d-flex align-items-center gap-2 message_s-btn\">\n                            {showdeletebutton && (\n                              <button\n                                className=\"deltebtn\"\n                                type=\"button\"\n                                onClick={handlealldelete}\n                              >\n                                {t(\"delete\")}\n                              </button>\n                            )}\n                            <button\n                              className={`select_btn ${\n                                selectall ? \"active\" : \"\"\n                              }`}\n                              type=\"button\"\n                              onClick={handleallselect}\n                            >\n                              {t(\"Select\")}\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div\n                      className=\"mess_box_main\"\n                      ref={chatBoxRef}\n                      style={{\n                        maxHeight: \"56vh\",\n                        overflow: \"auto\",\n                        display: \"flex\",\n                        flexWrap: \"wrap\",\n                        justifyContent: \"end\",\n                        position: \"relative\",\n                      }}\n                    >\n                      <div className=\"mess_box d-flex flex-column gap-3 justify-content-end w-100\">\n                        {loadingMore && (\n                          <div className=\"text-center w-100 py-2\">\n                            <span\n                              className=\"spinner-border text-success spinner-border-sm\"\n                              role=\"status\"\n                              aria-hidden=\"true\"\n                            ></span>\n                          </div>\n                        )}\n                        {filteredMessages.length === 0 ? (\n                          <div className=\"empty-chat-message\">\n                            <p>{t(\"No_messages_to_display\")}</p>\n                          </div>\n                        ) : (\n                          filteredMessages.map((chat, index) => (\n                            <div\n                              className=\"j\"\n                              key={index}\n                              ref={\n                                index === filteredMessages.length - 1\n                                  ? chatEndRef\n                                  : null\n                              }\n                            >\n                              {chat.user_id === LoginData.id ? (\n                                // Right-aligned messages (sent by the logged-in user)\n                                <>\n                                  <div className=\"main_mess right_mess d-flex align-items-end gap-2 flex-column\">\n                                    {/* Render the profile image only if there are files */}\n                                    {Array.isArray(JSON.parse(chat.file)) &&\n                                      JSON.parse(chat.file).length > 0 && (\n                                        <>\n                                          {/* Show profile image only for the first file */}\n                                          {index === 0 && (\n                                            <Link\n                                              to={`/friend/${chat.user1_id}`}\n                                              target=\"_blank\"\n                                              className=\"d-block mess_profile\"\n                                            >\n                                              <img\n                                                className=\"w-100 h-100 pr\"\n                                                src={\n                                                  chat.user1_makeImagePrivate ===\n                                                  1\n                                                    ? require(\"../assets/images/thumb.jpg\")\n                                                    : chat.user1_profile\n                                                }\n                                                alt=\"profile\"\n                                              />\n                                            </Link>\n                                          )}\n\n                                          {JSON.parse(chat.file).map(\n                                            (f, fileIndex) => {\n                                              const fileSrc = getFileSrc(f);\n\n                                              return (\n                                                <div\n                                                  className=\"message d-block send_image\"\n                                                  key={fileIndex}\n                                                >\n                                                  {fileSrc ? (\n                                                    // If it's an image, display it\n\n                                                    <>\n                                                      <div className=\"d-flex align-items-start gap-1 h-100\">\n                                                        <div\n                                                          style={{\n                                                            position:\n                                                              \"relative\",\n                                                            display:\n                                                              \"inline-block\",\n                                                          }}\n                                                        >\n                                                          <button\n                                                            className=\"remove_mess\"\n                                                            onClick={() =>\n                                                              toggleMenu(index)\n                                                            }\n                                                          >\n                                                            <HiDotsVertical />\n                                                          </button>\n\n                                                          {showMenu ===\n                                                            index && (\n                                                            <ul className=\"popup-menu\">\n                                                              <li\n                                                                onClick={() =>\n                                                                  handledeletemainpopup(\n                                                                    chat.id\n                                                                  )\n                                                                }\n                                                              >\n                                                                {t(\"Remove\")}\n                                                              </li>\n                                                              <li\n                                                                onClick={\n                                                                  handleCloseDeletePopup\n                                                                }\n                                                              >\n                                                                {t(\"Cancel\")}\n                                                              </li>\n                                                            </ul>\n                                                          )}\n                                                        </div>\n                                                        <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                          <div className=\"d-flex align-items-start gap-1 1\">\n                                                            <img\n                                                              className=\"w-100 h-100 d\"\n                                                              src={fileSrc}\n                                                              alt={`file-${fileIndex}`}\n                                                              onClick={() =>\n                                                                setSelectedImage(\n                                                                  fileSrc\n                                                                )\n                                                              }\n                                                              style={{\n                                                                cursor:\n                                                                  \"pointer\",\n                                                              }}\n                                                            />\n                                                            {selectall && (\n                                                              <input\n                                                                type=\"checkbox\"\n                                                                checked={chooseallId.includes(\n                                                                  chat.id\n                                                                )}\n                                                                onChange={() =>\n                                                                  handlechooseAll(\n                                                                    chat.id\n                                                                  )\n                                                                }\n                                                              />\n                                                            )}\n                                                          </div>\n                                                          <span>\n                                                            {formatTime(\n                                                              chat.date\n                                                            )}\n                                                          </span>\n                                                        </div>\n                                                      </div>\n                                                    </>\n                                                  ) : (\n                                                    <>\n                                                      <div className=\"d-flex align-items-start gap-1 h-100\">\n                                                        <div\n                                                          style={{\n                                                            position:\n                                                              \"relative\",\n                                                            display:\n                                                              \"inline-block\",\n                                                          }}\n                                                        >\n                                                          <button\n                                                            className=\"remove_mess\"\n                                                            onClick={() =>\n                                                              toggleMenu(index)\n                                                            }\n                                                          >\n                                                            <HiDotsVertical />\n                                                          </button>\n\n                                                          {showMenu ===\n                                                            index && (\n                                                            <ul className=\"popup-menu\">\n                                                              <li\n                                                                onClick={() =>\n                                                                  handledeletemainpopup(\n                                                                    chat.id\n                                                                  )\n                                                                }\n                                                              >\n                                                                {t(\"Remove\")}\n                                                              </li>\n                                                              <li\n                                                                onClick={\n                                                                  handleCloseDeletePopup\n                                                                }\n                                                              >\n                                                                {t(\"Cancel\")}\n                                                              </li>\n                                                            </ul>\n                                                          )}\n                                                        </div>\n                                                        <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                          <div className=\"d-flex align-items-start gap-1 2\">\n                                                            <MediaRendererFile\n                                                              url={f}\n                                                              onClick={() =>\n                                                                setSelectedImage(\n                                                                  f\n                                                                )\n                                                              }\n                                                            />\n                                                            {selectall && (\n                                                              <input\n                                                                type=\"checkbox\"\n                                                                checked={chooseallId.includes(\n                                                                  chat.id\n                                                                )}\n                                                                onChange={() =>\n                                                                  handlechooseAll(\n                                                                    chat.id\n                                                                  )\n                                                                }\n                                                              />\n                                                            )}\n                                                          </div>\n                                                          <span>\n                                                            {formatTime(\n                                                              chat.date\n                                                            )}\n                                                          </span>\n                                                        </div>\n                                                      </div>\n                                                    </>\n                                                  )}\n                                                </div>\n                                              );\n                                            }\n                                          )}\n                                        </>\n                                      )}\n                                  </div>\n\n                                  {chat.message && chat.message !== \"null\" && (\n                                    <div className=\"main_mess right_mess d-flex align-items-center gap-2\">\n                                      <Link\n                                        to={`/friend/${chat.user1_id}`}\n                                        target=\"_blank\"\n                                        className=\"d-block mess_profile ri\"\n                                      >\n                                        <img\n                                          className=\"w-100 h-100 ri\"\n                                          src={\n                                            chat.user1_makeImagePrivate === 1\n                                              ? require(\"../assets/images/thumb.jpg\")\n                                              : chat.user1_profile\n                                          }\n                                          alt=\"profile\"\n                                        />\n                                      </Link>\n                                      <div className=\" d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                        <div className=\"d-flex align-items-start gap-0\">\n                                          <div\n                                            style={{\n                                              position: \"relative\",\n                                              display: \"inline-block\",\n                                            }}\n                                          >\n                                            <button\n                                              className=\"remove_mess\"\n                                              onClick={() => toggleMenu(index)}\n                                            >\n                                              <HiDotsVertical />\n                                            </button>\n\n                                            {showMenu === index && (\n                                              <ul className=\"popup-menu align-items-end\">\n                                                <li\n                                                  onClick={() =>\n                                                    handledeletemainpopup(\n                                                      chat.id\n                                                    )\n                                                  }\n                                                >\n                                                  {t(\"Remove\")}\n                                                </li>\n                                                <li\n                                                  onClick={\n                                                    handleCloseDeletePopup\n                                                  }\n                                                >\n                                                  {t(\"Cancel\")}\n                                                </li>\n                                              </ul>\n                                            )}\n                                          </div>\n                                          <div className=\"d-flex align-items-start gap-1 3\">\n                                            <p className=\"message\">\n                                              {chat.message}\n                                            </p>\n                                            {selectall && (\n                                              <input\n                                                type=\"checkbox\"\n                                                checked={chooseallId.includes(\n                                                  chat.id\n                                                )}\n                                                onChange={() =>\n                                                  handlechooseAll(chat.id)\n                                                }\n                                              />\n                                            )}\n                                          </div>\n                                        </div>\n\n                                        <span>{formatTime(chat.date)}</span>\n                                      </div>\n                                    </div>\n                                  )}\n                                </>\n                              ) : (\n                                // Left-aligned messages (received from other users)\n                                <>\n                                  <div className=\"main_mess left_mess d-flex align-items-start gap-2 flex-column \">\n                                    {/* Check if chat.file is valid and has files */}\n                                    {Array.isArray(JSON.parse(chat.file)) &&\n                                      JSON.parse(chat.file).length > 0 && (\n                                        <>\n                                          {/* Show profile image only for the first file */}\n                                          {index === 0 && (\n                                            <Link\n                                              to={`/friend/${chat.user1_id}`}\n                                              target=\"_blank\"\n                                              className=\"d-block mess_profile le  flex-shrink-0\"\n                                            >\n                                              <img\n                                                className=\"w-100 h-100 d\"\n                                                src={\n                                                  chat.user1_makeImagePrivate ===\n                                                  1\n                                                    ? require(\"../assets/images/thumb.jpg\")\n                                                    : chat.user1_profile\n                                                }\n                                                alt=\"profile\"\n                                              />\n                                            </Link>\n                                          )}\n\n                                          {JSON.parse(chat.file).map(\n                                            (f, fileIndex) => {\n                                              const fileSrc = getFileSrc(f);\n\n                                              return (\n                                                <div\n                                                  className=\"message d-block send_image\"\n                                                  key={fileIndex}\n                                                >\n                                                  {fileSrc ? (\n                                                    <>\n                                                      <div className=\"d-flex align-items-start gap-1 h-100\">\n                                                        <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                          <div className=\"d-flex align-items-start gap-1 4\">\n                                                            <img\n                                                              className=\"w-100 h-100 d\"\n                                                              src={fileSrc}\n                                                              alt={`file-${fileIndex}`}\n                                                              onClick={() =>\n                                                                setSelectedImage(\n                                                                  fileSrc\n                                                                )\n                                                              }\n                                                              style={{\n                                                                cursor:\n                                                                  \"pointer\",\n                                                              }}\n                                                            />\n                                                          </div>\n                                                          <span>\n                                                            {formatTime(\n                                                              chat.date\n                                                            )}\n                                                          </span>\n                                                        </div>\n                                                      </div>\n                                                    </>\n                                                  ) : (\n                                                    <>\n                                                      <div className=\"d-flex align-items-start gap-1 h-100\">\n                                                        <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                          <div className=\"d-flex align-items-start gap-1 5\">\n                                                            <MediaRendererFile\n                                                              url={f}\n                                                              onClick={() =>\n                                                                setSelectedImage(\n                                                                  f\n                                                                )\n                                                              }\n                                                            />\n                                                          </div>\n                                                          <span>\n                                                            {formatTime(\n                                                              chat.date\n                                                            )}\n                                                          </span>\n                                                        </div>\n                                                      </div>\n                                                    </>\n                                                  )}\n                                                </div>\n                                              );\n                                            }\n                                          )}\n                                        </>\n                                      )}\n                                  </div>\n\n                                  {chat.message && chat.message !== \"null\" && (\n                                    <div className=\"main_mess left_mess d-flex align-items-center gap-2\">\n                                      <Link\n                                        to={`/friend/${chat.user1_id}`}\n                                        target=\"_blank\"\n                                        className=\"d-block mess_profile le  flex-shrink-0\"\n                                      >\n                                        <img\n                                          className=\"w-100 h-100 pr\"\n                                          src={\n                                            chat.user1_makeImagePrivate === 1\n                                              ? require(\"../assets/images/thumb.jpg\")\n                                              : chat.user1_profile\n                                          }\n                                          alt=\"profile\"\n                                        />\n                                      </Link>\n                                      <div className=\" d-flex flex-column gap-1 justify-content-start align-items-start\">\n                                        {/* <div className=\"d-flex align-items-start gap-0\">\n                                                                                    <p className=\"message\">{chat.message}</p>\n                                                                                  </div> */}\n                                        <div className=\"d-flex align-items-start gap-0\">\n                                          <div className=\"d-flex align-items-start gap-1 6\">\n                                            <p className=\"message\">\n                                              {chat.message}\n                                            </p>\n                                          </div>\n                                        </div>\n\n                                        <span>{formatTime(chat.date)}</span>\n                                      </div>\n                                    </div>\n                                  )}\n                                </>\n                              )}\n                            </div>\n                          ))\n                        )}\n                      </div>\n\n                      {filteredMessages.length > 4 && !arrow && (\n                        <button\n                          className=\"newmessagearrow\"\n                          type=\"button\"\n                          onClick={hanldeseenmessageAll}\n                        >\n                          <FaAngleDown />\n                          {Totalcountmessage > 0 && (\n                            <span>{Totalcountmessage}</span>\n                          )}\n                        </button>\n                      )}\n                    </div>\n                    {selectedImage && (\n                      <div\n                        className=\"p-5\"\n                        style={{\n                          position: \"fixed\",\n                          top: 0,\n                          left: 0,\n                          width: \"100%\",\n                          height: \"100%\",\n                          backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          zIndex: 989898,\n                        }}\n                        onClick={() => setSelectedImage(null)}\n                      >\n                        <div\n                          className=\"rel d-block h-100\"\n                          onClick={(e) => e.stopPropagation()}\n                        >\n                          {/* Close Button */}\n                          <button\n                            type=\"button\"\n                            className=\"closebtnpic\"\n                            onClick={() => setSelectedImage(null)}\n                          >\n                            ❌\n                          </button>\n\n                          {/* Image View */}\n                          <MediaRenderer\n                            className=\"w-100 h-100 object-fit-cover\"\n                            url={selectedImage}\n                            style={{\n                              maxWidth: \"100%\",\n                              maxHeight: \"100%\",\n                              borderRadius: \"10px\",\n                              height: \"85vh\",\n                              objectFit: \"contain\",\n                            }}\n                          />\n\n                          {/* Prev Button */}\n                          <button\n                            className=\"btn-prevprofile\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              const index = allImagesRef.current.findIndex(\n                                (img) => img === selectedImage\n                              );\n                              if (index > 0) {\n                                setSelectedImage(\n                                  allImagesRef.current[index - 1]\n                                );\n                              }\n                            }}\n                            disabled={\n                              allImagesRef.current.findIndex(\n                                (img) => img === selectedImage\n                              ) === 0\n                            }\n                          >\n                            <FaChevronLeft />\n                          </button>\n\n                          {/* Next Button */}\n                          <button\n                            className=\"btn-nextprofile\"\n                            onClick={(e) => {\n                              e.stopPropagation();\n                              const index = allImagesRef.current.findIndex(\n                                (img) => img === selectedImage\n                              );\n                              if (index < allImagesRef.current.length - 1) {\n                                setSelectedImage(\n                                  allImagesRef.current[index + 1]\n                                );\n                              }\n                            }}\n                            disabled={\n                              allImagesRef.current.findIndex(\n                                (img) => img === selectedImage\n                              ) ===\n                              allImagesRef.current.length - 1\n                            }\n                          >\n                            <FaChevronRight />\n                          </button>\n                        </div>\n                      </div>\n                    )}\n                    <span className=\"text-danger\">{error}</span>\n                    {restr_message && (\n                      <span\n                        className=\"text-danger\"\n                        style={{ fontSize: \"14px\" }}\n                      >\n                        {t(\"Your_message_contain\")}\n                      </span>\n                    )}\n                    <form\n                      onSubmit={(e) => {\n                        e.preventDefault(); // Prevent page reload\n                        if (message.trim() !== \"\" || Isfile.length > 0) {\n                          handleSend();\n                        }\n                      }}\n                      className=\"message_type d-flex align-items-center gap-2\"\n                    >\n                      {/* File Upload */}\n                      <div className=\"d-block image_img\">\n                        <input\n                          type=\"file\"\n                          onChange={handleFileChange}\n                          multiple\n                        />\n                        <img\n                          className=\"w-100 h-100\"\n                          src={require(\"../assets/images/serach2.png\")}\n                          alt=\"Upload\"\n                        />\n                      </div>\n\n                      {/* Emoji Picker */}\n                      <div\n                        className=\"emoji-container emchatbox\"\n                        ref={pickerRef}\n                      >\n                        <button\n                          type=\"button\"\n                          className=\"emoji-button\"\n                          onClick={() => setShowPicker(!showPicker)}\n                        >\n                          😀\n                        </button>\n                        {showPicker && (\n                          <EmojiPicker onEmojiClick={handleEmojiClick} />\n                        )}\n                      </div>\n\n                      {/* Message Input */}\n                      <input\n                        type=\"text\"\n                        ref={inputRef}\n                        value={message}\n                        onChange={handleInputChange}\n                        placeholder=\"Write a message...\"\n                      />\n\n                      {/* Send Button */}\n                      <button\n                        className=\"d-block image_img\"\n                        type=\"submit\" // Change to \"submit\" so Enter key works\n                        disabled={!message.trim() && Isfile.length === 0} // Prevent empty messages\n                      >\n                        <img\n                          className=\"w-50 h-50\"\n                          src={require(\"../assets/images/send.png\")}\n                          alt=\"Send\"\n                        />\n                      </button>\n\n                      {/* Loading Spinner */}\n                      {spinner && (\n                        <div\n                          className=\"spinner-border text-success send_load\"\n                          role=\"status\"\n                        >\n                          <span className=\"visually-hidden\"></span>\n                        </div>\n                      )}\n\n                      {/* Display Selected Images */}\n                      {Isfile.length > 0 && (\n                        <div className=\"muti_images\">\n                          <div className=\"muti_main overflow-auto d-flex gap-2 mx-auto w-96\">\n                            {Isfile.map((file, index) => {\n                              const isImage = file.type.startsWith(\"image/\");\n                              const isVideo = file.type.startsWith(\"video/\");\n\n                              return (\n                                <div key={index} className=\"d-block muti_image\">\n                                  {isImage && (\n                                    <img\n                                      className=\"w-100 h-100\"\n                                      src={URL.createObjectURL(file)}\n                                      alt=\"Preview\"\n                                    />\n                                  )}\n\n                                  {isVideo && (\n                                    <video\n                                      className=\"w-100 h-100\"\n                                      controls\n                                      src={URL.createObjectURL(file)}\n                                    />\n                                  )}\n\n                                  {!isImage && !isVideo && (\n                                    <div className=\"file-placeholder\">\n                                      <img\n                                        src={fileIcon}\n                                        alt=\"File\"\n                                        className=\"w-100 h-100\"\n                                      />\n                                      <p className=\"sendf\">{file.name}</p>\n                                    </div>\n                                  )}\n\n                                  <button\n                                    className=\"delete_img\"\n                                    onClick={() => removeImage(index)}\n                                  >\n                                    ×\n                                  </button>\n                                </div>\n                              );\n                            })}\n                          </div>\n                        </div>\n                      )}\n                    </form>\n                  </div>\n                </div>\n                <div className=\"col-lg-4\">\n                  <div className=\"d-flex flex-column gap-4\">\n                    <div className=\"recive_main abouthim_scroll scroll_bar\">\n                      <div className=\"row gy-5\">\n                        <div className=\"col-12\">\n                          <div className=\"row gy-3\">\n                            {userLogin.id === Number(to_id) &&\n                              UserDetail.profile_image_1 &&\n                              UserDetail.profile_image_1.trim() !== \"\" && (\n                                <div className=\"col-12 px-1\">\n                                  <div className=\"d-block recive_two 1\">\n                                    {UserDetail.profile_image_1.match(\n                                      /\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i\n                                    ) ? (\n                                      <img\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        src={UserDetail.profile_image_1}\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_1\n                                          )\n                                        }\n                                        alt=\"img\"\n                                      />\n                                    ) : UserDetail.profile_image_1.match(\n                                        /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i\n                                      ) ? (\n                                      <video\n                                        controls\n                                        className=\"w-100 h-100\"\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_1\n                                          )\n                                        }\n                                      >\n                                        <source\n                                          src={UserDetail.profile_image_1}\n                                          type=\"video/mp4\"\n                                        />\n                                        {t(\"Your_browser_does\")}\n                                      </video>\n                                    ) : null}\n                                  </div>\n                                </div>\n                              )}\n                            {userLogin.id === Number(to_id) &&\n                              UserDetail.profile_image_2 &&\n                              UserDetail.profile_image_2.trim() !== \"\" && (\n                                <div className=\"col-12 px-1\">\n                                  <div className=\"d-block recive_two 2\">\n                                    {UserDetail.profile_image_2.match(\n                                      /\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i\n                                    ) ? (\n                                      <img\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_2\n                                          )\n                                        }\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        src={UserDetail.profile_image_2}\n                                        alt=\"img\"\n                                      />\n                                    ) : UserDetail.profile_image_2.match(\n                                        /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i\n                                      ) ? (\n                                      <video\n                                        controls\n                                        className=\"w-100 h-100\"\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_2\n                                          )\n                                        }\n                                      >\n                                        <source\n                                          src={UserDetail.profile_image_2}\n                                          type=\"video/mp4\"\n                                        />\n                                        {t(\"Your_browser_does\")}\n                                      </video>\n                                    ) : null}\n                                  </div>\n                                </div>\n                              )}\n                            {userLogin.id === Number(to_id) &&\n                              UserDetail.profile_image_3 &&\n                              UserDetail.profile_image_3.trim() !== \"\" && (\n                                <div className=\"col-12 px-1\">\n                                  <div className=\"d-block recive_two 3\">\n                                    {UserDetail.profile_image_3.match(\n                                      /\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i\n                                    ) ? (\n                                      <img\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_3\n                                          )\n                                        }\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        src={UserDetail.profile_image_3}\n                                        alt=\"img\"\n                                      />\n                                    ) : UserDetail.profile_image_3.match(\n                                        /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i\n                                      ) ? (\n                                      <video\n                                        controls\n                                        className=\"w-100 h-100\"\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_3\n                                          )\n                                        }\n                                      >\n                                        <source\n                                          src={UserDetail.profile_image_3}\n                                          type=\"video/mp4\"\n                                        />\n                                        {t(\"Your_browser_does\")}\n                                      </video>\n                                    ) : null}\n                                  </div>\n                                </div>\n                              )}\n                            {userLogin.id === Number(to_id) &&\n                              UserDetail.profile_image_4 &&\n                              UserDetail.profile_image_4.trim() !== \"\" && (\n                                <div className=\"col-12 px-1\">\n                                  <div className=\"d-block recive_two 4\">\n                                    {UserDetail.profile_image_4.match(\n                                      /\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i\n                                    ) ? (\n                                      <img\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_4\n                                          )\n                                        }\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        src={UserDetail.profile_image_4}\n                                        alt=\"img\"\n                                      />\n                                    ) : UserDetail.profile_image_4.match(\n                                        /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i\n                                      ) ? (\n                                      <video\n                                        controls\n                                        className=\"w-100 h-100\"\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_4\n                                          )\n                                        }\n                                      >\n                                        <source\n                                          src={UserDetail.profile_image_4}\n                                          type=\"video/mp4\"\n                                        />{\" \"}\n                                        {t(\"Your_browser_does\")}\n                                      </video>\n                                    ) : null}\n                                  </div>\n                                </div>\n                              )}\n                            {Array.isArray(isonlyallbum) &&\n                              isonlyallbum.map((item, index) => {\n                                const images = JSON.parse(item.images);\n\n                                // If both uStatus is \"Yes\" and visibility is \"Private_visible\", show all images/videos.\n                                if (item.uStatus === \"Yes\") {\n                                  return (\n                                    <div\n                                      key={index}\n                                      className=\"d col-12 d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                      onClick={() => {\n                                        if (!userper) {\n                                          requestToview(item.id);\n                                        } else {\n                                          if (item.password_status === \"Yes\") {\n                                            confirmPassword(\n                                              item.id,\n                                              item.album_id\n                                            );\n                                          } else {\n                                            window.open(\n                                              `/privatealbum/${item.album_id}`\n                                            );\n                                          }\n                                        }\n                                      }}\n                                    >\n                                      {item.password_status === \"Yes\" ? (\n                                        <Link\n                                          to=\"#\"\n                                          onClick={() =>\n                                            confirmPassword(\n                                              item.id,\n                                              item.album_id\n                                            )\n                                          }\n                                        >\n                                          {t(\"PrivateAlbum\")}\n                                        </Link>\n                                      ) : (\n                                        <Link\n                                          to={`/previewimages/${item.album_id}`}\n                                        >\n                                          {t(\"PrivateAlbum\")}\n                                        </Link>\n                                      )}\n\n                                      <div className=\"d-block search_twoinfoicon\">\n                                        <img\n                                          className=\"w-100 h-100\"\n                                          src={require(\"../assets/images/ms3.png\")}\n                                          alt=\"Private Album\"\n                                        />\n                                      </div>\n                                      {item.uStatus === \"Yes\" ? (\n                                        item.password_status === \"Yes\" ? (\n                                          <Link\n                                            to=\"#\"\n                                            onClick={() =>\n                                              confirmPassword(\n                                                item.id,\n                                                item.album_id\n                                              )\n                                            }\n                                          >\n                                            {t(\"AccessGranted\")}{\" \"}\n                                            <strong> {item.album_name}</strong>\n                                          </Link>\n                                        ) : (\n                                          <Link\n                                            to={`/previewimages/${item.album_id}`}\n                                          >\n                                            {t(\"AccessGranted\")}{\" \"}\n                                            <strong> {item.album_name}</strong>\n                                          </Link>\n                                        )\n                                      ) : (\n                                        <p>\n                                          {t(\"RequestToView\")} {item.album_name}\n                                        </p>\n                                      )}\n                                    </div>\n                                  );\n                                }\n\n                                // If uStatus is \"No\" and visibility is \"Private_visible\", show private album request option.\n                                if (userLogin.id === Number(to_id)) {\n                                  if (\n                                    item.uStatus === \"No\" &&\n                                    item.visibility === \"Private_visible\"\n                                  ) {\n                                    return (\n                                      <div\n                                        key={index}\n                                        className=\"2 col-12 d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                        onClick={() => {\n                                          if (!userper) {\n                                            requestToview(item.id);\n                                          } else {\n                                            window.open(\n                                              `/privatealbum/${item.album_id}`\n                                            );\n                                          }\n                                        }}\n                                      >\n                                        <Link to=\"#\">\n                                          {\" \"}\n                                          {t(\"PRIVATE_ALBUM\")}{\" \"}\n                                        </Link>\n                                        <div className=\"d-block search_twoinfoicon\">\n                                          <img\n                                            className=\"w-100 h-100\"\n                                            src={require(\"../assets/images/padlock.png\")}\n                                            alt={t(\"PrivateAlbum\")}\n                                          />\n                                        </div>\n\n                                        <strong>{item.album_name}</strong>\n                                      </div>\n                                    );\n                                  }\n                                } else {\n                                  if (\n                                    item.uStatus === \"No\" &&\n                                    item.visibility === \"Private_visible\"\n                                  ) {\n                                    return (\n                                      <div\n                                        key={index}\n                                        className=\"3 col-12 d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                        onClick={() => {\n                                          if (!userper) {\n                                            requestToview(item.id);\n                                          } else {\n                                            window.open(\n                                              `/privatealbum/${item.album_id}`\n                                            );\n                                          }\n                                        }}\n                                      >\n                                        <Link to=\"#\">\n                                          {\" \"}\n                                          {t(\"PRIVATE_ALBUM\")}{\" \"}\n                                        </Link>\n                                        <div className=\"d-block search_twoinfoicon\">\n                                          <img\n                                            className=\"w-100 h-100\"\n                                            src={require(\"../assets/images/ms3.png\")}\n                                            alt={t(\"PrivateAlbum\")}\n                                          />\n                                        </div>\n                                        <p>{t(\"REQUEST_TO_VIEW\")}</p>\n                                        <strong>{item.album_name}</strong>\n                                      </div>\n                                    );\n                                  }\n                                }\n\n                                // If visibility is not \"Private_visible\", show all images/videos.\n                                return images.map((image, imgIndex) => (\n                                  <div\n                                    className=\"col-12 px-1\"\n                                    key={`${index}-${imgIndex}`}\n                                  >\n                                    <div className=\"d-block recive_two 5\">\n                                      <MediaRenderer\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        url={selectedImage}\n                                        onClick={() => setSelectedImage(image)}\n                                      />\n                                    </div>\n                                  </div>\n                                ));\n                              })}\n\n                            {Array.isArray(isonlyallbumfriend) &&\n                              isonlyallbumfriend.map((item, index) => {\n                                // Parse the JSON string into an array\n                                const images = JSON.parse(item.images);\n                                const isFriend = AllFriends.some(\n                                  (friend) => friend.id === userLogin.id\n                                );\n\n                                if (isFriend || userLogin.id === item.user_id) {\n                                  if (\n                                    item.addToAlbum === \"Yes\" &&\n                                    item.visibility === \"Friends_visible\"\n                                  ) {\n                                    return (\n                                      <div className=\"col-12 px-1\" key={index}>\n                                        <div\n                                          onClick={() => {\n                                            window.open(\n                                              `/previewimages/${item.album_id}`\n                                            );\n                                          }}\n                                          className=\"dd d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                        >\n                                          <Link\n                                            to=\"javascript:void(0)\"\n                                            className=\"text-decoration-none\"\n                                          >\n                                            {item.album_name}\n                                          </Link>\n                                          <div className=\"d-block search_twoinfoicon\">\n                                            <img\n                                              className=\"w-100 h-100\"\n                                              src={require(\"../assets/images/ms3.png\")}\n                                              alt=\"Album Preview\"\n                                            />\n                                          </div>\n\n                                          <p>{t(\"PreviewImages\")}</p>\n                                          <strong>{item.album_name}</strong>\n                                        </div>\n                                      </div>\n                                    );\n                                  }\n                                }\n                              })}\n                            {Array.isArray(isonlyallbumfriend) &&\n                              isonlyallbumfriend.map((item, index) => {\n                                // Parse the JSON string into an array\n                                const images = JSON.parse(item.images);\n                                if (\n                                  item.visibility === \"Public_visible\" &&\n                                  item.addToAlbum === \"Yes\"\n                                ) {\n                                  return (\n                                    <div className=\"col-12 px-1\" key={index}>\n                                      <div\n                                        onClick={() => {\n                                          window.open(\n                                            `/previewimages/${item.album_id}`\n                                          );\n                                        }}\n                                        className=\"dd d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                      >\n                                        <Link\n                                          to=\"javascript:void(0)\"\n                                          className=\"text-decoration-none\"\n                                        >\n                                          {item.album_name}\n                                        </Link>\n                                        <div className=\"d-block search_twoinfoicon\">\n                                          <img\n                                            className=\"w-100 h-100\"\n                                            src={require(\"../assets/images/ms3.png\")}\n                                            alt=\"Album Preview\"\n                                          />\n                                        </div>\n\n                                        <p>{t(\"PreviewImages\")}</p>\n                                        <p>{item.album_name}</p>\n                                      </div>\n                                    </div>\n                                  );\n                                }\n                              })}\n                            {Array.isArray(isonlyallbumPublic) &&\n                              isonlyallbumPublic.map((item, index) => {\n                                // Parse the JSON string into an array\n                                const images = JSON.parse(item.images);\n                                if (\n                                  item.visibility === \"Public_visible\" &&\n                                  item.addToAlbum === \"No\"\n                                ) {\n                                  return images.map((image, imgIndex) => (\n                                    <div\n                                      className=\"col-12 px-1\"\n                                      key={`${index}-${imgIndex}`}\n                                    >\n                                      <div className=\"d-block recive_two 6\">\n                                        <MediaRenderer\n                                          onClick={() =>\n                                            setSelectedImage(image)\n                                          }\n                                          className=\"w-100 h-100 object-fit-cover\"\n                                          url={image}\n                                        />\n                                      </div>\n                                    </div>\n                                  ));\n                                }\n                              })}\n                            {Array.isArray(isonlyallbumPublic) &&\n                              isonlyallbumPublic.map((item, index) => {\n                                // Parse the JSON string into an array\n                                const images = JSON.parse(item.images);\n                                if (\n                                  item.visibility === \"Public_visible\" &&\n                                  item.addToAlbum === \"Yes\"\n                                ) {\n                                  return (\n                                    <div className=\"col-12 px-1\" key={index}>\n                                      <div\n                                        onClick={() => {\n                                          window.open(\n                                            `/previewimages/${item.album_id}`\n                                          );\n                                        }}\n                                        className=\"dd d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo rel\"\n                                      >\n                                        <Link\n                                          to={`/previewimages/${item.album_id}`}\n                                          className=\"text-decoration-none\"\n                                        >\n                                          {item.album_name}\n                                        </Link>\n                                        <div className=\"d-block search_twoinfoicon\">\n                                          <img\n                                            className=\"w-100 h-100\"\n                                            src={require(\"../assets/images/ms3.png\")}\n                                            alt=\"Album Preview\"\n                                          />\n                                        </div>\n                                        {item.cover_image !== null && (\n                                          <div className=\"lock_image\">\n                                            <MediaRenderer\n                                              className=\"w-100 h-100\"\n                                              url={item.cover_image}\n                                            />\n                                          </div>\n                                        )}\n                                        <p>{t(\"PreviewImages\")}</p>\n                                        <strong>{item.album_name}</strong>\n                                      </div>\n                                    </div>\n                                  );\n                                }\n                              })}\n                            {Array.isArray(ImagesFriends) &&\n                              ImagesFriends.map((image, index) => (\n                                <div className=\"col-12 px-1 desdsd\" key={index}>\n                                  <div className=\"d-block recive_two 7\">\n                                    <MediaRenderer\n                                      onClick={() => setSelectedImage(image)}\n                                      className=\"w-100 h-100 object-fit-cover\"\n                                      url={image}\n                                    />\n                                  </div>\n                                </div>\n                              ))}\n                            {Array.isArray(VideosFriends) &&\n                              VideosFriends.map((image, index) => (\n                                <div className=\"col-12 px-1 desdsd\" key={index}>\n                                  <div className=\"d-block recive_two 8\">\n                                    <video\n                                      onClick={() => setSelectedImage(image)}\n                                      controls\n                                      className=\"w-100 h-100 object-fit-cover\"\n                                    >\n                                      <source src={image} type=\"video/mp4\" />\n                                      {t(\"Your_browser_does\")}\n                                    </video>\n                                  </div>\n                                </div>\n                              ))}\n                            {userLogin.id === Number(to_id) && (\n                              <>\n                                {Array.isArray(ImagesFriendsOwn) &&\n                                  ImagesFriendsOwn.map((image, index) => (\n                                    <div\n                                      className=\"col-12 px-1 desdsd\"\n                                      key={index}\n                                    >\n                                      <div className=\"d-block recive_two 9\">\n                                        <MediaRenderer\n                                          onClick={() =>\n                                            setSelectedImage(image)\n                                          }\n                                          className=\"w-100 h-100 object-fit-cover\"\n                                          url={image}\n                                        />\n                                      </div>\n                                    </div>\n                                  ))}\n                              </>\n                            )}\n                            {userLogin.id === Number(to_id) && (\n                              <>\n                                {Array.isArray(VideosFriendsOwn) &&\n                                  VideosFriendsOwn.map((image, index) => (\n                                    <div\n                                      className=\"col-12 px-1 desdsd\"\n                                      key={index}\n                                    >\n                                      <div className=\"d-block recive_two 10\">\n                                        <video\n                                          onClick={() =>\n                                            setSelectedImage(image)\n                                          }\n                                          controls\n                                          className=\"w-100 h-100 object-fit-cover\"\n                                        >\n                                          <source\n                                            src={image}\n                                            type=\"video/mp4\"\n                                          />\n                                          {t(\"Your_browser_does\")}\n                                        </video>\n                                      </div>\n                                    </div>\n                                  ))}\n                              </>\n                            )}\n                          </div>\n                        </div>\n                        {userdetail.gender !== \"Couple\" && (\n                          <div className=\"col-12\">\n                            <h4 className=\"mb-2\">{t(\"abouthim\")}</h4>\n                            <ul className=\"revice_type d-flex flex-column gap-3 p-0\">\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Looking_for\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.search_looking_for !== null &&\n                                  userdetail.search_looking_for !== \"\" &&\n                                  userdetail.search_looking_for !== \"null\"\n                                    ? (() => {\n                                        try {\n                                          // Attempt to parse the JSON string\n                                          const parsedValue = JSON.parse(\n                                            userdetail.search_looking_for\n                                          );\n                                          return Array.isArray(parsedValue)\n                                            ? parsedValue.join(\", \") // Join array values with a comma\n                                            : parsedValue; // If not an array, display the value directly\n                                        } catch (error) {\n                                          return \"N/A\"; // Handle parsing errors\n                                        }\n                                      })()\n                                    : \"N/A\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Nationality\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.nationality !== \"null\"\n                                    ? userdetail.nationality\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Bodytype\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.bodytype !== \"null\"\n                                    ? userdetail.bodytype\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Height\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.height_feet !== \"null\"\n                                    ? userdetail.height_feet\n                                    : \"\"}{\" \"}\n                                  {userdetail.height_inches !== \"null\"\n                                    ? userdetail.height_inches\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Sexual_orientation\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.sexual_orientation !== null &&\n                                  userdetail.sexual_orientation !== \"\" &&\n                                  userdetail.sexual_orientation !== \"null\"\n                                    ? (() => {\n                                        try {\n                                          // Attempt to parse the JSON string\n                                          const parsedValue = JSON.parse(\n                                            userdetail.sexual_orientation\n                                          );\n                                          return Array.isArray(parsedValue)\n                                            ? parsedValue.join(\", \") // Join array values with a comma\n                                            : parsedValue; // If not an array, display the value directly\n                                        } catch (error) {\n                                          return \"Invalid data\"; // Handle parsing errors\n                                        }\n                                      })()\n                                    : \"N/A\"}{\" \"}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Relationship_status\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.relationship_status !== \"null\"\n                                    ? userdetail.relationship_status\n                                    : \"\"}{\" \"}\n                                </h6>\n                              </li>\n                            </ul>\n                          </div>\n                        )}\n                        {userdetail.gender === \"Couple\" && (\n                          <div className=\"col-12\">\n                            <h4 className=\"mb-2\">{t(\"abouthim\")}</h4>\n                            <ul className=\"revice_type d-flex flex-column gap-3 p-0\">\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Looking_for\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.search_looking_for !== null &&\n                                  userdetail.search_looking_for !== \"\" &&\n                                  userdetail.search_looking_for !== \"null\"\n                                    ? (() => {\n                                        try {\n                                          // Attempt to parse the JSON string\n                                          const parsedValue = JSON.parse(\n                                            userdetail.search_looking_for\n                                          );\n                                          return Array.isArray(parsedValue)\n                                            ? parsedValue.join(\", \") // Join array values with a comma\n                                            : parsedValue; // If not an array, display the value directly\n                                        } catch (error) {\n                                          return \"N/A\"; // Handle parsing errors\n                                        }\n                                      })()\n                                    : \"N/A\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Nationality\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.nationality !== \"null\"\n                                    ? userdetail.nationality\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Bodytype\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.bodytype !== \"null\"\n                                    ? userdetail.bodytype\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Height\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.height_feet !== \"null\"\n                                    ? userdetail.height_feet\n                                    : \"\"}{\" \"}\n                                  {userdetail.height_inches !== \"null\"\n                                    ? userdetail.height_inches\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Sexual_orientation\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.sexual_orientation !== null &&\n                                  userdetail.sexual_orientation !== \"\" &&\n                                  userdetail.sexual_orientation !== \"null\"\n                                    ? (() => {\n                                        try {\n                                          // Attempt to parse the JSON string\n                                          const parsedValue = JSON.parse(\n                                            userdetail.sexual_orientation\n                                          );\n                                          return Array.isArray(parsedValue)\n                                            ? parsedValue.join(\", \") // Join array values with a comma\n                                            : parsedValue; // If not an array, display the value directly\n                                        } catch (error) {\n                                          return \"Invalid data\"; // Handle parsing errors\n                                        }\n                                      })()\n                                    : \"N/A\"}{\" \"}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Relationship_status\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.relationship_status !== \"null\"\n                                    ? userdetail.relationship_status\n                                    : \"\"}{\" \"}\n                                </h6>\n                              </li>\n                            </ul>\n                          </div>\n                        )}\n                        {userdetail.gender === \"Couple\" && (\n                          <div className=\"col-12\">\n                            <h4 className=\"mb-2\">{t(\"abouther\")}</h4>\n                            <ul className=\"revice_type d-flex flex-column gap-3 p-0\">\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Looking_for\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.search_looking_for_her !== null &&\n                                  userdetail.search_looking_for_her !== \"\" &&\n                                  userdetail.search_looking_for_her !== \"null\"\n                                    ? (() => {\n                                        try {\n                                          // Attempt to parse the JSON string\n                                          const parsedValue = JSON.parse(\n                                            userdetail.search_looking_for_her\n                                          );\n                                          return Array.isArray(parsedValue)\n                                            ? parsedValue.join(\", \") // Join array values with a comma\n                                            : parsedValue; // If not an array, display the value directly\n                                        } catch (error) {\n                                          return \"N/A\"; // Handle parsing errors\n                                        }\n                                      })()\n                                    : \"N/A\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Nationality\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.nationality_her !== \"null\"\n                                    ? userdetail.nationality_her\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Bodytype\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.bodytype_her !== \"null\"\n                                    ? userdetail.bodytype_her\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Height\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.height_feet_her !== \"null\"\n                                    ? userdetail.height_feet_her\n                                    : \"\"}{\" \"}\n                                  {userdetail.height_inches !== \"null\"\n                                    ? userdetail.height_inches\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Sexual_orientation\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.sexual_orientation_her !== null &&\n                                  userdetail.sexual_orientation_her !== \"\" &&\n                                  userdetail.sexual_orientation_her !== \"null\"\n                                    ? (() => {\n                                        try {\n                                          // Attempt to parse the JSON string\n                                          const parsedValue = JSON.parse(\n                                            userdetail.sexual_orientation_her\n                                          );\n                                          return Array.isArray(parsedValue)\n                                            ? parsedValue.join(\", \") // Join array values with a comma\n                                            : parsedValue; // If not an array, display the value directly\n                                        } catch (error) {\n                                          return \"Invalid data\"; // Handle parsing errors\n                                        }\n                                      })()\n                                    : \"N/A\"}{\" \"}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Relationship_status\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.relationship_status_her !== \"null\"\n                                    ? userdetail.relationship_status_her\n                                    : \"\"}{\" \"}\n                                </h6>\n                              </li>\n                            </ul>\n                          </div>\n                        )}\n                        <div className=\"col-12\">\n                          <ul className=\"revice_type d-flex flex-column gap-3 p-0\">\n                            <li>\n                              <h6> {t(\"Member_since\")}: </h6>\n                              <h6 className=\"breaktext\">\n                                {userdetail.created_at &&\n                                userdetail.created_at !== \"\"\n                                  ? new Date(\n                                      userdetail.created_at\n                                    ).toLocaleDateString(\"en-GB\")\n                                  : \"\"}{\" \"}\n                              </h6>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"d-flex justify-content-center recive_main_btn align-items-center\">\n                      <button className=\"report\" onClick={handlereport}>\n                        {t(\"REPORT_USER\")}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Report isOpen={isPopupOpen1} onClose={closePopup1}></Report>\n      </section>\n      <Modal\n        show={Openpassword}\n        className=\"edit_admin\"\n        onHide={handleModalClose}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"newclass\">{t(\"EnterPassword\")}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <form className=\"popup-content\" onSubmit={handleSubmit}>\n            {showPopSuccess && (\n              <span className=\"text-success\">{successPopMessage}</span>\n            )}\n            {showPopError && (\n              <span className=\"text-danger\">{errorPopMessage}</span>\n            )}\n            <div className=\"mb-3\">\n              <label htmlFor=\"username\" className=\"form-label\">\n                {t(\"EnterPasswordtoViewThisAlbum\")}\n              </label>\n              <input\n                type=\"password\"\n                required\n                className=\"form-control\"\n                id=\"username\"\n                name=\"password\"\n                placeholder={t(\"Enterpasswordhere\")}\n              />\n            </div>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleModalClose}>\n                {t(\"Close\")}\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"primary\"\n                className=\"bg-success border-color-none\"\n              >\n                {t(\"Submit\")}\n              </Button>\n            </Modal.Footer>\n          </form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default ReceivedMessagesChat;\n","export default {\n  outline: {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: 24,\n    height: 24,\n    viewBox: '0 0 24 24',\n    fill: 'none',\n    stroke: 'currentColor',\n    strokeWidth: 2,\n    strokeLinecap: 'round',\n    strokeLinejoin: 'round',\n  },\n  filled: {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: 24,\n    height: 24,\n    viewBox: '0 0 24 24',\n    fill: 'currentColor',\n    stroke: 'none',\n  },\n};\n","import { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes';\nimport type { IconNode, IconProps, Icon } from './types';\n\nconst createReactComponent = (\n  type: 'outline' | 'filled',\n  iconName: string,\n  iconNamePascal: string,\n  iconNode: IconNode,\n) => {\n  const Component = forwardRef<Icon, IconProps>(\n    (\n      { color = 'currentColor', size = 24, stroke = 2, title, className, children, ...rest }: IconProps,\n      ref,\n    ) =>\n      createElement(\n        'svg',\n        {\n          ref,\n          ...defaultAttributes[type],\n          width: size,\n          height: size,\n          className: [`tabler-icon`, `tabler-icon-${iconName}`, className].join(' '),\n          ...(type === 'filled'\n            ? {\n                fill: color,\n              }\n            : {\n                strokeWidth: stroke,\n                stroke: color,\n              }),\n          ...rest,\n        },\n        [\n          title && createElement('title', { key: 'svg-title' }, title),\n          ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n          ...(Array.isArray(children) ? children : [children]),\n        ],\n      ),\n  );\n\n  Component.displayName = `${iconNamePascal}`;\n\n  return Component;\n};\n\nexport default createReactComponent;\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'home', 'IconHome', [[\"path\",{\"d\":\"M5 12l-2 0l9 -9l9 9l-2 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v6\",\"key\":\"svg-2\"}]]);"],"names":["_ref","url","onClick","className","mediaType","setMediaType","useState","isIphone","setIsIphone","base64Image","setBase64Image","useEffect","userAgent","navigator","test","extension","split","pop","toLowerCase","fetch","then","res","blob","reader","FileReader","onloadend","result","onerror","readAsDataURL","catch","includes","_jsx","_Fragment","children","endsWith","src","alt","style","maxWidth","_jsxs","srcSet","type","replace","controls","cursor","Link","to","download","target","title","rel","fileIcon","navigate","useNavigate","seenn","setSeen","arrow","setarrow","showMenu","setShowMenu","isonlyallbumPublic","setisonlyallbumPublic","toggleMenu","index","setShowMenu_Left","refreshNotifications","setRefreshNotifications","inputRef","useRef","Totalcountmessage","setTotalcountmessage","ImagesFriends","setImagesFriends","VideosFriends","setVideosFriends","ImagesFriendsOwn","setImagesFriendsOwn","VideosFriendsOwn","setVideosFriendsOwn","PasswordId","setPasswordId","redirectid","setredirectid","Openpassword","setOpenpassword","chooseallId_left","setchooseallId_left","selectedImage","setSelectedImage","chatEndRef","showPopSuccess","setShowPopSuccess","userblock","setuserblock","successPopMessage","setPopsuccessMessage","AllFriends","setAllFriends","apiUrl","apiUrlProfile","message","setMessage","userdetail","setuserdetail","messages","setmessages","allmessages","setmessagesall","LoginData","setLoginData","error","seterror","spinner","setspinner","Isfile","setFiles","to_id","setto_id","slug","useParams","showPopError","setShowPopError","errorPopMessage","setPoperrorMessage","isCheckfriend","setCheckfriend","restr_message","setrestr_message","albumdata","setalbumdata","userper","setuserper","isonlyallbum","setisonlyallbum","isonlyallbumfriend","setisonlyallbumfriend","UserDetail","setUserDetail","IdArray","setIdArray","activeIndex","setActiveIndex","searchText","setSearchText","filteredMessages","setFilteredMessages","offset","setOffset","hasMore","setHasMore","loadingMore","setLoadingMore","chatBoxRef","console","log","storedUsername","localStorage","getItem","userLogin","JSON","parse","fetchMessages","undefined","getUserDetails","async","formData","user_id","id","axios","post","headers","Accept","data","row","length","respo","getUsercheckPermisson","getCheckfriend","chatsectionUser","checkuserblock","setTimeout","current","scrollIntoView","behavior","block","hanldeseenmessagenew","err","response","request","getmessageCount","alldata","results","unreadCount","filter","item","read","formdata","newOffset","chatBox","scrollHeight","newMessages","hasScrolledRef","chatContainer","scrollTop","handleScroll","isAtBottom","clientHeight","hanldeseenmessage","handleKeyDown","event","key","window","addEventListener","removeEventListener","updateReadMessagesread","ws","WebSocket","onmessage","receivedMessage","senderId","Number","receiverId","loggedInUserId","setMessageFormessage","chatsectionUserRefresh","setMessageForultiple","getSEndMessagequick","close","form","n","t","Array","isArray","prevMessages","toid","toidd","recid","msg","recidArray","getFileSrc","fileUrl","some","ext","trim","requestToview","formDataa","respoo","is_friend","albumid","status","isPopupOpen1","setIsPopupOpen1","useTranslation","savedLanguage","i18n","language","changeLanguage","restrictedWords","apiUrll","get_albumStatusonly","getUserDetailsfetch","album_setting_status","getalbumStatus","String","getAllfriendss","showPicker","setShowPicker","pickerRef","handleClickOutside","contains","document","formatTime","dateString","postDate","Date","isNaN","adjustedPostDate","getTime","Intl","DateTimeFormat","timeZone","day","month","year","hour","minute","hour12","format","handledeletemainpopup","deleteev","chooseallId","setchooseallId","showdeletebutton","setshowdeletebutton","selectall","setselectall","handleCloseDeletePopup","handlechooseAll","prev","showMenu_Left","confirmPassword","useralbumid","passid","newTabUrl","open","mediaList","images","videos","forEach","media","file","push","getUserDetailsFriends","getUserDetailsOwn","getUserDetailsfetchUserdata","handleModalClose","get_albumStatusonlyPublic","get_albumStatusonlyfriend","readmessageuser","allImagesRef","allImages","visibility","addToAlbum","parsedImages","e","img","findIndex","Headertwo","ErrorPop","SuccessPop","IconHome","stroke","ev1","ev2","profile_image","require","username","birthday_date","birthday","birthDate","today","age","getFullYear","monthDifference","getMonth","getDate","calculateAge","location","placeholder","onInput","searchValue","value","filtered","chat","handlesearchmessage","other_id","handleallselect","ref","maxHeight","overflow","display","flexWrap","justifyContent","position","role","map","user1_id","user1_makeImagePrivate","user1_profile","f","fileIndex","fileSrc","HiDotsVertical","checked","onChange","date","MediaRendererFile","FaAngleDown","top","left","width","height","backgroundColor","alignItems","zIndex","stopPropagation","MediaRenderer","borderRadius","objectFit","disabled","FaChevronLeft","FaChevronRight","fontSize","onSubmit","preventDefault","FormData","commentText","currentWordCount","text","append","handleSend","selectedFiles","from","files","validFiles","errorFiles","size","prevFiles","focus","KeyboardEvent","code","keyCode","bubbles","dispatchEvent","multiple","EmojiPicker","onEmojiClick","emojiObject","prevMessage","emoji","inputValue","hasRestrictedWord","word","isImage","startsWith","isVideo","URL","createObjectURL","name","_","i","removeImage","profile_image_1","match","profile_image_2","profile_image_3","profile_image_4","uStatus","password_status","album_id","album_name","image","imgIndex","friend","cover_image","gender","search_looking_for","parsedValue","join","nationality","bodytype","height_feet","height_inches","sexual_orientation","relationship_status","search_looking_for_her","nationality_her","bodytype_her","height_feet_her","sexual_orientation_her","relationship_status_her","created_at","toLocaleDateString","Report","isOpen","onClose","closePopup1","body","overflowY","Modal","show","onHide","Header","closeButton","Title","Body","password","idd","htmlFor","required","Footer","Button","variant","defaultAttributes","outline","xmlns","viewBox","fill","strokeWidth","strokeLinecap","strokeLinejoin","filled","createReactComponent","iconName","iconNamePascal","iconNode","Component","forwardRef","color","rest","createElement","_ref2","tag","attrs","displayName"],"sourceRoot":""}