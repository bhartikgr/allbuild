{"version":3,"file":"static/js/9556.e7c4bafd.chunk.js","mappings":"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","sources":["components/ChatBox.jsx","components/Footer.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport { Link } from \"react-router-dom\";\nimport { HiDotsVertical } from \"react-icons/hi\";\nimport { IoMdCloseCircle } from \"react-icons/io\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport { FaAngleDown } from \"react-icons/fa6\";\nimport MediaRenderer from \"../components/MediaRenderer\";\n\nexport const ChatBox = ({\n  isOpen,\n  onClose,\n  children,\n  userdetail,\n  userChatDetail,\n  LoginData,\n  to_id,\n  getChatAfterSave,\n  refreshchat,\n}) => {\n  const chatEndRef = useRef(null); // Ref to the chat container\n  const [Totalcountmessage, setTotalcountmessage] = useState(\"\");\n  const [userblock, setuserblock] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [errormessage, seterrormessage] = useState(\"\");\n  const [chooseallId_left, setchooseallId_left] = useState([]);\n  const [showPopError, setShowPopError] = useState(false);\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [Isfile, setFiles] = useState([]);\n  const [IdArray, setIdArray] = useState([]);\n  const [istoid, settoid] = useState(\"\");\n  const [forenter, setforenter] = useState(false);\n  const [LoginDataUser, setLoginData] = useState(LoginData);\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const apiUrl = \"https://backend.amourette.no/api/members/\";\n  //const [files, setFiles] = useState([]);\n  const [seenn, setSeen] = useState(false); // Track if the function has been called\n  const [arrow, setarrow] = useState(false); // Track if the function has been called\n  const [error, seterror] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const [restr_message, setrestr_message] = useState(false);\n  const { t } = useTranslation();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [searchText, setSearchText] = useState(\"\"); // Search query\n  const [filteredMessages, setFilteredMessages] = useState([]);\n  const [messages, setMessages] = useState(userChatDetail);\n  const inputRef = useRef(null);\n  const chatBoxRef = useRef(null);\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  const [isManualEnter, setIsManualEnter] = useState(false); // Track Enter press\n  const [offset, setOffset] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  useEffect(() => {\n    setFilteredMessages(userChatDetail);\n  }, [userChatDetail]);\n\n  useEffect(() => {\n    // fetchMessagestotalrecord();\n  }, []);\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose(); // Close the popup if the overlay is clicked\n    }\n  };\n  const handleKeyDownn = (e) => {\n    if (e.key === \"Escape\" && selectedImage === null) {\n      onClose(); // Close the popup only if no image is selected\n    }\n  };\n\n  // Add event listener when the component mounts\n  useEffect(() => {\n    document.addEventListener(\"keydown\", handleKeyDownn);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDownn);\n    };\n  }, [selectedImage]);\n\n  useEffect(() => {\n    const handleKeyDownr = (event) => {\n      if (event.key === \"Escape\") {\n        setSelectedImage(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDownr);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDownr);\n    };\n  }, [setSelectedImage]);\n\n  const [showMenu, setShowMenu] = useState(false);\n  const handleCloseDeletePopup = () => {\n    setShowMenu(false);\n    setShowMenu_Left(false);\n  };\n  const toggleMenu = (index) => {\n    setShowMenu(showMenu === index ? null : index);\n  };\n  const [showPicker, setShowPicker] = useState(false);\n\n  const handleEmojiClick = (emojiObject) => {\n    setMessage((prevMessage) => prevMessage + emojiObject.emoji);\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n    setIsManualEnter(true);\n    setShowPicker(false); // Hide picker after selecting an emoji\n  };\n  // Runs when Isfile updates\n\n  useEffect(() => {\n    setLoginData(LoginData);\n    settoid(to_id);\n\n    if (isOpen) {\n      // When the chat box opens, initialize messages with userChatDetail\n      setMessages(userChatDetail);\n      setTimeout(() => {\n        if (chatEndRef.current) {\n          chatEndRef.current.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"nearest\",\n          });\n        }\n        hanldeseenmessage();\n      }, 100);\n    }\n  }, [isOpen, userChatDetail, LoginData]);\n  // const handleKeyDown = useCallback(\n  //   (e) => {\n  //     if (e.key === \"Enter\" && !e.shiftKey) {\n  //       e.preventDefault();\n\n  //       const isMessageNotEmpty = message.trim() !== \"\";\n  //       const isFileNotEmpty = Isfile.length > 0;\n\n  //       if (isMessageNotEmpty || isFileNotEmpty) {\n  //         handleSend();\n  //         setforenter(false); // Reset file trigger\n  //       }\n  //     }\n  //   },\n  //   [message, Isfile] // Dependencies to get the latest values\n  // );\n\n  // useEffect(() => {\n  //   window.addEventListener(\"keydown\", handleKeyDown);\n  //   return () => {\n  //     window.removeEventListener(\"keydown\", handleKeyDown);\n  //   };\n  // }, [handleKeyDown]);\n  useEffect(() => {\n    const handleKeyDownnn = (event) => {\n      if (event.key === \"Escape\") {\n        setSelectedImage(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDownnn);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDownnn);\n    };\n  }, [setSelectedImage]);\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    var st = userLogin.id;\n    if (userLogin && to_id) {\n      var t = Number(to_id);\n      // Ensure `to_id` is not empty before updating\n      setIdArray([userLogin.id, t]);\n    }\n  }, [to_id]);\n  useEffect(() => {\n    if (to_id !== \"\") {\n      getmessageCount();\n    }\n    console.log(to_id);\n  }, [to_id]);\n  const getmessageCount = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      to_id: to_id,\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getmessageCount\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Correct content type for file uploads\n        },\n      });\n      console.log(\"dd\", res.data);\n      var alldata = res.data.results;\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n      const unreadCount = alldata.filter((item) => item.read === \"No\").length;\n      console.log(unreadCount);\n      setTotalcountmessage(unreadCount);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request error:\", err.request);\n      } else {\n        console.error(\"General error:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\"); // Adjust port if needed\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        if (!receivedMessage) {\n          console.error(\"Received invalid JSON:\", event.data);\n          return;\n        }\n        console.log(receivedMessage);\n        const senderId = Number(receivedMessage.user_id); // Sender's ID (e.g. 5)\n        const receiverId = Number(receivedMessage.to_id); // Receiver's ID (e.g. 1)\n        const loggedInUserId = Number(LoginData.id); // Currently logged-in user's ID (e.g. 1 or 5)\n\n        var ttt = Number(to_id);\n        if (receivedMessage.event === \"DeleteChatMessage\") {\n          if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n            setMessageFormessage(receivedMessage.id);\n            refreshchat();\n          }\n        }\n        if (receivedMessage.event === \"DeleteChatMessage_other\") {\n          if (loggedInUserId === senderId) {\n            setMessageFormessage(receivedMessage.id);\n            refreshchat();\n          }\n        }\n        if (receivedMessage.event === \"DeleteChatMessage_other_Left\") {\n          if (loggedInUserId === senderId) {\n            //setMessageForultiple_left(receivedMessage.id);\n          }\n        }\n        if (receivedMessage.event === \"DeleteChatMessageMultiple\") {\n          if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n            setMessageForultiple(receivedMessage.id);\n            refreshchat();\n          }\n        }\n        if (receivedMessage.event === \"ChatMessage\") {\n          if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n            getSEndMessagequick(receivedMessage, senderId, receiverId);\n            //  / hanldeseenmessagenotscroll();\n            // If the logged-in user is the sender, auto-scroll\n\n            if (loggedInUserId === senderId) {\n              setTimeout(() => {\n                chatEndRef.current.scrollIntoView({\n                  behavior: \"smooth\",\n                  block: \"nearest\",\n                });\n              }, 350);\n            } else {\n              console.log(\"This is a receiver's message:\", receivedMessage);\n            }\n          }\n        }\n        // Ensure message is only seen by the sender or receiver\n        if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n          if (\n            receivedMessage.event !== \"DeleteChatMessageMultiple\" &&\n            receivedMessage.event !== \"DeleteChatMessage\" &&\n            receivedMessage.event !== \"DeleteChatMessage_other\"\n          ) {\n            //(receivedMessage, senderId, receiverId);\n\n            // If the logged-in user is the sender, auto-scroll\n            if (loggedInUserId === senderId) {\n              chatEndRef.current.scrollIntoView({\n                behavior: \"smooth\",\n                block: \"nearest\",\n              });\n            } else {\n              console.log(\"This is a receiver's message:\", receivedMessage);\n            }\n          }\n        } else {\n          // Ignore the message for any other users\n          console.log(\"Message ignored for this user:\", loggedInUserId);\n        }\n      } catch (error) {\n        console.error(\"Failed to parse WebSocket message:\", error);\n        console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [LoginData, to_id, IdArray]);\n  const isScrolledToBottom = (element) => {\n    return element.scrollHeight - element.scrollTop === element.clientHeight;\n  };\n  const fetchMessagestotalrecord = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formdata = {\n      user_id: userLogin.id,\n      to_id: to_id,\n    };\n\n    try {\n      const res = await axios.post(\n        apiUrl + \"getuserChatmessageTotalMessage\",\n        formdata,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n\n      const newMessages = res.data.results;\n      //setOffset((prev) => prev + newMessages.length);\n    } catch (error) {\n      console.error(\"Error fetching messages\", error);\n    }\n    //setLoadingMore(false);\n  };\n  const fetchMessages = async (newOffset) => {\n    setLoadingMore(true);\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formdata = {\n      user_id: userLogin.id,\n      to_id: to_id,\n      offset: newOffset,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getuserChatmessage\", formdata, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      const newMessages = res.data.results;\n      console.log(formdata);\n      console.log(newMessages);\n\n      if (newOffset === 0) {\n        const reversed = [...newMessages].reverse(); // show newest last\n        setMessages(reversed);\n        setFilteredMessages(reversed);\n      } else {\n        setFilteredMessages((prevMessages) => {\n          const existingIds = new Set(prevMessages.map((msg) => msg.id));\n          const filteredNewMessages = newMessages.filter(\n            (msg) => !existingIds.has(msg.id)\n          );\n\n          return [...filteredNewMessages.reverse(), ...prevMessages]; // prepend older messages\n        });\n      }\n      setOffset((prev) => prev + newMessages.length);\n    } catch (error) {\n      console.error(\"Error fetching messages\", error);\n    }\n    setLoadingMore(false);\n  };\n  const handleScroll = async () => {\n    const chatBox = chatBoxRef.current;\n    const isAtTop = chatBox.scrollTop <= 7;\n    const isAtBottom =\n      chatBox.scrollHeight - chatBox.scrollTop <= chatBox.clientHeight + 10;\n    if (isAtTop && hasMore && !loadingMore) {\n      const oldScrollHeight = chatBox.scrollHeight; // ✅ here\n\n      await fetchMessages(offset); // fetch next 10 (older) messages\n\n      // Maintain scroll position after loading more messages\n      setTimeout(() => {\n        const newScrollHeight = chatBox.scrollHeight;\n        chatBox.scrollTop = newScrollHeight - oldScrollHeight; // ✅ now it's in scope\n      }, 100);\n    }\n\n    setarrow(isAtBottom);\n    if (isAtBottom) {\n      setarrow(true);\n      hanldeseenmessage();\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n      if (to_id !== \"\") {\n        let formData = {\n          user_id: userLogin.id,\n          to_id: to_id,\n        };\n\n        try {\n          const res = await axios.post(apiUrl + \"messageseen\", formData, {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n          });\n\n          if (res.data.status === \"1\") {\n            chatsectionUser(to_id);\n          }\n          getmessageCount();\n        } catch (err) {\n          // Enhanced error handling\n          if (err.response) {\n            console.error(\"Error response:\", err.response);\n          } else if (err.request) {\n            console.error(\"Request data:\", err.request);\n          } else {\n            console.error(\"Error message:\", err.message);\n          }\n        }\n      }\n    } else {\n    }\n  };\n  const chatsectionUser = async (idd) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    // Ensure LoginData is not null\n    if (!userLogin || !userLogin.id) {\n      console.error(\"Login data is not available\");\n      return; // Exit the function if LoginData is null\n    }\n\n    let formData = {\n      user_id: userLogin.id,\n      to_id: idd,\n      offset: 0,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getuserChatmessage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n\n      //  setmessages(respo);\n      //  setmessagesall(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    const checkuserblock = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        user_id: userLogin.id,\n        to_id: to_id,\n      };\n\n      try {\n        const res = await axios.post(apiUrl + \"checkuserblock\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Correct content type for file uploads\n          },\n        });\n        console.log(\"checkblock\");\n        console.log(res.data);\n        if (res.data.result.length > 0) {\n          setuserblock(true);\n        } else {\n          setuserblock(false);\n        }\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n          console.error(\"Response error:\", err.response);\n        } else if (err.request) {\n          console.error(\"Request error:\", err.request);\n        } else {\n          console.error(\"General error:\", err.message);\n        }\n      }\n    };\n    checkuserblock();\n  }, []);\n  const calculateAge = (birthday) => {\n    const birthDate = new Date(birthday);\n    const today = new Date();\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDifference = today.getMonth() - birthDate.getMonth();\n\n    // Adjust age if the birthday hasn't occurred yet this year\n    if (\n      monthDifference < 0 ||\n      (monthDifference === 0 && today.getDate() < birthDate.getDate())\n    ) {\n      age--;\n    }\n\n    return age;\n  };\n  const handleInputChange = (e) => {\n    const inputValue = e.target.value;\n    setMessage(inputValue);\n    if (inputValue.trim() !== \"\") {\n      setforenter(true);\n    } else {\n      setforenter(false);\n    }\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n    setIsManualEnter(true);\n    if (hasRestrictedWord) {\n      setrestr_message(true);\n    } else {\n      setrestr_message(false);\n    }\n  };\n\n  // Button disabled logic\n  const isButtonDisabled =\n    (!message.trim() && Isfile.length === 0) || restr_message;\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n\n  const MAX_FILE_SIZE_MB = 25; // Maximum file size in MB\n\n  const handleFileChange = async (e) => {\n    const selectedFiles = Array.from(e.target.files);\n    const validFiles = [];\n    const errorFiles = [];\n\n    for (const file of selectedFiles) {\n      const isImage = file.type.startsWith(\"image/\");\n      const isVideo = file.type.startsWith(\"video/\");\n\n      if (!isImage && !isVideo) {\n        errorFiles.push(`${file.name} is not a valid image or video.`);\n        continue;\n      }\n\n      if (file.size / 1024 / 1024 > MAX_FILE_SIZE_MB) {\n        errorFiles.push(`${file.name} exceeds ${MAX_FILE_SIZE_MB} MB.`);\n        continue;\n      }\n\n      if (isImage) {\n        const supportedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n        if (!supportedTypes.includes(file.type)) {\n          try {\n            const convertedFile = await convertToPng(file);\n            validFiles.push(convertedFile);\n            continue;\n          } catch (err) {\n            console.error(\"Image conversion error:\", err);\n            errorFiles.push(`Failed to convert ${file.name}`);\n            continue;\n          }\n        }\n      }\n\n      validFiles.push(file);\n    }\n\n    if (errorFiles.length > 0) {\n      seterror(`Some files were not added:\\n${errorFiles.join(\"\\n\")}`);\n    } else {\n      seterror(\"\");\n    }\n\n    setIsManualEnter(true);\n    setforenter(true);\n    setFiles((prevFiles) => [...prevFiles, ...validFiles]);\n\n    if (inputRef.current) {\n      inputRef.current.focus();\n\n      const event = new KeyboardEvent(\"keydown\", {\n        key: \"Enter\",\n        code: \"Enter\",\n        keyCode: 13,\n        bubbles: true,\n      });\n      inputRef.current.dispatchEvent(event);\n    }\n  };\n\n  const convertToPng = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = function (event) {\n        const img = new Image();\n        img.onload = function () {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = img.width;\n          canvas.height = img.height;\n\n          const ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(img, 0, 0);\n\n          canvas.toBlob(\n            (blob) => {\n              if (blob) {\n                const pngFile = new File(\n                  [blob],\n                  file.name.replace(/\\.\\w+$/, \".png\"),\n                  {\n                    type: \"image/png\",\n                    lastModified: new Date().getTime(),\n                  }\n                );\n                resolve(pngFile);\n              } else {\n                reject(new Error(\"Failed to convert image.\"));\n              }\n            },\n            \"image/png\",\n            1\n          );\n        };\n        img.onerror = reject;\n        img.src = event.target.result;\n      };\n\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const removeImage = (index) => {\n    setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index)); // Remove image by index\n  };\n  const setMessageFormessage = (recid) => {\n    setFilteredMessages((prevMessages) =>\n      prevMessages.filter((msg) => msg.id !== recid)\n    );\n  };\n  const setMessageForultiple = (recidArray) => {\n    setFilteredMessages(\n      (prevMessages) =>\n        prevMessages.filter((msg) => !recidArray.includes(msg.id)) // Remove all matching IDs\n    );\n  };\n  const setMessageForultiple_left = (recidArray) => {\n    setFilteredMessages(\n      (prevMessages) =>\n        prevMessages.filter((msg) => !recidArray.includes(msg.id)) // Remove all matching IDs\n    );\n  };\n  const getSEndMessagequick = async (form, n, t) => {\n    let formData = {\n      data: form,\n      user_id: n,\n      to_id: t,\n    };\n    console.log(formData, \"que\");\n    try {\n      const res = await axios.post(apiUrl + \"getSEndMessagequick\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Correct content type for file uploads\n        },\n      });\n\n      var alldata = res.data.results;\n      console.log(alldata, \"check\");\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      if (t === userLogin.id) {\n        if (alldata.length > 0) {\n          const unreadCount = alldata.filter(\n            (item) => item.read === \"No\"\n          ).length;\n          console.log(unreadCount);\n          getmessageCount();\n          //setTotalcountmessage(unreadCount);\n        }\n      }\n      // Assuming res.data.results is the array of messages you want to append\n      if (res.data && Array.isArray(res.data.results)) {\n        // Update the messages state with new messages appended\n\n        setFilteredMessages((prevMessages) => [\n          ...prevMessages,\n          ...res.data.results,\n        ]);\n        setMessages(res.data.results);\n      } else {\n        console.error(\"No valid results found in the response:\", res.data);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request error:\", err.request);\n      } else {\n        console.error(\"General error:\", err.message);\n      }\n    }\n  };\n  const getSEndMessage = async (form, n, t) => {\n    let formData = {\n      data: form,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getSEndMessage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Correct content type for file uploads\n        },\n      });\n      console.log(\"Response from server:\", res.data);\n      var alldata = res.data.results;\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      if (t === userLogin.id) {\n        if (alldata.length > 0) {\n          const unreadCount = alldata.filter(\n            (item) => item.read === \"No\"\n          ).length;\n          console.log(unreadCount);\n          getmessageCount();\n          //setTotalcountmessage(unreadCount);\n        }\n      }\n      // Assuming res.data.results is the array of messages you want to append\n      if (res.data && Array.isArray(res.data.results)) {\n        // Update the messages state with new messages appended\n        setFilteredMessages((prevMessages) => [\n          ...prevMessages,\n          ...res.data.results,\n        ]);\n        setMessages((prevMessages) => [...prevMessages, ...res.data.results]);\n      } else {\n        console.error(\"No valid results found in the response:\", res.data);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request error:\", err.request);\n      } else {\n        console.error(\"General error:\", err.message);\n      }\n    }\n  };\n  const MAX_WORDS = 2000;\n  const countWords = (text) => {\n    return text.trim() ? text.split(/\\s+/).length : 0; // Count words by splitting on whitespace\n  };\n  const handleSend = async () => {\n    setShowMenu(false);\n    if (userblock === true) {\n      setShowPopError(true);\n      setPoperrorMessage(\"User is blocked\");\n      setTimeout(() => {\n        setShowPopError(false);\n        setPoperrorMessage(\"\");\n      }, 1000);\n    } else {\n      setarrow(true);\n      const formData = new FormData();\n      setspinner(true);\n      var commentText = message?.trim();\n      console.log(commentText);\n\n      if (commentText !== \"\") {\n        const currentWordCount = countWords(commentText);\n        if (currentWordCount < 2000) {\n          formData.append(\"message\", message);\n          formData.append(\"fileType\", \"chats\");\n          formData.append(\"user_id\", LoginData.id);\n          formData.append(\"to_id\", to_id);\n          Isfile.forEach((file) => {\n            formData.append(\"files\", file); // Use the key 'files' for your backend to handle multiple files\n          });\n\n          console.log(\"Message:\", message);\n          console.log(\"Files:\", Isfile);\n\n          try {\n            const res = await axios.post(apiUrl + \"saveUserChat\", formData, {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"multipart/form-data\", // Correct content type for file uploads\n              },\n            });\n\n            setspinner(false);\n            var respo = res.data;\n\n            if (chatEndRef.current) {\n              chatEndRef.current.scrollIntoView({\n                behavior: \"smooth\",\n                block: \"nearest\",\n              });\n            }\n            //await getChatAfterSave();\n            setTimeout(() => {\n              if (chatEndRef.current) {\n                chatEndRef.current.scrollIntoView({\n                  behavior: \"smooth\",\n                  block: \"nearest\",\n                });\n              }\n              setTimeout(() => {\n                setarrow(true);\n              }, 50);\n            }, 500);\n          } catch (err) {\n            // Enhanced error handling\n            if (err.response) {\n              console.error(\"Response error:\", err.response);\n            } else if (err.request) {\n              console.error(\"Request error:\", err.request);\n            } else {\n              console.error(\"General error:\", err.message);\n            }\n          }\n\n          // Reset message and files after sending\n          setMessage(\"\");\n          setFiles([]);\n        } else {\n          setspinner(false);\n          setShowPopError(true);\n          setPoperrorMessage(\n            `Comment cannot exceed ${MAX_WORDS} words. Currently: ${currentWordCount} words.`\n          );\n          setTimeout(() => {\n            setShowPopError(false);\n            setPoperrorMessage(\"\");\n          }, 1000);\n        }\n      } else {\n        formData.append(\"message\", message);\n        formData.append(\"fileType\", \"chats\");\n        formData.append(\"user_id\", LoginData.id);\n        formData.append(\"to_id\", to_id);\n        Isfile.forEach((file) => {\n          formData.append(\"files\", file); // Use the key 'files' for your backend to handle multiple files\n        });\n\n        console.log(\"Message:\", message);\n        console.log(\"Files:\", Isfile);\n\n        try {\n          const res = await axios.post(apiUrl + \"saveUserChat\", formData, {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"multipart/form-data\", // Correct content type for file uploads\n            },\n          });\n          setspinner(false);\n          var respo = res.data;\n          //setMessages((prevMessages) => [...prevMessages, res.data]); // Update messages state\n\n          // Scroll to the bottom of the chat\n          if (chatEndRef.current) {\n            chatEndRef.current.scrollIntoView({\n              behavior: \"smooth\",\n              block: \"nearest\",\n            });\n          }\n          //await getChatAfterSave();\n          setTimeout(() => {\n            if (chatEndRef.current) {\n              chatEndRef.current.scrollIntoView({\n                behavior: \"smooth\",\n                block: \"nearest\",\n              });\n            }\n          }, 500);\n        } catch (err) {\n          // Enhanced error handling\n          if (err.response) {\n            console.error(\"Response error:\", err.response);\n          } else if (err.request) {\n            console.error(\"Request error:\", err.request);\n          } else {\n            console.error(\"General error:\", err.message);\n          }\n        }\n\n        // Reset message and files after sending\n        setMessage(\"\");\n        setFiles([]);\n      }\n    }\n  };\n  const handlesearchmessage = (e) => {\n    const searchValue = e.target.value.toLowerCase();\n    setSearchText(searchValue);\n\n    if (!searchValue) {\n      setFilteredMessages(userChatDetail); // Reset to all messages when search is empty\n      return;\n    }\n\n    const filtered = userChatDetail.filter(\n      (chat) =>\n        chat && chat.message && chat.message.toLowerCase().includes(searchValue)\n    );\n\n    setFilteredMessages(filtered);\n  };\n  const formatTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Ensure the date string is correctly formatted\n    const postDate = new Date(dateString);\n    if (isNaN(postDate)) return \"Invalid Date\";\n\n    // Adjust time by adding 1 hour (3600000 milliseconds)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Format using Intl.DateTimeFormat with Europe/Oslo timezone\n    const options = {\n      timeZone: \"Europe/Oslo\",\n      day: \"2-digit\",\n      month: \"short\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: true, // Use AM/PM format\n    };\n\n    const formatter = new Intl.DateTimeFormat(\"en-US\", options);\n    return formatter.format(adjustedPostDate);\n  };\n\n  const handledeletemainpopup = async (id) => {\n    let deleteev = {\n      id: id,\n      user_id: LoginData.id,\n      to_id: to_id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"deletemessagechat\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      setShowMenu(false);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const [chooseallId, setchooseallId] = useState([]);\n  const [showdeletebutton, setshowdeletebutton] = useState(false);\n  const [selectall, setselectall] = useState(false);\n  const handlealldelete = async () => {\n    let deleteev = {\n      id: chooseallId,\n      user_id: LoginData.id,\n      to_id: to_id,\n      other_id: chooseallId_left,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"deletemultiplemessagechat\",\n        deleteev,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      setchooseallId([]);\n      setshowdeletebutton(false);\n      setselectall(false);\n      setchooseallId_left([]);\n      setshowdeletebutton(false);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n    //handledeleteOther_Left();\n  };\n  const handledeleteOther_Left = async () => {\n    let deleteev = {\n      id: chooseallId_left,\n      user_id: LoginData.id,\n      to_id: to_id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"deletemultiplemessagechat_left\",\n        deleteev,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      setTimeout(() => {\n        setchooseallId([]);\n        setshowdeletebutton(false);\n        setselectall(false);\n        setchooseallId_left([]);\n        setshowdeletebutton(false);\n      }, 500);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleallselect = () => {\n    setselectall(!selectall);\n  };\n  const handlechooseAll = (id) => {\n    setchooseallId(\n      (prev) =>\n        prev.includes(id)\n          ? prev.filter((item) => item !== id) // Remove if already selected\n          : [...prev, id] // Add if not selected\n    );\n  };\n  const getFileSrc = (fileUrl) => {\n    const allowedExtensions = [\".png\", \".jpg\", \".jpeg\", \".gif\"];\n    return allowedExtensions.some((ext) => fileUrl.endsWith(ext))\n      ? fileUrl\n      : null; // Return null if not an image\n  };\n\n  useEffect(() => {\n    if (chooseallId_left.length > 0 || chooseallId.length > 0) {\n      setshowdeletebutton(true);\n    } else {\n      setshowdeletebutton(false);\n    }\n  }, [chooseallId_left, chooseallId]);\n\n  const [showMenu_Left, setShowMenu_Left] = useState(false);\n  const handlechooseAll_left = (id) => {\n    setchooseallId_left(\n      (prev) =>\n        prev.includes(id)\n          ? prev.filter((item) => item !== id) // Remove if already selected\n          : [...prev, id] // Add if not selected\n    );\n  };\n\n  const toggleMenu_Left = (index) => {\n    setShowMenu_Left(showMenu_Left === index ? null : index);\n  };\n  const handledeletemainpopup_Left = async (id) => {\n    let deleteev = {\n      id: id,\n      user_id: LoginData.id,\n      to_id: to_id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"deletemessagechat_Left\",\n        deleteev,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const hanldeseenmessage = async () => {\n    console.log(to_id);\n    if (!to_id || arrow) return;\n\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    let formData = {\n      user_id: userLogin.id,\n      to_id: to_id,\n    };\n    console.log(formData);\n\n    try {\n      const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      console.log(\"Seen API response received\");\n\n      // Safe scroll\n      setTimeout(() => {\n        if (chatEndRef.current) {\n          chatEndRef.current.scrollIntoView({\n            behavior: \"smooth\",\n            block: \"nearest\",\n          });\n        }\n      }, 350);\n\n      getmessageCount();\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const hanldeseenmessageAll = async () => {\n    console.log(to_id);\n    if (!to_id) return;\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      to_id: to_id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      console.log(\"ll\");\n      setTimeout(() => {\n        chatEndRef.current.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"nearest\",\n        });\n        setTimeout(() => {\n          setarrow(true);\n        }, 350);\n      }, 30);\n\n      getmessageCount();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const hanldeseenmessagenotscroll = async () => {\n    if (to_id !== \"\") {\n      let formData = {\n        user_id: userLogin.id,\n        to_id: to_id,\n      };\n      console.log(formData);\n      try {\n        const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        console.log(\"ll\");\n\n        getmessageCount();\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n          console.error(\"Error response:\", err.response);\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    if (!isOpen) return; // 👈 Don't attach if popup is closed\n\n    const chatBox = chatBoxRef.current;\n    if (!chatBox) return;\n\n    const handle = () => handleScroll(); // for cleanup consistency\n\n    chatBox.addEventListener(\"scroll\", handle);\n\n    return () => {\n      chatBox.removeEventListener(\"scroll\", handle);\n    };\n  }, [isOpen, arrow, offset, hasMore, loadingMore]);\n\n  // Scroll to the bottom when new messages arrive\n\n  const hanldeseenmessages = async () => {\n    if (to_id !== \"\") {\n      let formData = {\n        user_id: userLogin.id,\n        to_id: to_id,\n      };\n      console.log(formData);\n      try {\n        const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        console.log(\"ll\");\n\n        getmessageCount();\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n          console.error(\"Error response:\", err.response);\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n  // Early return if the chat box is not open\n  if (!isOpen) return null;\n\n  return (\n    <>\n      <div className=\"popup-overlay checkbox\" onClick={handleOverlayClick}>\n        {showPopError && <ErrorPop message={errorPopMessage} />}\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        <div className=\"popup-content col-md-4\">\n          <div className=\"d-flex flex-column gap-0 chat_box\">\n            <div className=\"d-flex align-items-center gap-3 mess_head \">\n              <Link\n                target=\"_blank\"\n                to={`/friend/${userdetail.id}`}\n                className=\"d-block chat_profile\"\n              >\n                {userdetail.profile_image &&\n                userdetail.makeImagePrivate === 0 ? ( // Display the image URL if available\n                  <img\n                    className=\"w-100 h-100\"\n                    src={userdetail.profile_image} // Use the URL from the member object\n                    alt=\"userpic\"\n                  />\n                ) : (\n                  <img\n                    className=\"w-100 h-100\"\n                    src={require(\"../assets/images/thumb.jpg\")} // Default image if profile image is not available\n                    alt=\"userpic\"\n                  />\n                )}\n              </Link>\n              <div className=\"d-flex flex-md-row flex-column align-items-md-center justify-content-between w-100 gap-2 chat_name pt-3\">\n                <div className=\"d-flex flex-column gap-3\">\n                  <div className=\"d-flex flex-column gap-1\">\n                    <div className=\"d-flex align-items-md-center gap-2\">\n                      <div className=\"newclass\">\n                        <Link\n                          target=\"_blank\"\n                          className=\"unamecolor\"\n                          to={`/friend/${userdetail.id}`}\n                        >\n                          {userdetail.username}\n                        </Link>\n                      </div>\n                      ,\n                      <h3>\n                        {userdetail.birthday_date != null\n                          ? `${calculateAge(userdetail.birthday_date)}`\n                          : \"\"}\n                      </h3>\n                    </div>\n                    <h5>{userdetail.location}</h5>\n                  </div>\n                </div>\n                <div className=\"d-flex flex-column justify-content-end align-items-end gap-2\">\n                  <div className=\"search-box\">\n                    <i className=\"fas fa-search\"></i>\n                    <input\n                      type=\"search\"\n                      placeholder={t(\"searchaaa\")}\n                      onInput={(e) => handlesearchmessage(e)}\n                    />\n                  </div>\n                  <div className=\"d-flex align-items-center gap-2 message_s-btn\">\n                    {showdeletebutton && (\n                      <button\n                        className=\"deltebtn\"\n                        type=\"button\"\n                        onClick={handlealldelete}\n                      >\n                        {t(\"delete\")}\n                      </button>\n                    )}\n                    <button\n                      className={`select_btn ${selectall ? \"active\" : \"\"}`}\n                      type=\"button\"\n                      onClick={handleallselect}\n                    >\n                      {t(\"Select\")}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div\n              className=\"mess_box_main\"\n              ref={chatBoxRef}\n              style={{\n                maxHeight: \"56vh\",\n                overflow: \"auto\",\n                display: \"flex\",\n                flexWrap: \"wrap\",\n                justifyContent: \"end\",\n              }}\n            >\n              <div className=\"mess_box d-flex flex-column gap-3 justify-content-end w-100\">\n                {loadingMore && (\n                  <div className=\"text-center w-100 py-2\">\n                    <span\n                      className=\"spinner-border text-success spinner-border-sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    ></span>\n                  </div>\n                )}\n                {filteredMessages.length === 0 ? (\n                  <div className=\"empty-chat-message\">\n                    <p>{t(\"No_messages_to_display\")}</p>\n                  </div>\n                ) : (\n                  filteredMessages.map((chat, index) => (\n                    <div\n                      key={index}\n                      ref={\n                        index === filteredMessages.length - 1\n                          ? chatEndRef\n                          : null\n                      }\n                    >\n                      {chat.user_id === LoginData.id ? (\n                        // Right-aligned messages (sent by the logged-in user)\n                        <>\n                          <div className=\"main_mess right_mess d-flex align-items-end gap-2 flex-column\">\n                            {/* Render the profile image only if there are files */}\n                            {Array.isArray(JSON.parse(chat.file)) &&\n                              JSON.parse(chat.file).length > 0 && (\n                                <>\n                                  {/* Show profile image only for the first file */}\n                                  {index === 0 && (\n                                    <Link\n                                      target=\"_blank\"\n                                      to={`/friend/${chat.user1_id}`}\n                                      className=\"d-block mess_profile\"\n                                    >\n                                      <img\n                                        className=\"w-100 h-100 pr\"\n                                        src={\n                                          chat.user1_makeImagePrivate === 1\n                                            ? require(\"../assets/images/thumb.jpg\")\n                                            : chat.user1_profile\n                                        }\n                                        alt=\"profile\"\n                                      />\n                                    </Link>\n                                  )}\n\n                                  {JSON.parse(chat.file).map((f, fileIndex) => {\n                                    const fileSrc = getFileSrc(f);\n\n                                    return (\n                                      <div\n                                        className=\"message d-block send_image\"\n                                        key={fileIndex}\n                                      >\n                                        {fileSrc ? (\n                                          // If it's an image, display it\n\n                                          <>\n                                            <div className=\"d-flex align-items-start gap-1 h-100\">\n                                              <div\n                                                style={{\n                                                  position: \"relative\",\n                                                  display: \"inline-block\",\n                                                }}\n                                              >\n                                                <button\n                                                  className=\"remove_mess\"\n                                                  onClick={() =>\n                                                    toggleMenu(index)\n                                                  }\n                                                >\n                                                  <HiDotsVertical />\n                                                </button>\n\n                                                {showMenu === index && (\n                                                  <ul className=\"popup-menu\">\n                                                    <li\n                                                      onClick={() =>\n                                                        handledeletemainpopup(\n                                                          chat.id\n                                                        )\n                                                      }\n                                                    >\n                                                      {t(\"Remove\")}\n                                                    </li>\n                                                    <li\n                                                      onClick={\n                                                        handleCloseDeletePopup\n                                                      }\n                                                    >\n                                                      {t(\"Cancel\")}\n                                                    </li>\n                                                  </ul>\n                                                )}\n                                              </div>\n                                              <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                <div className=\"d-flex align-items-start gap-1\">\n                                                  <img\n                                                    className=\"w-100 h-100 d\"\n                                                    src={fileSrc}\n                                                    alt={`file-${fileIndex}`}\n                                                    onClick={() =>\n                                                      setSelectedImage(fileSrc)\n                                                    }\n                                                    style={{\n                                                      cursor: \"pointer\",\n                                                    }}\n                                                  />\n                                                  {selectall && (\n                                                    <input\n                                                      type=\"checkbox\"\n                                                      checked={chooseallId.includes(\n                                                        chat.id\n                                                      )}\n                                                      onChange={() =>\n                                                        handlechooseAll(chat.id)\n                                                      }\n                                                    />\n                                                  )}\n                                                </div>\n                                                <span>\n                                                  {formatTime(chat.date)}\n                                                </span>\n                                              </div>\n                                            </div>\n                                          </>\n                                        ) : (\n                                          <>\n                                            <div className=\"d-flex align-items-start gap-1 h-100\">\n                                              <div\n                                                style={{\n                                                  position: \"relative\",\n                                                  display: \"inline-block\",\n                                                }}\n                                              >\n                                                <button\n                                                  className=\"remove_mess\"\n                                                  onClick={() =>\n                                                    toggleMenu(index)\n                                                  }\n                                                >\n                                                  <HiDotsVertical />\n                                                </button>\n\n                                                {showMenu === index && (\n                                                  <ul className=\"popup-menu\">\n                                                    <li\n                                                      onClick={() =>\n                                                        handledeletemainpopup(\n                                                          chat.id\n                                                        )\n                                                      }\n                                                    >\n                                                      {t(\"Remove\")}\n                                                    </li>\n                                                    <li\n                                                      onClick={\n                                                        handleCloseDeletePopup\n                                                      }\n                                                    >\n                                                      {t(\"Cancel\")}\n                                                    </li>\n                                                  </ul>\n                                                )}\n                                              </div>\n                                              <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                <div className=\"d-flex align-items-start gap-1\">\n                                                  <Link\n                                                    to={f}\n                                                    download\n                                                    target=\"_blank\"\n                                                    rel=\"noopener noreferrer\"\n                                                    className=\"h-100\"\n                                                  >\n                                                    <img\n                                                      src={require(\"../assets/images/images.png\")}\n                                                      alt=\"File\"\n                                                    />\n                                                  </Link>\n                                                  {selectall && (\n                                                    <input\n                                                      type=\"checkbox\"\n                                                      checked={chooseallId.includes(\n                                                        chat.id\n                                                      )}\n                                                      onChange={() =>\n                                                        handlechooseAll(chat.id)\n                                                      }\n                                                    />\n                                                  )}\n                                                </div>\n                                                <span>\n                                                  {formatTime(chat.date)}\n                                                </span>\n                                              </div>\n                                            </div>\n                                          </>\n                                        )}\n                                      </div>\n                                    );\n                                  })}\n                                </>\n                              )}\n                          </div>\n\n                          {chat.message && chat.message !== \"null\" && (\n                            <div className=\"main_mess right_mess d-flex align-items-center gap-2\">\n                              <Link\n                                target=\"_blank\"\n                                to={`/friend/${chat.user1_id}`}\n                                className=\"d-block mess_profile ri\"\n                              >\n                                <img\n                                  className=\"w-100 h-100 ri\"\n                                  src={\n                                    chat.user1_makeImagePrivate === 1\n                                      ? require(\"../assets/images/thumb.jpg\")\n                                      : chat.user1_profile\n                                  }\n                                  alt=\"profile\"\n                                />\n                              </Link>\n                              <div className=\" d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                <div className=\"d-flex align-items-start gap-0\">\n                                  <div\n                                    style={{\n                                      position: \"relative\",\n                                      display: \"inline-block\",\n                                    }}\n                                  >\n                                    <button\n                                      className=\"remove_mess\"\n                                      onClick={() => toggleMenu(index)}\n                                    >\n                                      <HiDotsVertical />\n                                    </button>\n\n                                    {showMenu === index && (\n                                      <ul className=\"popup-menu\">\n                                        <li\n                                          onClick={() =>\n                                            handledeletemainpopup(chat.id)\n                                          }\n                                        >\n                                          {t(\"Remove\")}\n                                        </li>\n                                        <li onClick={handleCloseDeletePopup}>\n                                          {t(\"Cancel\")}\n                                        </li>\n                                      </ul>\n                                    )}\n                                  </div>\n                                  <div className=\"d-flex align-items-start gap-1\">\n                                    <p className=\"message\">{chat.message}</p>\n                                    {selectall && (\n                                      <input\n                                        type=\"checkbox\"\n                                        checked={chooseallId.includes(chat.id)}\n                                        onChange={() =>\n                                          handlechooseAll(chat.id)\n                                        }\n                                      />\n                                    )}\n                                  </div>\n                                </div>\n\n                                <span>{formatTime(chat.date)}</span>\n                              </div>\n                            </div>\n                          )}\n                        </>\n                      ) : (\n                        // Left-aligned messages (received from other users)\n                        <>\n                          <div className=\"main_mess left_mess d-flex align-items-start gap-2 flex-column \">\n                            {/* Check if chat.file is valid and has files */}\n                            {Array.isArray(JSON.parse(chat.file)) &&\n                              JSON.parse(chat.file).length > 0 && (\n                                <>\n                                  {/* Show profile image only for the first file */}\n                                  {index === 0 && (\n                                    <Link\n                                      target=\"_blank\"\n                                      to={`/friend/${chat.user1_id}`}\n                                      className=\"d-block mess_profile le flex-shrink-0\"\n                                    >\n                                      <img\n                                        className=\"w-100 h-100 d\"\n                                        src={\n                                          chat.user1_makeImagePrivate === 1\n                                            ? require(\"../assets/images/thumb.jpg\")\n                                            : chat.user1_profile\n                                        }\n                                        alt=\"profile\"\n                                      />\n                                    </Link>\n                                  )}\n\n                                  {JSON.parse(chat.file).map((f, fileIndex) => {\n                                    const fileSrc = getFileSrc(f);\n\n                                    return (\n                                      <div\n                                        className=\"message d-block send_image\"\n                                        key={fileIndex}\n                                      >\n                                        {fileSrc ? (\n                                          <>\n                                            <div className=\"d-flex align-items-start gap-1 h-100\">\n                                              <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                <div className=\"d-flex align-items-start gap-1\">\n                                                  <img\n                                                    className=\"w-100 h-100 d\"\n                                                    src={fileSrc}\n                                                    alt={`file-${fileIndex}`}\n                                                    onClick={() =>\n                                                      setSelectedImage(fileSrc)\n                                                    }\n                                                    style={{\n                                                      cursor: \"pointer\",\n                                                    }}\n                                                  />\n                                                </div>\n                                                <span>\n                                                  {formatTime(chat.date)}\n                                                </span>\n                                              </div>\n                                            </div>\n                                          </>\n                                        ) : (\n                                          <>\n                                            <div className=\"d-flex align-items-start gap-1 h-100\">\n                                              <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                <div className=\"d-flex align-items-start gap-1\">\n                                                  <Link\n                                                    to={f}\n                                                    download\n                                                    target=\"_blank\"\n                                                    rel=\"noopener noreferrer\"\n                                                    className=\"h-100\"\n                                                  >\n                                                    <img\n                                                      src={require(\"../assets/images/images.png\")}\n                                                      alt=\"File\"\n                                                    />\n                                                  </Link>\n                                                </div>\n                                                <span>\n                                                  {formatTime(chat.date)}\n                                                </span>\n                                              </div>\n                                            </div>\n                                          </>\n                                        )}\n                                      </div>\n                                    );\n                                  })}\n                                </>\n                              )}\n                          </div>\n\n                          {chat.message && chat.message !== \"null\" && (\n                            <div className=\"main_mess left_mess d-flex align-items-center gap-2\">\n                              <Link\n                                target=\"_blank\"\n                                to={`/friend/${chat.user1_id}`}\n                                className=\"d-block mess_profile le  flex-shrink-0\"\n                              >\n                                <img\n                                  className=\"w-100 h-100 pr\"\n                                  src={\n                                    chat.user1_makeImagePrivate === 1\n                                      ? require(\"../assets/images/thumb.jpg\")\n                                      : chat.user1_profile\n                                  }\n                                  alt=\"profile\"\n                                />\n                              </Link>\n                              <div className=\" d-flex flex-column gap-1 justify-content-start align-items-start\">\n                                {/* <div className=\"d-flex align-items-start gap-0\">\n                                                                                                 <p className=\"message\">{chat.message}</p>\n                                                                                               </div> */}\n                                <div className=\"d-flex align-items-start gap-0\">\n                                  <div className=\"d-flex align-items-start gap-1\">\n                                    <p className=\"message\">{chat.message}</p>\n                                  </div>\n                                </div>\n\n                                <span>{formatTime(chat.date)}</span>\n                              </div>\n                            </div>\n                          )}\n                        </>\n                      )}\n                    </div>\n                  ))\n                )}\n              </div>\n              {filteredMessages.length > 4 && !arrow && (\n                <button\n                  className=\"newmessagearrow\"\n                  type=\"button\"\n                  onClick={hanldeseenmessageAll}\n                >\n                  <FaAngleDown />\n                  {Totalcountmessage > 0 && <span>{Totalcountmessage}</span>}\n                </button>\n              )}\n            </div>\n            {selectedImage && (\n              <div\n                className=\"p-5\"\n                style={{\n                  position: \"fixed\",\n                  top: 0,\n                  left: 0,\n                  width: \"100%\",\n                  height: \"100%\",\n                  backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n                  display: \"flex\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  zIndex: 989898,\n                }}\n                onClick={() => setSelectedImage(null)} // Close when clicked outside\n              >\n                <div className=\"rel d-block h-100\">\n                  <button type=\"button\" className=\"closebtnpic\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width={24}\n                      height={24}\n                      viewBox=\"0 0 24 24\"\n                      fill=\"none\"\n                      stroke=\"currentColor\"\n                      strokeWidth={2}\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      className=\"icon icon-tabler icons-tabler-outline icon-tabler-x\"\n                    >\n                      <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                      <path d=\"M18 6l-12 12\" />\n                      <path d=\"M6 6l12 12\" />\n                    </svg>\n                  </button>\n                  <MediaRenderer\n                    className=\"w-100 h-100 object-fit-cover\"\n                    url={selectedImage}\n                    style={{\n                      maxWidth: \"100%\",\n                      maxHeight: \"100%\",\n                      borderRadius: \"10px\",\n                      height: \"85vh\",\n                      objectFit: \"contain\",\n                    }}\n                  />\n                </div>\n              </div>\n            )}\n\n            <span className=\"text-danger\">{error}</span>\n            {restr_message && (\n              <span className=\"text-danger\">{t(\"Your_message_contain\")}</span>\n            )}\n            <form\n              onSubmit={(e) => {\n                e.preventDefault(); // Prevent page reload\n                if (message.trim() !== \"\" || Isfile.length > 0) {\n                  handleSend();\n                }\n              }}\n              className=\"message_type d-flex align-items-center gap-2\"\n            >\n              {/* File Upload */}\n              <div className=\"d-block image_img\">\n                <input type=\"file\" onChange={handleFileChange} multiple />\n                <img\n                  className=\"w-100 h-100\"\n                  src={require(\"../assets/images/serach2.png\")}\n                  alt=\"Upload\"\n                />\n              </div>\n\n              {/* Emoji Picker */}\n              <div className=\"emoji-container emchatbox\">\n                <button\n                  type=\"button\"\n                  className=\"emoji-button\"\n                  onClick={() => setShowPicker(!showPicker)}\n                >\n                  😀\n                </button>\n                {showPicker && <EmojiPicker onEmojiClick={handleEmojiClick} />}\n              </div>\n\n              {/* Message Input */}\n              <input\n                type=\"text\"\n                ref={inputRef}\n                value={message}\n                onChange={handleInputChange}\n                placeholder=\"Write a message...\"\n              />\n\n              {/* Send Button */}\n              <button\n                className=\"d-block image_img\"\n                type=\"submit\" // Change to \"submit\" so Enter key works\n                disabled={!message.trim() && Isfile.length === 0} // Prevent empty messages\n              >\n                <img\n                  className=\"w-50 h-50\"\n                  src={require(\"../assets/images/send.png\")}\n                  alt=\"Send\"\n                />\n              </button>\n\n              {/* Loading Spinner */}\n              {spinner && (\n                <div\n                  className=\"spinner-border text-success send_load\"\n                  role=\"status\"\n                >\n                  <span className=\"visually-hidden\">Loading...</span>\n                </div>\n              )}\n\n              {/* Display Selected Images */}\n              {Isfile.length > 0 && (\n                <div className=\"muti_images\">\n                  <div className=\"muti_main overflow-auto d-flex gap-2 mx-auto w-96\">\n                    {Isfile.map((file, index) => (\n                      <div key={index} className=\"d-block muti_image\">\n                        <img\n                          className=\"w-100 h-100\"\n                          src={URL.createObjectURL(file)}\n                          alt=\"Preview\"\n                        />\n                        <button\n                          className=\"delete_img\"\n                          onClick={() => removeImage(index)}\n                        >\n                          ×\n                        </button>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              )}\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\nexport default ChatBox;\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport GDPRPopup from \"./GDPRPopup\";\n\nexport const Footer = () => {\n  const { t } = useTranslation();\n  const [signedup, setsignedup] = useState(false);\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const currentYear = new Date().getFullYear();\n\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    if (userLogin !== null) {\n      setsignedup(true);\n    }\n  }, []);\n  return (\n    <>\n      <footer className=\"d-block\">\n        <div className=\"ftblocks py-5\">\n          <div className=\"container-lg\">\n            <div className=\"row gy-4\">\n              <div className=\"col-md-6\">\n                <div className=\"d-flex flex-column gap-3 ftlogoblock\">\n                  <h4>{t(\"WELCOMETOAMOURETTE\")}</h4>\n                  <div className=\"d-flex flex-column gap-1\">\n                    <h6>{t(\"Yourenow\")}</h6>\n                    <Link to=\"/helpsupport\" className=\"needsign\">\n                      <span\n                        dangerouslySetInnerHTML={{ __html: t(\"Needhelp\") }}\n                      />\n                    </Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-3\">\n                <div className=\"d-flex flex-column gap-3 ftblock ps-md-5\">\n                  <h3>{t(\"About\")}</h3>\n                  <div className=\"d-flex flex-column gap-2 ftlink\">\n                    <Link to=\"/setting\">{t(\"Membership\")}</Link>\n                    <Link to=\"/helpsupport\">{t(\"Help_and_support\")}</Link>\n                    <Link to=\"/setting\">{t(\"Contact_us\")}</Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-3\">\n                <div className=\"d-flex flex-column gap-3 ftblock ps-md-5\">\n                  <h3>{t(\"Resources\")}</h3>\n                  <div className=\"d-flex flex-column gap-2 ftlink\">\n                    <Link to=\"/securitypage\">{t(\"Security\")}</Link>\n                    <Link to=\"/setting\">{t(\"privacy\")}</Link>\n                    <Link to=\"/helpsupport\">{t(\"Terms_and_conditions\")}</Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-12\">\n                <div className=\"d-block ftlogoblock\">\n                  <p className=\"copyrighttext\">\n                    &copy; {t(\"Copyright_2024_all_rights_reserved\")}{\" \"}\n                    {currentYear}, {t(\"all_rights_reserved\")}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <GDPRPopup />\n          </div>\n        </div>\n      </footer>\n    </>\n  );\n};\n"],"names":["_ref","isOpen","onClose","children","userdetail","userChatDetail","LoginData","to_id","getChatAfterSave","refreshchat","chatEndRef","useRef","Totalcountmessage","setTotalcountmessage","useState","userblock","setuserblock","message","setMessage","errormessage","seterrormessage","chooseallId_left","setchooseallId_left","showPopError","setShowPopError","errorPopMessage","setPoperrorMessage","Isfile","setFiles","IdArray","setIdArray","istoid","settoid","forenter","setforenter","LoginDataUser","setLoginData","showPopSuccess","setShowPopSuccess","successPopMessage","setPopsuccessMessage","apiUrl","seenn","setSeen","arrow","setarrow","error","seterror","spinner","setspinner","restr_message","setrestr_message","t","useTranslation","selectedImage","setSelectedImage","searchText","setSearchText","filteredMessages","setFilteredMessages","messages","setMessages","inputRef","chatBoxRef","storedUsername","localStorage","getItem","isManualEnter","setIsManualEnter","JSON","parse","offset","setOffset","hasMore","setHasMore","loadingMore","setLoadingMore","useEffect","savedLanguage","i18n","language","changeLanguage","handleKeyDownn","e","key","document","addEventListener","removeEventListener","handleKeyDownr","event","window","showMenu","setShowMenu","handleCloseDeletePopup","setShowMenu_Left","toggleMenu","index","showPicker","setShowPicker","setTimeout","current","scrollIntoView","behavior","block","hanldeseenmessage","handleKeyDownnn","userLogin","id","Number","getmessageCount","console","log","async","formData","user_id","res","axios","post","headers","Accept","data","alldata","results","unreadCount","filter","item","read","length","err","response","request","ws","WebSocket","onmessage","receivedMessage","senderId","receiverId","loggedInUserId","includes","setMessageFormessage","setMessageForultiple","getSEndMessagequick","close","handleScroll","chatBox","isAtTop","scrollTop","isAtBottom","scrollHeight","clientHeight","oldScrollHeight","formdata","newOffset","newMessages","reversed","reverse","prevMessages","existingIds","Set","map","msg","has","prev","fetchMessages","newScrollHeight","status","chatsectionUser","idd","result","checkuserblock","trim","restrictedWords","convertToPng","file","Promise","resolve","reject","reader","FileReader","onload","img","Image","canvas","createElement","width","height","getContext","drawImage","toBlob","blob","pngFile","File","name","replace","type","lastModified","Date","getTime","Error","onerror","src","target","readAsDataURL","recid","recidArray","form","n","Array","isArray","formatTime","dateString","postDate","isNaN","adjustedPostDate","Intl","DateTimeFormat","timeZone","day","month","year","hour","minute","hour12","format","handledeletemainpopup","deleteev","chooseallId","setchooseallId","showdeletebutton","setshowdeletebutton","selectall","setselectall","handlechooseAll","getFileSrc","fileUrl","some","ext","endsWith","showMenu_Left","handle","_jsx","_Fragment","_jsxs","className","onClick","classList","contains","ErrorPop","SuccessPop","Link","to","profile_image","makeImagePrivate","alt","require","username","birthday_date","birthday","birthDate","today","age","getFullYear","monthDifference","getMonth","getDate","calculateAge","location","placeholder","onInput","searchValue","value","toLowerCase","filtered","chat","handlesearchmessage","other_id","handleallselect","ref","style","maxHeight","overflow","display","flexWrap","justifyContent","role","user1_id","user1_makeImagePrivate","user1_profile","f","fileIndex","fileSrc","position","HiDotsVertical","cursor","checked","onChange","date","download","rel","FaAngleDown","top","left","backgroundColor","alignItems","zIndex","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","MediaRenderer","url","maxWidth","borderRadius","objectFit","onSubmit","preventDefault","FormData","commentText","currentWordCount","text","split","append","forEach","handleSend","selectedFiles","from","files","validFiles","errorFiles","isImage","startsWith","isVideo","size","push","convertedFile","join","prevFiles","focus","KeyboardEvent","code","keyCode","bubbles","dispatchEvent","multiple","EmojiPicker","onEmojiClick","emojiObject","prevMessage","emoji","inputValue","hasRestrictedWord","word","disabled","URL","createObjectURL","_","i","removeImage","Footer","signedup","setsignedup","currentYear","dangerouslySetInnerHTML","__html","GDPRPopup"],"sourceRoot":""}