{"version":3,"file":"static/js/110.020a8c3f.chunk.js","mappings":"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","sources":["components/Styles/MainStyle.js","pages/User/Subscription.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\n// Styled component for the overlay\r\n\r\nexport const Wrapper = styled.div`\r\n  input,\r\n  textarea,\r\n  select,\r\n  a,\r\n  p,\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    margin: 0;\r\n    text-decoration: none;\r\n    outline: none;\r\n    word-break: break-word;\r\n    overflow-wrap: break-word;\r\n  }\r\n\r\n  input:focus,\r\n  textarea:focus,\r\n  select:focus {\r\n    outline: none;\r\n    box-shadow: none;\r\n    border-color: inherit;\r\n  }\r\n`;\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n`;\r\n\r\n// Styled component for the popup\r\nexport const Popup = styled.div`\r\n  background: #fff;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  width: 400px;\r\n  position: relative;\r\n`;\r\n\r\n// Styled component for the close button\r\nexport const CloseBtn = styled.button`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  background: #fff;\r\n  color: #000;\r\n  border: none;\r\n  font-size: 20px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const TitlePay = styled.h2`\r\n  font-size: 18px;\r\n  font-weight: 700;\r\n  color: var(--primary-color);\r\n  text-align: center;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 15px;\r\n`;\r\n\r\nexport const FormGroup = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 6px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 10px;\r\n  border: 1px solid #ccc;\r\n  border-radius: 6px;\r\n  font-size: 14px;\r\n  width: 100%;\r\n  color: #000;\r\n\r\n  &:focus {\r\n    border-color: var(--primary-color);\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nexport const Row = styled.div`\r\n  display: flex;\r\n  gap: 20px;\r\n`;\r\n\r\nexport const ButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-top: 15px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  padding: 10px 20px;\r\n  font-size: 14px;\r\n  border: none;\r\n  border-radius: 6px;\r\n  cursor: pointer;\r\n\r\n  &.cancel {\r\n    background-color: #ccc;\r\n    color: #333;\r\n  }\r\n\r\n  &.submit {\r\n    background-color: var(--primary-color);\r\n    color: white;\r\n  }\r\n`;\r\nexport const CardImageContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 200px; // Adjust width as needed\r\n  margin: 0 auto;\r\n`;\r\n\r\n// Styled component for the image\r\nexport const CardImage = styled.img`\r\n  width: 100%; // Makes the image responsive\r\n  height: auto; // Keeps the aspect ratio intact\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport MainHeader from \"../../components/Users/MainHeader\";\r\nimport Alertpopup from \"../../components/Alertpopup\";\r\nimport Alertpopupsuccess from \"../../components/Alertpopupsuccess\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  Overlay,\r\n  Popup,\r\n  CloseBtn,\r\n  styles,\r\n  CardImageContainer,\r\n  CardImage,\r\n  TitlePay,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  ButtonGroup,\r\n  Button,\r\n} from \"../../components/Styles/MainStyle.js\";\r\nimport {\r\n  SectionWrapper,\r\n  Wrapper,\r\n} from \"../../components/Styles/RegisterStyles\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport { momentLocalizer } from \"react-big-calendar\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport { format, toZonedTime } from \"date-fns-tz\";\r\nimport ModuleSideNav from \"../../components/Users/ModuleSideNav\";\r\nimport axios from \"axios\";\r\nexport default function Subscription() {\r\n  const localizer = momentLocalizer(moment);\r\n  const [plans, setplans] = useState([]);\r\n  const [selectedPeriod, setSelectedPeriod] = useState(\"monthly\"); // default monthly\r\n  const [showPopup, setShowPopup] = useState(false);\r\n  const [planId, setplanId] = useState(\"\");\r\n  const apiUrl = \"https://blueprintcatalyst.com/api/user/\";\r\n  const storedUsername = localStorage.getItem(\"UserLoginData\");\r\n  const userLogin = JSON.parse(storedUsername);\r\n  useEffect(() => {\r\n    getallSubscriptionPlan();\r\n  }, []);\r\n  const getallSubscriptionPlan = async () => {\r\n    let formData = {\r\n      user_id: \"\",\r\n    };\r\n    try {\r\n      const res = await axios.post(\r\n        apiUrl + \"getallSubscriptionPlan\",\r\n        formData,\r\n        {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n          },\r\n        }\r\n      );\r\n      var respo = res.data.results;\r\n      console.log(respo);\r\n      setplans(respo);\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n      if (err.response) {\r\n      } else if (err.request) {\r\n        console.error(\"Request data:\", err.request);\r\n      } else {\r\n        console.error(\"Error message:\", err.message);\r\n      }\r\n    }\r\n  };\r\n  const monthlyPlans = plans.filter((plan) => plan.period === \"monthly\");\r\n  const yearlyPlans = plans.filter((plan) => plan.period === \"yearly\");\r\n\r\n  //Payment\r\n  const handlechooseplan = (id) => {\r\n    setplanId(id);\r\n    setShowPopup(true);\r\n  };\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // handle form submission\r\n    console.log(e.target);\r\n    var vl = e.target;\r\n    let formData = {\r\n      name: vl.name.value,\r\n      email: vl.email.value,\r\n      cardnumber: vl.cardnumber.value,\r\n      expiry: vl.expiry.value,\r\n      cvv: vl.cvv.value,\r\n      user_id: userLogin.id,\r\n      plan_id: planId,\r\n    };\r\n    try {\r\n      const res = await axios.post(apiUrl + \"usersubscription\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n      var respo = res.data.results;\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n      if (err.response) {\r\n      } else if (err.request) {\r\n        console.error(\"Request data:\", err.request);\r\n      } else {\r\n        console.error(\"Error message:\", err.message);\r\n      }\r\n    }\r\n    setShowPopup(false);\r\n  };\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <div className=\"fullpage d-block\">\r\n          <MainHeader />\r\n\r\n          <SectionWrapper className=\"d-block py-5\">\r\n            <div className=\"container-lg\">\r\n              <div className=\"row justify-content-center\">\r\n                <div className=\"col-md-3\">\r\n                  <ModuleSideNav />\r\n                </div>\r\n                <div className=\"col-md-9\">\r\n                  <div\r\n                    className=\"d-flex justify-content-end mb-4 gap-2\"\r\n                    role=\"group\"\r\n                    aria-label=\"Billing period toggle\"\r\n                  >\r\n                    <button\r\n                      type=\"button\"\r\n                      className={`btn btn-outline-dark ${\r\n                        selectedPeriod === \"monthly\" ? \"active\" : \"\"\r\n                      }`}\r\n                      onClick={() => setSelectedPeriod(\"monthly\")}\r\n                    >\r\n                      Monthly\r\n                    </button>\r\n                    <button\r\n                      type=\"button\"\r\n                      className={`btn btn-outline-dark ${\r\n                        selectedPeriod === \"yearly\" ? \"active\" : \"\"\r\n                      }`}\r\n                      onClick={() => setSelectedPeriod(\"yearly\")}\r\n                    >\r\n                      Yearly\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"row g-4 justify-content-center\">\r\n                    {(selectedPeriod === \"monthly\"\r\n                      ? monthlyPlans\r\n                      : yearlyPlans\r\n                    ).map((plan) => (\r\n                      <div className=\"col-md-4\" key={plan.id}>\r\n                        <div className=\"card h-100 shadow\">\r\n                          <div className=\"card-header text-center subscriptionplan text-white\">\r\n                            <h4 className=\"mb-0\">{plan.name}</h4>\r\n                          </div>\r\n                          <div className=\"card-body text-center\">\r\n                            <h1 className=\"card-title fw-bold\">\r\n                              ${plan.price}\r\n                              <small className=\"text-muted fs-6\">\r\n                                /{selectedPeriod === \"monthly\" ? \"mo\" : \"year\"}\r\n                              </small>\r\n                            </h1>\r\n                            <ul className=\"list-unstyled mt-3 mb-4\">\r\n                              <li>\r\n                                ✔ {plan.module}{\" \"}\r\n                                {parseInt(plan.module) === 1\r\n                                  ? \"module\"\r\n                                  : \"modules\"}\r\n                              </li>\r\n                            </ul>\r\n\r\n                            <button\r\n                              className=\"btn subscriptionplan text-white w-100\"\r\n                              type=\"button\"\r\n                              onClick={() => handlechooseplan(plan.id)}\r\n                            >\r\n                              Choose {plan.name}\r\n                            </button>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </SectionWrapper>\r\n        </div>\r\n      </Wrapper>\r\n      {showPopup && (\r\n        <Overlay>\r\n          <Popup>\r\n            <CloseBtn onClick={() => setShowPopup(false)}>×</CloseBtn>\r\n            <TitlePay>Payment</TitlePay>\r\n            <CardImageContainer>\r\n              <CardImage src=\"/assets/user/images/cardimage.jpg\" alt=\"cards\" />\r\n            </CardImageContainer>\r\n            <Form onSubmit={handleSubmit}>\r\n              <FormGroup>\r\n                <Label>Name</Label>\r\n                <Input type=\"text\" name=\"name\" required placeholder=\"name\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label>Email</Label>\r\n                <Input type=\"email\" name=\"email\" required placeholder=\"email\" />\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Label>Card Number</Label>\r\n                <Input\r\n                  type=\"text\"\r\n                  name=\"cardnumber\"\r\n                  required\r\n                  placeholder=\"card number\"\r\n                  inputMode=\"numeric\"\r\n                  maxLength={19} // 16 digits + 3 spaces\r\n                  onInput={(e) => {\r\n                    let value = e.target.value.replace(/\\D/g, \"\"); // Remove non-digits\r\n                    value = value.substring(0, 16); // Max 16 digits\r\n                    value = value.replace(/(.{4})/g, \"$1 \").trim(); // Add space every 4 digits\r\n                    e.target.value = value;\r\n                  }}\r\n                />\r\n              </FormGroup>\r\n\r\n              <Row>\r\n                <FormGroup>\r\n                  <Label>Expiry Date</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"expiry\"\r\n                    required\r\n                    placeholder=\"MM/YYYY\"\r\n                    inputMode=\"numeric\"\r\n                    maxLength={7}\r\n                    pattern=\"(0[1-9]|1[0-2])\\/\\d{4}\" // MM/YYYY format\r\n                    onInput={(e) => {\r\n                      let value = e.target.value.replace(/\\D/g, \"\"); // remove non-digits\r\n                      if (value.length > 6) value = value.slice(0, 6);\r\n                      if (value.length >= 3) {\r\n                        value = value.slice(0, 2) + \"/\" + value.slice(2);\r\n                      }\r\n                      e.target.value = value;\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                  <Label>CVV</Label>\r\n                  <Input type=\"text\" name=\"cvv\" required placeholder=\"123\" />\r\n                </FormGroup>\r\n              </Row>\r\n              <ButtonGroup>\r\n                <Button\r\n                  type=\"button\"\r\n                  className=\"cancel\"\r\n                  onClick={() => setShowPopup(false)}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button type=\"submit\" className=\"submit\">\r\n                  Pay Now\r\n                </Button>\r\n              </ButtonGroup>\r\n            </Form>\r\n          </Popup>\r\n        </Overlay>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["Wrapper","styled","div","Overlay","Popup","CloseBtn","button","TitlePay","h2","Form","form","FormGroup","Label","label","Input","input","Row","ButtonGroup","Button","CardImageContainer","CardImage","img","Subscription","momentLocalizer","moment","plans","setplans","useState","selectedPeriod","setSelectedPeriod","showPopup","setShowPopup","planId","setplanId","apiUrl","storedUsername","localStorage","getItem","userLogin","JSON","parse","useEffect","getallSubscriptionPlan","async","formData","user_id","respo","axios","post","headers","Accept","data","results","console","log","err","response","request","error","message","monthlyPlans","filter","plan","period","yearlyPlans","_jsxs","_Fragment","children","_jsx","className","MainHeader","SectionWrapper","ModuleSideNav","role","type","onClick","map","name","price","module","parseInt","handlechooseplan","id","src","alt","onSubmit","e","preventDefault","target","vl","value","email","cardnumber","expiry","cvv","plan_id","required","placeholder","inputMode","maxLength","onInput","replace","substring","trim","pattern","length","slice"],"sourceRoot":""}