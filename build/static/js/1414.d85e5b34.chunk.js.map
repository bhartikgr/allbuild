{"version":3,"file":"static/js/1414.d85e5b34.chunk.js","mappings":"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","sources":["components/Report.jsx","pages/ReceivedMessagesChat.jsx","../node_modules/@tabler/icons-react/src/defaultAttributes.ts","../node_modules/@tabler/icons-react/src/createReactComponent.ts","../node_modules/@tabler/icons-react/src/icons/IconHome.ts"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport ErrorPop from \"../components/ErrorPop\";\nexport const Report = ({ isOpen, onClose, children, uid }) => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [spinner, setspinner] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [showPopError, setShowPopError] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [category, setCategory] = useState(\"\"); // State for category\n  const [otherReport, setOtherReport] = useState(\"\"); // State for the 'Other' report text\n\n  var apiUrl = \"https://backend.amourette.no/api/profile/\";\n  if (!isOpen) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose(); // Close the popup if the overlay is clicked\n    }\n  };\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value);\n  };\n\n  // Handle the 'Other' input change\n  const handleOtherReportChange = (e) => {\n    setOtherReport(e.target.value);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const reportData = category === \"other\" ? otherReport : category; // Use the 'Other' text if selected\n    // Submit the report logic goes here\n    console.log(\"Report Category:\", reportData);\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      to_id: uid,\n      otherReport: otherReport,\n      reportData: reportData,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"userreport\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      console.log(\"block\");\n      console.log(res.data.result.length);\n      //onClose();\n      setShowPopSuccess(true);\n      setPopsuccessMessage(res.data.message);\n      setTimeout(() => {\n        setShowPopSuccess(false);\n        setPopsuccessMessage(\"\");\n        onClose();\n      }, 3000);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        {showPopError && <ErrorPop message={errorPopMessage} />}\n        <div className=\"popup-content col-md-4\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"cneventup  d-flex flex-column gap-4\">\n            <h3>Report</h3>\n            <form action=\"javascript:void(0)\" onSubmit={handleSubmit}>\n              <div className=\"row gy-4\">\n                <div className=\"col-12 \">\n                  <label for=\"\" className=\"mb-2\">\n                    Why are you reporting this?\n                  </label>\n                  <select\n                    name=\"category\"\n                    id=\"\"\n                    required\n                    value={category}\n                    onChange={handleCategoryChange}\n                  >\n                    <option value=\"\">--Select--</option>\n                    <option value=\"Spam\">Spam</option>\n                    <option value=\"Harassment\">Harassment</option>\n                    <option value=\"Offensive Content\">Offensive Content</option>\n                    <option value=\"Fake Account\">Fake Account</option>\n                    <option value=\"Impersonation\">Impersonation</option>\n                    <option value=\"Hate Speech\">Hate Speech</option>\n                    <option value=\"Violence or Threats\">\n                      Violence or Threats\n                    </option>\n                    <option value=\"Adult Content\">Adult Content</option>\n                    <option value=\"Fraudulent Activity\">\n                      Fraudulent Activity\n                    </option>\n                    <option value=\"Scam\">Scam</option>\n                    <option value=\"Inappropriate Username\">\n                      Inappropriate Username\n                    </option>\n                    <option value=\"Privacy Violation\">Privacy Violation</option>\n                    <option value=\"Bullying\">Bullying</option>\n                    <option value=\"other\">Other</option>\n                  </select>\n                </div>\n                {category === \"other\" && (\n                  <div className=\"col-12\">\n                    <label htmlFor=\"otherReport\" className=\"mb-2\">\n                      Please specify your report:\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"otherReport\"\n                      name=\"otherReport\"\n                      value={otherReport}\n                      onChange={handleOtherReportChange}\n                      placeholder=\"Enter details about your report\"\n                    />\n                  </div>\n                )}\n\n                <div className=\"col-12\">\n                  <button type=\"submit\">Submit</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport ev1 from \"../assets/images/in1.png\";\nimport ev2 from \"../assets/images/in2.png\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport Headertwo from \"../components/Headertwo\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport axios from \"axios\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { HiDotsVertical } from \"react-icons/hi\";\nimport { RiHome6Line } from \"react-icons/ri\";\nimport { IconHome } from \"@tabler/icons-react\";\nimport { Report } from \"../components/Report\";\nimport { FaAngleDown } from \"react-icons/fa6\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nfunction ReceivedMessagesChat() {\n  const navigate = useNavigate(); // Correctly define the navigate function\n  const [seenn, setSeen] = useState(false); // Track if the function has been called\n  const [arrow, setarrow] = useState(false); // Track if the function has been called\n  const [showMenu, setShowMenu] = useState(false);\n  const [isonlyallbumPublic, setisonlyallbumPublic] = useState([]);\n  const toggleMenu = (index) => {\n    setShowMenu(showMenu === index ? null : index);\n    setShowMenu_Left(false);\n  };\n  const [refreshNotifications, setRefreshNotifications] = useState(true);\n  const inputRef = useRef(null);\n  const [Totalcountmessage, setTotalcountmessage] = useState(\"\");\n  const [ImagesFriends, setImagesFriends] = useState([]);\n  const [VideosFriends, setVideosFriends] = useState([]);\n  const [ImagesFriendsOwn, setImagesFriendsOwn] = useState([]);\n  const [VideosFriendsOwn, setVideosFriendsOwn] = useState([]);\n  const [PasswordId, setPasswordId] = useState(\"\");\n  const [redirectid, setredirectid] = useState(\"\");\n  const [Openpassword, setOpenpassword] = useState(false);\n  const [chooseallId_left, setchooseallId_left] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const chatEndRef = useRef(null); // Ref to the chat container\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [userblock, setuserblock] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [AllFriends, setAllFriends] = useState([]);\n  const apiUrl = \"https://backend.amourette.no/api/members/\";\n  const apiUrlProfile = \"https://backend.amourette.no/api/profile/\";\n  const [message, setMessage] = useState(\"\");\n  const [userdetail, setuserdetail] = useState(\"\");\n  const [messages, setmessages] = useState([]);\n  const [allmessages, setmessagesall] = useState([]);\n  const [LoginData, setLoginData] = useState(null);\n  const [error, seterror] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const [Isfile, setFiles] = useState([]);\n  const [to_id, setto_id] = useState(\"\");\n  const { slug } = useParams();\n  const [showPopError, setShowPopError] = useState(false);\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [isCheckfriend, setCheckfriend] = useState(\"\");\n  const [restr_message, setrestr_message] = useState(false);\n  const [albumdata, setalbumdata] = useState([]);\n  const [userper, setuserper] = useState(false);\n  const [isonlyallbum, setisonlyallbum] = useState([]);\n  const [isonlyallbumfriend, setisonlyallbumfriend] = useState([]);\n  const [UserDetail, setUserDetail] = useState(\"\");\n  const [IdArray, setIdArray] = useState([]);\n  // State to track the active button\n  const [activeIndex, setActiveIndex] = useState(0); // Default to the first button\n  const [searchText, setSearchText] = useState(\"\"); // Search query\n  const [filteredMessages, setFilteredMessages] = useState([]);\n\n  const [offset, setOffset] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n\n  const handleButtonClick = (index) => {\n    setActiveIndex(index); // Set the clicked button as active\n  };\n  const chatBoxRef = useRef(null);\n  useEffect(() => {\n    console.log(messages);\n    setFilteredMessages(messages);\n  }, [messages]);\n  const readmessageuser = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    if (to_id !== \"\") {\n      let formData = {\n        to_id: to_id,\n        user_id: userLogin.id,\n      };\n\n      try {\n        const res = await axios.post(apiUrl + \"readmessageuser\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Correct content type for file uploads\n          },\n        });\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n          console.error(\"Response error:\", err.response);\n        } else if (err.request) {\n          console.error(\"Request error:\", err.request);\n        } else {\n          console.error(\"General error:\", err.message);\n        }\n      }\n    }\n  };\n  const isScrolledToBottom = (element) => {\n    return element.scrollHeight - element.scrollTop === element.clientHeight;\n  };\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  // const handleKeyDown = (e) => {\n  //   // Prevent sending automatically when a file is added\n  //   if (e.key === \"Enter\" && !e.shiftKey) {\n  //     if (message.trim() !== \"\" || Isfile.length > 0) {\n  //       e.preventDefault();\n\n  //       // Ensure Enter key is manually pressed, not triggered by state update\n  //       if (document.activeElement === inputRef.current) {\n  //         handleSend();\n  //       }\n  //     }\n  //   }\n  // };\n\n  useEffect(() => {\n    if (slug !== undefined) {\n      const getUserDetails = async (slug) => {\n        const storedUsername = localStorage.getItem(\"userLogin\");\n        const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n        let formData = { slug: slug, user_id: userLogin.id };\n        try {\n          const res = await axios.post(\n            apiUrlProfile + \"getUserSlug\",\n            formData,\n            {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n            }\n          );\n\n          if (res.data.row.length > 0) {\n            var respo = res.data.row[0];\n\n            setto_id(respo.id);\n            getUsercheckPermisson(respo.id);\n            getCheckfriend(respo.id);\n            chatsectionUser(respo.id);\n            checkuserblock(respo.id);\n            //getAllfriends();\n            setTimeout(() => {\n              if (chatEndRef.current) {\n                chatEndRef.current.scrollIntoView({\n                  behavior: \"smooth\",\n                  block: \"nearest\",\n                });\n                hanldeseenmessage();\n              }\n            }, 800);\n          } else {\n            // navigate(\"/receivedmessages\");\n          }\n        } catch (err) {\n          // Enhanced error handling\n          if (err.response) {\n            console.error(\"Error response:\", err.response);\n          } else if (err.request) {\n            console.error(\"Request data:\", err.request);\n          } else {\n            console.error(\"Error message:\", err.message);\n          }\n        }\n      };\n      getUserDetails(slug);\n    }\n  }, [slug, LoginData]);\n  useEffect(() => {\n    if (to_id !== \"\") {\n      getmessageCount();\n    }\n  }, [to_id]);\n  const getmessageCount = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      to_id: to_id,\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getmessageCount\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Correct content type for file uploads\n        },\n      });\n\n      var alldata = res.data.results;\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n      const unreadCount = alldata.filter((item) => item.read === \"No\").length;\n\n      setTotalcountmessage(unreadCount);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request error:\", err.request);\n      } else {\n        console.error(\"General error:\", err.message);\n      }\n    }\n  };\n  const fetchMessages = async (newOffset) => {\n    setLoadingMore(true);\n\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    let formdata = {\n      user_id: userLogin.id,\n      to_id: to_id,\n      offset: newOffset,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getuserChatmessage\", formdata, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      const newMessages = res.data.results;\n\n      if (newMessages.length === 0) {\n        setHasMore(false);\n      } else {\n        setmessages((prevMessages) => {\n          const existingIds = new Set(prevMessages.map((msg) => msg.id)); // or msg.message_id\n          const filteredNewMessages = newMessages.filter(\n            (msg) => !existingIds.has(msg.id) // or msg.message_id\n          );\n          return [...prevMessages, ...filteredNewMessages];\n        });\n\n        setmessagesall(newMessages);\n        setOffset((prev) => prev + newMessages.length);\n      }\n    } catch (error) {\n      console.error(\"Error fetching messages\", error);\n    }\n\n    setLoadingMore(false);\n  };\n\n  const handleScroll = async () => {\n    const chatBox = chatBoxRef.current;\n\n    const isAtBottom =\n      chatBox.scrollHeight - chatBox.scrollTop <= chatBox.clientHeight + 10;\n    // if (chatBoxRef.current && isScrolledToBottom(chatBoxRef.current)) {\n\n    // }\n    const isAtTop = chatBox.scrollTop <= 7;\n    if (isAtTop && hasMore && !loadingMore) {\n      const oldScrollHeight = chatBox.scrollHeight; // ✅ here\n\n      await fetchMessages(offset); // fetch next 10 (older) messages\n\n      // Maintain scroll position after loading more messages\n      setTimeout(() => {\n        //const newScrollHeight = chatBox.scrollHeight;\n        //chatBox.scrollTop = newScrollHeight - oldScrollHeight; // ✅ now it's in scope\n      }, 1000);\n    }\n    setarrow(isAtBottom);\n    if (isAtBottom) {\n      setarrow(true);\n      hanldeseenmessage();\n      // const storedUsername = localStorage.getItem(\"userLogin\");\n      // const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n      // if (to_id !== \"\") {\n      //   let formData = {\n      //     user_id: userLogin.id,\n      //     to_id: to_id,\n      //   };\n\n      //   try {\n      //     const res = await axios.post(apiUrl + \"messageseen\", formData, {\n      //       headers: {\n      //         Accept: \"application/json\",\n      //         \"Content-Type\": \"application/json\",\n      //       },\n      //     });\n\n      //     if (res.data.status === \"1\") {\n      //       chatsectionUser(to_id);\n      //     }\n      //     getmessageCount();\n      //   } catch (err) {\n      //     // Enhanced error handling\n      //     if (err.response) {\n      //       console.error(\"Error response:\", err.response);\n      //     } else if (err.request) {\n      //       console.error(\"Request data:\", err.request);\n      //     } else {\n      //       console.error(\"Error message:\", err.message);\n      //     }\n      //   }\n      // }\n    } else {\n    }\n  };\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        setSelectedImage(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [setSelectedImage]);\n\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    var st = userLogin.id;\n    if (userLogin && to_id) {\n      // Ensure `to_id` is not empty before updating\n      setIdArray([userLogin.id, to_id]);\n    }\n  }, [to_id]);\n  const updateReadMessagesread = async () => {};\n  const updateReadMessages = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    const lastMessage = allmessages[allmessages.length - 1];\n\n    if (lastMessage !== undefined && lastMessage !== null) {\n      let formData = {\n        user_id: userLogin.id,\n\n        to_id: to_id,\n      };\n      try {\n        const res = await axios.post(apiUrl + \"messageseen\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (res.data.status === \"1\") {\n          chatsectionUser(to_id);\n        }\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n          console.error(\"Error response:\", err.response);\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    updateReadMessagesread();\n  }, [messages]);\n  // useEffect(() => {\n  //   const chatBox = chatBoxRef.current;\n  //   if (!chatBox) return;\n\n  //   chatBox.addEventListener(\"scroll\", handleScroll);\n\n  //   return () => {\n  //     chatBox.removeEventListener(\"scroll\", handleScroll);\n  //   };\n  // }, [arrow]);\n\n  useEffect(() => {\n    const chatBox = chatBoxRef.current;\n    if (!chatBox) return;\n\n    chatBox.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      chatBox.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [arrow, offset, hasMore, loadingMore]);\n\n  // Scroll to the bottom when new messages arrive\n\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    setLoginData(userLogin);\n  }, []); // Remove LoginData from the dependency array to prevent unnecessary calls\n\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\"); // Adjust port if needed\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        if (!receivedMessage) {\n          console.error(\"Received invalid JSON:\", event.data);\n          return;\n        }\n        const senderId = Number(receivedMessage.user_id); // Sender's ID (e.g. 5)\n        const receiverId = Number(receivedMessage.to_id); // Receiver's ID (e.g. 1)\n        const loggedInUserId = Number(LoginData.id); // Currently logged-in user's ID (e.g. 1 or 5)\n\n        var ttt = Number(to_id);\n\n        if (\n          receivedMessage.event === \"DeleteChatMessage\" ||\n          receivedMessage.event === \"DeleteChatMessage_other\"\n        ) {\n          if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n            setMessageFormessage(receivedMessage.id);\n            chatsectionUserRefresh();\n            setRefreshNotifications(true);\n          }\n        }\n        if (receivedMessage.event === \"DeleteChatMessageMultiple\") {\n          if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n            setMessageForultiple(receivedMessage.id);\n            chatsectionUserRefresh();\n            setRefreshNotifications(true);\n          }\n        }\n        if (\n          receivedMessage.event !== \"DeleteChatMessageMultiple\" &&\n          receivedMessage.event !== \"DeleteChatMessage\"\n        ) {\n          if (receivedMessage.event === \"MessageseenScroll\") {\n            if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n              //setto_id(receiverId);\n              getSEndMessagequick(receivedMessage, senderId, receiverId);\n              setRefreshNotifications(true);\n            }\n          }\n          // Ensure message is only seen by the sender or receiver\n          if (receivedMessage.event === \"ChatMessage\") {\n            if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n              // setto_id(receiverId);\n              getSEndMessagequick(receivedMessage, senderId, receiverId);\n              setRefreshNotifications(true);\n              //hanldeseenmessagenotscroll();\n              // If the logged-in user is the sender, auto-scroll\n\n              if (loggedInUserId === senderId) {\n                setTimeout(() => {\n                  chatEndRef.current.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"nearest\",\n                  });\n                }, 350);\n              } else {\n              }\n            }\n            // if (loggedInUserId === senderId || loggedInUserId === receiverId) {\n            //   getSEndMessage(receivedMessage, senderId, receiverId);\n            //   setRefreshNotifications(true);\n            //   // If the logged-in user is the sender, auto-scroll\n\n            //   if (loggedInUserId === receiverId) {\n            //     //updateReadMessages();\n            //   }\n            //   if (loggedInUserId === senderId) {\n            //     setTimeout(() => {\n            //       chatEndRef.current.scrollIntoView({\n            //         behavior: \"smooth\",\n            //         block: \"nearest\",\n            //       });\n            //     }, 350);\n            //   } else {\n            //     console.log(\"This is a receiver's message:\", receivedMessage);\n            //   }\n            // } else {\n            //   // Ignore the message for any other users\n            //   console.log(\"Message ignored for this user:\", loggedInUserId);\n            // }\n          }\n        }\n      } catch (error) {\n        console.error(\"Failed to parse WebSocket message:\", error);\n        console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [LoginData, to_id, IdArray]);\n  const getSEndMessagequick = async (form, n, t) => {\n    let formData = {\n      data: form,\n      user_id: n,\n      to_id: t,\n    };\n    console.log(formData, \"que\");\n    try {\n      const res = await axios.post(apiUrl + \"getSEndMessagequick\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Correct content type for file uploads\n        },\n      });\n\n      var alldata = res.data.results;\n      console.log(alldata, \"check\");\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      if (t === userLogin.id) {\n        if (alldata.length > 0) {\n          const unreadCount = alldata.filter(\n            (item) => item.read === \"No\"\n          ).length;\n          console.log(unreadCount);\n          getmessageCount();\n          //setTotalcountmessage(unreadCount);\n        }\n      }\n      // Assuming res.data.results is the array of messages you want to append\n      if (res.data && Array.isArray(res.data.results)) {\n        // Update the messages state with new messages appended\n\n        setmessages((prevMessages) => [...prevMessages, ...res.data.results]);\n        setmessagesall(res.data.results);\n      } else {\n        console.error(\"No valid results found in the response:\", res.data);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request error:\", err.request);\n      } else {\n        console.error(\"General error:\", err.message);\n      }\n    }\n  };\n  const getSEndMessage = async (form, n, t) => {\n    let formData = {\n      data: form,\n      user_id: n,\n      to_id: t,\n    };\n\n    console.log(formData, \"que\");\n    try {\n      const res = await axios.post(apiUrl + \"getSEndMessage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Correct content type for file uploads\n        },\n      });\n\n      var alldata = res.data.results;\n      console.log(alldata, \"check\");\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      if (t === userLogin.id) {\n        if (alldata.length > 0) {\n          const unreadCount = alldata.filter(\n            (item) => item.read === \"No\"\n          ).length;\n\n          getmessageCount();\n        }\n      }\n\n      if (res.data && Array.isArray(res.data.results)) {\n        setTimeout(() => {\n          setmessages((prevMessages) => [...prevMessages, ...res.data.results]);\n          setmessagesall(res.data.results);\n        }, 200);\n      } else {\n        console.error(\"No valid results found in the response:\", res.data);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request error:\", err.request);\n      } else {\n        console.error(\"General error:\", err.message);\n      }\n    }\n  };\n\n  const getUsercheckPermisson = async (toid) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = { slug: slug, user_id: userLogin.id, to_id: toid };\n    console.log(\"kl\", formData);\n    try {\n      const res = await axios.post(\n        apiUrlProfile + \"getUsercheckPermisson\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      console.log(\"kl\", res.data.row);\n      if (res.data.row !== undefined) {\n        var respo = res.data.row[0];\n        setuserdetail(respo);\n      } else {\n        // navigate(\"/receivedmessages\");\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const checkuserblock = async (toidd) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      to_id: toidd,\n    };\n    console.log(formData, \"checkblock\");\n    try {\n      const res = await axios.post(apiUrl + \"checkuserblock\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Correct content type for file uploads\n        },\n      });\n\n      console.log(res.data);\n      if (res.data.result.length > 0) {\n        setuserblock(true);\n      } else {\n        setuserblock(false);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request error:\", err.request);\n      } else {\n        console.error(\"General error:\", err.message);\n      }\n    }\n  };\n  const chatsectionUser = async (id) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    // Ensure LoginData is not null\n    if (!userLogin || !userLogin.id) {\n      console.error(\"Login data is not available\");\n      return; // Exit the function if LoginData is null\n    }\n\n    let formData = {\n      user_id: userLogin.id,\n      to_id: id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getuserChatmessage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n\n      setmessages(respo);\n      setmessagesall(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const chatsectionUserRefresh = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    // Ensure LoginData is not null\n    if (!userLogin || !userLogin.id) {\n      console.error(\"Login data is not available\");\n      return; // Exit the function if LoginData is null\n    }\n\n    let formData = {\n      user_id: userLogin.id,\n      to_id: to_id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getuserChatmessage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n\n      setmessages(respo);\n      setmessagesall(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const setMessageFormessage = (recid) => {\n    setFilteredMessages((prevMessages) =>\n      prevMessages.filter((msg) => msg.id !== recid)\n    );\n  };\n  const setMessageForultiple = (recidArray) => {\n    setFilteredMessages(\n      (prevMessages) =>\n        prevMessages.filter((msg) => !recidArray.includes(msg.id)) // Remove all matching IDs\n    );\n  };\n  const calculateAge = (birthday) => {\n    const birthDate = new Date(birthday);\n    const today = new Date();\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDifference = today.getMonth() - birthDate.getMonth();\n\n    // Adjust age if the birthday hasn't occurred yet this year\n    if (\n      monthDifference < 0 ||\n      (monthDifference === 0 && today.getDate() < birthDate.getDate())\n    ) {\n      age--;\n    }\n\n    return age;\n  };\n  const MAX_FILE_SIZE_MB = 25;\n  const getFileSrc = (fileUrl) => {\n    const allowedExtensions = [\".png\", \".jpg\", \".jpeg\", \".gif\"];\n    return allowedExtensions.some((ext) => fileUrl.endsWith(ext))\n      ? fileUrl\n      : null; // Return null if not an image\n  };\n  const handleFileChange = (e) => {\n    const selectedFiles = Array.from(e.target.files);\n    const validFiles = [];\n    const errorFiles = [];\n\n    selectedFiles.forEach((file) => {\n      if (file.size / 1024 / 1024 <= MAX_FILE_SIZE_MB) {\n        validFiles.push(file);\n      } else {\n        errorFiles.push(file);\n      }\n    });\n\n    if (errorFiles.length > 0) {\n      seterror(\n        `Some files are larger than ${MAX_FILE_SIZE_MB} MB and were not added.`\n      );\n    } else {\n      seterror(\"\");\n    }\n\n    setFiles((prevFiles) => [...prevFiles, ...validFiles]);\n\n    if (inputRef.current) {\n      inputRef.current.focus(); // Focus back to input field\n\n      // Manually trigger Enter key event\n      const event = new KeyboardEvent(\"keydown\", {\n        key: \"Enter\",\n        code: \"Enter\",\n        keyCode: 13,\n        bubbles: true,\n      });\n      inputRef.current.dispatchEvent(event);\n    }\n  };\n\n  const isButtonDisabled =\n    (!message.trim() && Isfile.length === 0) || restr_message; // Enable button if either input is filled\n  const handleInputChange = (e) => {\n    const inputValue = e.target.value;\n    setMessage(inputValue);\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    if (hasRestrictedWord) {\n      setrestr_message(true);\n    } else {\n      setrestr_message(false);\n    }\n  };\n  const removeImage = (index) => {\n    setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index)); // Remove image by index\n  };\n  const MAX_WORDS = 2000;\n  const countWords = (text) => {\n    return text.trim() ? text.split(/\\s+/).length : 0; // Count words by splitting on whitespace\n  };\n  const handleSend = async () => {\n    setShowMenu(false);\n    if (userblock === true) {\n      setShowPopError(true);\n      setPoperrorMessage(\"User is blocked\");\n      setTimeout(() => {\n        setShowPopError(false);\n        setPoperrorMessage(\"\");\n      }, 1500);\n    } else {\n      setarrow(true);\n      const formData = new FormData();\n      setspinner(true);\n      var commentText = message?.trim();\n      console.log(commentText);\n\n      if (commentText !== \"\") {\n        const currentWordCount = countWords(commentText);\n        if (currentWordCount < 2000) {\n          formData.append(\"message\", message);\n          formData.append(\"fileType\", \"chats\");\n          formData.append(\"user_id\", LoginData.id);\n          formData.append(\"to_id\", to_id);\n          Isfile.forEach((file) => {\n            formData.append(\"files\", file); // Use the key 'files' for your backend to handle multiple files\n          });\n\n          console.log(\"Message:\", message);\n          console.log(\"Files:\", Isfile);\n\n          try {\n            const res = await axios.post(apiUrl + \"saveUserChat\", formData, {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"multipart/form-data\", // Correct content type for file uploads\n              },\n            });\n\n            setspinner(false);\n            var respo = res.data;\n            //setMessages((prevMessages) => [...prevMessages, res.data]); // Update messages state\n\n            // Scroll to the bottom of the chat\n            if (chatEndRef.current) {\n              chatEndRef.current.scrollIntoView({\n                behavior: \"smooth\",\n                block: \"nearest\",\n              });\n            }\n            //await getChatAfterSave();\n            setTimeout(() => {\n              if (chatEndRef.current) {\n                chatEndRef.current.scrollIntoView({\n                  behavior: \"smooth\",\n                  block: \"nearest\",\n                });\n              }\n              setTimeout(() => {\n                setarrow(true);\n              }, 50);\n            }, 500);\n          } catch (err) {\n            // Enhanced error handling\n            if (err.response) {\n              console.error(\"Response error:\", err.response);\n            } else if (err.request) {\n              console.error(\"Request error:\", err.request);\n            } else {\n              console.error(\"General error:\", err.message);\n            }\n          }\n\n          // Reset message and files after sending\n          setMessage(\"\");\n          setFiles([]);\n        } else {\n          setspinner(false);\n          setShowPopError(true);\n          setPoperrorMessage(\n            `Comment cannot exceed ${MAX_WORDS} words. Currently: ${currentWordCount} words.`\n          );\n          setTimeout(() => {\n            setShowPopError(false);\n            setPoperrorMessage(\"\");\n          }, 1500);\n        }\n      } else {\n        formData.append(\"message\", message);\n        formData.append(\"fileType\", \"chats\");\n        formData.append(\"user_id\", LoginData.id);\n        formData.append(\"to_id\", to_id);\n        Isfile.forEach((file) => {\n          formData.append(\"files\", file); // Use the key 'files' for your backend to handle multiple files\n        });\n\n        console.log(\"Message:\", message);\n        console.log(\"Files:\", Isfile);\n\n        try {\n          const res = await axios.post(apiUrl + \"saveUserChat\", formData, {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"multipart/form-data\", // Correct content type for file uploads\n            },\n          });\n          setspinner(false);\n          var respo = res.data;\n          //setMessages((prevMessages) => [...prevMessages, res.data]); // Update messages state\n\n          // Scroll to the bottom of the chat\n          if (chatEndRef.current) {\n            chatEndRef.current.scrollIntoView({\n              behavior: \"smooth\",\n              block: \"nearest\",\n            });\n          }\n          //await getChatAfterSave();\n          setTimeout(() => {\n            if (chatEndRef.current) {\n              chatEndRef.current.scrollIntoView({\n                behavior: \"smooth\",\n                block: \"nearest\",\n              });\n            }\n          }, 500);\n        } catch (err) {\n          // Enhanced error handling\n          if (err.response) {\n            console.error(\"Response error:\", err.response);\n          } else if (err.request) {\n            console.error(\"Request error:\", err.request);\n          } else {\n            console.error(\"General error:\", err.message);\n          }\n        }\n\n        // Reset message and files after sending\n        setMessage(\"\");\n        setFiles([]);\n      }\n    }\n  };\n  const getCheckfriend = async (id) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      id: id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getCheck_friendUser\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      if (res.data.results.length > 0) {\n        setCheckfriend(true);\n      } else {\n        setCheckfriend(false);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const requestToview = async (albumid) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    if (userblock === true) {\n      setShowPopError(true);\n      setPoperrorMessage(\"User is blocked\");\n      setTimeout(() => {\n        setShowPopError(false);\n        setPoperrorMessage(\"\");\n      }, 1500);\n    } else {\n      let formDataa = {\n        user_id: userLogin.id,\n        to_id: to_id,\n      };\n      console.log(formDataa);\n      try {\n        const res = await axios.post(apiUrl + \"getcheckfriendss\", formDataa, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        var respoo = res.data.is_friend;\n        console.log(respoo);\n        if (respoo === true) {\n          let formData = {\n            user_id: userLogin.id,\n            to_id: to_id,\n            albumid: albumid,\n          };\n          // console.log(formData);\n\n          try {\n            const res = await axios.post(apiUrl + \"requestToview\", formData, {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\", // Correct content type for file uploads\n              },\n            });\n\n            var respo = res.data;\n            if (respo.status === \"2\") {\n              setShowPopSuccess(true);\n              setPopsuccessMessage(\"Request allready sent\");\n            }\n            if (respo.status === \"3\") {\n              // setShowPopSuccess(true);\n              //setPopsuccessMessage(\"Request confirmed.\");\n            }\n            if (respo.status === \"1\") {\n              setShowPopSuccess(true);\n              setPopsuccessMessage(\"Request successfully sent\");\n            }\n            //getUserDetails(slug);\n            //  console.log(respo);\n            setTimeout(() => {\n              setShowPopSuccess(false);\n              setPopsuccessMessage(\"\");\n            }, 1000);\n          } catch (err) {\n            // Enhanced error handling\n            if (err.response) {\n              console.error(\"Response error:\", err.response);\n            } else if (err.request) {\n              console.error(\"Request error:\", err.request);\n            } else {\n              console.error(\"General error:\", err.message);\n            }\n          }\n        } else {\n          setShowPopError(true);\n          setPoperrorMessage(\n            \"You cannot make this request because you are not friend.\"\n          );\n          setTimeout(() => {\n            setShowPopError(false);\n            setPoperrorMessage(\"\");\n          }, 1500);\n        }\n        // console.log(\"cjecl\");\n        // console.log(respo);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          // console.error(\"Request data:\", err.request);\n        } else {\n          //console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n\n  const [isPopupOpen1, setIsPopupOpen1] = useState(false);\n\n  const openPopup1 = () => {\n    setIsPopupOpen1(true);\n    // Disable body scroll when popup is open\n    document.body.style.overflowY = \"hidden\";\n  };\n\n  const closePopup1 = () => {\n    setIsPopupOpen1(false);\n    // Re-enable body scroll when popup is closed\n    document.body.style.overflowY = \"auto\";\n  };\n  const handlereport = async () => {\n    setIsPopupOpen1(true);\n    console.log(\"d\");\n  };\n  const lastMessage = messages[messages.length - 1];\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n\n    console.log(t(\"LeftMenu_yourprofile\")); // Testing translation\n  }, [i18n, t]);\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  var apiUrll = \"https://backend.amourette.no/api/members/\";\n  useEffect(() => {\n    const get_albumStatusonly = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      if (to_id !== \"\") {\n        let formData = {\n          user_id: to_id,\n        };\n\n        try {\n          const res = await axios.post(\n            apiUrll + \"getalbumStatusonly\",\n            formData,\n            {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n              },\n            }\n          );\n          console.log(res.data, \"getalbumStatusonly\");\n          //setisonlyallbum(res.data.results);\n        } catch (err) {\n          // Enhanced error handling\n          if (err.response) {\n          } else if (err.request) {\n            //console.error(\"Request data:\", err.request);\n          } else {\n            //console.error(\"Error message:\", err.message);\n          }\n        }\n      }\n    };\n    get_albumStatusonly();\n  }, [to_id]);\n  useEffect(() => {\n    const getUserDetailsfetch = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        to_id: to_id,\n        user_id: userLogin.id,\n        id: to_id,\n      };\n      //console.log(formData);\n      try {\n        const res = await axios.post(\n          apiUrl + \"getUserDetailMemberOther\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n            },\n          }\n        );\n\n        setisonlyallbum(res.data.results);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          // console.error(\"Request data:\", err.request);\n        } else {\n          // console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    getUserDetailsfetch();\n  }, [to_id]);\n  useEffect(() => {\n    const getalbumStatus = async () => {\n      let formData = {\n        user_id: userdetail.id,\n        status: userdetail.album_setting_status,\n      };\n      console.log(formData, \"fff\");\n      try {\n        const res = await axios.post(apiUrll + \"getalbumStatus\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n\n        setalbumdata(res.data.results);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    getalbumStatus();\n  }, [userdetail]);\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    console.log(\"*****************\", userdetail.id);\n    if (String(userLogin.id) === String(userdetail.id)) {\n      setuserper(true);\n    } else {\n      setuserper(false);\n    }\n  }, [userper, userdetail]);\n  useEffect(() => {\n    const getAllfriendss = async () => {\n      let formData = {\n        user_id: to_id,\n      };\n      console.log(formData);\n      try {\n        const res = await axios.post(apiUrl + \"getAllfriend_s\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        var respo = res.data.results;\n\n        setAllFriends(respo);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    if (to_id !== \"\") {\n      getAllfriendss();\n    }\n  }, [to_id]);\n  // const getAllfriends = async () => {\n  //   let formData = {\n  //     user_id: to_id,\n  //   };\n  //   console.log(formData);\n  //   try {\n  //     const res = await axios.post(apiUrl + \"getAllfriend_s\", formData, {\n  //       headers: {\n  //         Accept: \"application/json\",\n  //         \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n  //       },\n  //     });\n  //     var respo = res.data.results;\n\n  //     setAllFriends(respo);\n  //   } catch (err) {\n  //     // Enhanced error handling\n  //     if (err.response) {\n  //     } else if (err.request) {\n  //       console.error(\"Request data:\", err.request);\n  //     } else {\n  //       console.error(\"Error message:\", err.message);\n  //     }\n  //   }\n  // };\n  const [showPicker, setShowPicker] = useState(false);\n\n  const handleEmojiClick = (emojiObject) => {\n    setMessage((prevMessage) => prevMessage + emojiObject.emoji);\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n    setShowPicker(false); // Hide picker after selecting an emoji\n  };\n  const handlesearchmessage = (e) => {\n    const searchValue = e.target.value.toLowerCase();\n    setSearchText(searchValue);\n\n    if (!searchValue) {\n      setFilteredMessages(messages); // Reset to all messages when search is empty\n      return;\n    }\n\n    const filtered = messages.filter(\n      (chat) =>\n        chat && // Ensure `chat` exists\n        chat.message && // Ensure properties exist\n        chat.message.toLowerCase().includes(searchValue)\n    );\n\n    setFilteredMessages(filtered);\n  };\n  const formatTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Ensure the date string is correctly formatted\n    const postDate = new Date(dateString);\n    if (isNaN(postDate)) return \"Invalid Date\";\n\n    // Adjust time by adding 1 hour (3600000 milliseconds)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Format using Intl.DateTimeFormat with Europe/Oslo timezone\n    const options = {\n      timeZone: \"Europe/Oslo\",\n      day: \"2-digit\",\n      month: \"short\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: true, // Use AM/PM format\n    };\n\n    const formatter = new Intl.DateTimeFormat(\"en-US\", options);\n    return formatter.format(adjustedPostDate);\n  };\n  const handledeletemainpopup = async (id) => {\n    let deleteev = {\n      id: id,\n      user_id: LoginData.id,\n      to_id: to_id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"deletemessagechat\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      setShowMenu(false);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const [chooseallId, setchooseallId] = useState([]);\n  const [showdeletebutton, setshowdeletebutton] = useState(false);\n  const [selectall, setselectall] = useState(false);\n  const handlealldelete = async () => {\n    let deleteev = {\n      id: chooseallId,\n      user_id: LoginData.id,\n      to_id: to_id,\n      other_id: chooseallId_left,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"deletemultiplemessagechat\",\n        deleteev,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      setTimeout(() => {\n        setchooseallId([]);\n        setshowdeletebutton(false);\n        setselectall(false);\n        setchooseallId_left([]);\n        setshowdeletebutton(false);\n      }, 500);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const handleCloseDeletePopup = () => {\n    setShowMenu(false);\n    setShowMenu_Left(false);\n  };\n  const handleallselect = () => {\n    setselectall(!selectall);\n  };\n  const handlechooseAll = (id) => {\n    setchooseallId(\n      (prev) =>\n        prev.includes(id)\n          ? prev.filter((item) => item !== id) // Remove if already selected\n          : [...prev, id] // Add if not selected\n    );\n  };\n  useEffect(() => {\n    if (chooseallId_left.length > 0 || chooseallId.length > 0) {\n      setshowdeletebutton(true);\n    } else {\n      setshowdeletebutton(false);\n    }\n  }, [chooseallId_left, chooseallId]);\n\n  const [showMenu_Left, setShowMenu_Left] = useState(false);\n  const handlechooseAll_left = (id) => {\n    setchooseallId_left(\n      (prev) =>\n        prev.includes(id)\n          ? prev.filter((item) => item !== id) // Remove if already selected\n          : [...prev, id] // Add if not selected\n    );\n  };\n\n  const toggleMenu_Left = (index) => {\n    setShowMenu_Left(showMenu_Left === index ? null : index);\n    setShowMenu(false);\n  };\n  const handledeletemainpopup_Left = async (id) => {\n    let deleteev = {\n      id: id,\n      user_id: LoginData.id,\n      to_id: to_id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"deletemessagechat_Left\",\n        deleteev,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const confirmPassword = (useralbumid, passid) => {\n    setShowPopSuccess(false);\n    setPopsuccessMessage(\"\");\n    setPasswordId(useralbumid);\n    setredirectid(passid);\n    setOpenpassword(true);\n  };\n  useEffect(() => {\n    const getUserDetailsFriends = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n      let formData = {\n        to_id: to_id,\n        user_id: userLogin.id,\n        id: to_id,\n      };\n\n      try {\n        const res = await axios.post(\n          apiUrl + \"getUserDetailsFriends\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n\n        // Extract the images/videos from the API response\n        const mediaList = res.data.results;\n\n        // Initialize empty arrays for images and videos\n        let images = [];\n        let videos = [];\n\n        // Supported image and video extensions\n        const imageExtensions = [\"jpg\", \"jpeg\", \"png\", \"gif\", \"webp\"];\n        const videoExtensions = [\"mp4\", \"mov\", \"avi\", \"mkv\", \"webm\"];\n\n        mediaList.forEach((media) => {\n          if (typeof media.images === \"string\") {\n            let mediaArray = JSON.parse(media.images);\n\n            mediaArray.forEach((file) => {\n              images.push(file);\n            });\n          }\n        });\n        console.log(images);\n        setImagesFriends(images);\n        setVideosFriends(videos);\n      } catch (err) {\n        console.error(\"Error fetching data:\", err);\n      }\n    };\n\n    getUserDetailsFriends();\n  }, [to_id]);\n\n  useEffect(() => {\n    const getUserDetailsOwn = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n      let formData = {\n        to_id: to_id,\n        user_id: userLogin.id,\n        id: to_id,\n      };\n\n      try {\n        const res = await axios.post(apiUrl + \"getUserDetailsOwn\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        // Extract the images/videos from the API response\n        const mediaList = res.data.results;\n\n        // Initialize empty arrays for images and videos\n        let images = [];\n        let videos = [];\n\n        // Supported image and video extensions\n        const imageExtensions = [\"jpg\", \"jpeg\", \"png\", \"gif\", \"webp\"];\n        const videoExtensions = [\"mp4\", \"mov\", \"avi\", \"mkv\", \"webm\"];\n\n        mediaList.forEach((media) => {\n          if (typeof media.images === \"string\") {\n            let mediaArray = JSON.parse(media.images);\n\n            mediaArray.forEach((file) => {\n              images.push(file);\n            });\n          }\n        });\n        setImagesFriendsOwn(images);\n        setVideosFriendsOwn(videos);\n      } catch (err) {\n        console.error(\"Error fetching data:\", err);\n      }\n    };\n\n    getUserDetailsOwn();\n  }, [to_id]);\n  useEffect(() => {\n    const getUserDetailsfetchUserdata = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        to_id: to_id,\n        user_id: userLogin.id,\n        id: to_id,\n      };\n      //console.log(formData);\n      try {\n        const res = await axios.post(apiUrl + \"getUserDetailMember\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n\n        if (res.data.row !== undefined && res.data.row.length > 0) {\n          var respo = res.data.row[0];\n          setUserDetail(respo);\n        } else {\n        }\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          // console.error(\"Request data:\", err.request);\n        } else {\n          // console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    getUserDetailsfetchUserdata();\n  }, [to_id]);\n  const handleModalClose = async () => {\n    setOpenpassword(false);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      password: e.target.password.value,\n      user_id: userLogin.id,\n      idd: PasswordId,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"checkprotectedpassword\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      var respo = res.data;\n      console.log(respo);\n      if (respo.status === \"2\") {\n        setShowPopError(true);\n        setPoperrorMessage(respo.message);\n        setTimeout(() => {\n          setShowPopError(\"\");\n        }, 1000);\n      } else {\n        setShowPopSuccess(true);\n        setPopsuccessMessage(respo.message);\n        setTimeout(() => {\n          navigate(`/previewimages/${redirectid}`);\n          setShowPopSuccess(false);\n          setOpenpassword(false);\n          setPopsuccessMessage(\"\");\n        }, 1500);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    const get_albumStatusonlyPublic = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        user_id: to_id,\n      };\n\n      try {\n        const res = await axios.post(\n          apiUrl + \"get_albumStatusonlyPublic\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n            },\n          }\n        );\n        // console.log(res.data.results);\n        setisonlyallbumPublic(res.data.results);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          //console.error(\"Request data:\", err.request);\n        } else {\n          //console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    if (to_id !== \"\") {\n      get_albumStatusonlyPublic();\n    }\n  }, [to_id]);\n  useEffect(() => {\n    const get_albumStatusonlyfriend = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        user_id: to_id,\n      };\n\n      try {\n        const res = await axios.post(\n          apiUrl + \"get_albumStatusonlyfriend\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n            },\n          }\n        );\n        console.log(res.data.results);\n        setisonlyallbumfriend(res.data.results);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          //console.error(\"Request data:\", err.request);\n        } else {\n          //console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    if (to_id !== \"\") {\n      get_albumStatusonlyfriend();\n    }\n  }, [to_id]);\n\n  const hanldeseenmessage = async () => {\n    console.log(to_id);\n    // console.log(seenn);\n    if (!to_id || arrow) return;\n    // setSeen(true);\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      to_id: to_id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      console.log(\"ll\");\n      setTimeout(() => {\n        chatEndRef.current.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"nearest\",\n        });\n      }, 350);\n      getmessageCount();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const hanldeseenmessageAll = async () => {\n    console.log(to_id);\n    if (!to_id) return;\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      to_id: to_id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      console.log(\"ll\");\n      setTimeout(() => {\n        chatEndRef.current.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"nearest\",\n        });\n        setTimeout(() => {\n          setarrow(true);\n        }, 30);\n      }, 350);\n      getmessageCount();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const hanldeseenmessagenotscroll = async () => {\n    if (to_id !== \"\") {\n      let formData = {\n        user_id: userLogin.id,\n        to_id: to_id,\n      };\n      console.log(formData);\n      try {\n        const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        setTimeout(() => {\n          setarrow(true);\n        }, 350);\n        getmessageCount();\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n          console.error(\"Error response:\", err.response);\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    console.log(filteredMessages);\n    if (filteredMessages.length <= 4) {\n      readmessageuser();\n    }\n  }, [filteredMessages]);\n  return (\n    <>\n      <Headertwo refreshNotifications={refreshNotifications} />\n      {showPopError && <ErrorPop message={errorPopMessage} />}\n      {showPopSuccess && <SuccessPop message={successPopMessage} />}\n      <section className=\"inboxblock d-block gapy\">\n        <div className=\"container-lg\">\n          <div className=\"row gy-4\">\n            <div className=\"col-md-3 sticky-md-top h-100  evleft\">\n              <div className=\"d-flex flex-column gap-3 pe-2 \">\n                <h1>Inbox</h1>\n                {/* <div className=\"filtersearch\">\n                  <form action=\"\">\n                    <input type=\"text\" placeholder=\"search groups\" />\n                  </form>\n                </div> */}\n                <div className=\"d-flex flex-column gap-2\">\n                  <Link\n                    to=\"/dashboard\"\n                    className=\"d-flex gap-3 align-items-center listoficons\"\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"userpic userpic_main ofit rounded-circle overflow-hidden ratio-unset\">\n                        <IconHome\n                          stroke={1}\n                          className=\"w-100 h-100 main_homei\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <h4>{t(\"Home\")}</h4>\n                    </div>\n                  </Link>\n                  <Link\n                    to=\"/receivedmessages\"\n                    className={`d-flex gap-2 align-items-center filterlist ${\n                      activeIndex === 1 ? \"active\" : \"\"\n                    }`}\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"eventicon fulw\">\n                        <img src={ev1} alt=\"eventicon\" />\n                      </div>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <h3>{t(\"Received_messages\")}</h3>\n                    </div>\n                  </Link>\n                  <Link\n                    to=\"/sendmessages\"\n                    className={`d-flex gap-2 align-items-center filterlist ${\n                      activeIndex === 1 ? \"\" : \"\"\n                    }`}\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"eventicon fulw\">\n                        <img src={ev2} alt=\"eventicon\" />\n                      </div>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <h3>{t(\"Sent_messages\")}</h3>\n                    </div>\n                  </Link>\n\n                  <hr className=\"linehr\" />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-9\">\n              <div className=\"row gy-4\">\n                <div className=\"col-lg-8\">\n                  <div className=\"d-flex flex-column gap-0 chat_box\">\n                    <div className=\"d-flex align-items-sm-center gap-3 mess_head\">\n                      <Link\n                        target=\"_blank\"\n                        to={`/friend/${userdetail.id}`}\n                        className=\"d-block chat_profile\"\n                      >\n                        {userdetail.profile_image ? ( // Display the image URL if available\n                          <img\n                            className=\"w-100 h-100\"\n                            src={userdetail.profile_image} // Use the URL from the member object\n                            alt=\"userpic\"\n                          />\n                        ) : (\n                          <img\n                            className=\"w-100 h-100\"\n                            src={require(\"../assets/images/thumb.jpg\")} // Default image if profile image is not available\n                            alt=\"userpic\"\n                          />\n                        )}\n                      </Link>\n                      <div className=\"d-flex align-items-sm-center flex-sm-row flex-column justify-content-between w-100 gap-2 chat_name\">\n                        <div className=\"d-flex flex-column gap-3\">\n                          <div className=\"d-flex flex-column gap-3\">\n                            <div className=\"d-flex flex-column gap-1\">\n                              <div className=\"d-flex align-items-sm-center gap-2\">\n                                <div className=\"newclass\">\n                                  <Link\n                                    target=\"_blank\"\n                                    className=\"unamecolor\"\n                                    to={`/friend/${userdetail.id}`}\n                                  >\n                                    {userdetail.username}\n                                  </Link>\n                                </div>\n                                ,\n                                <h3>\n                                  {userdetail.birthday_date != null\n                                    ? `${calculateAge(\n                                        userdetail.birthday_date\n                                      )}`\n                                    : \"\"}\n                                </h3>\n                              </div>\n                              <h5>{userdetail.location}</h5>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"d-flex flex-column justify-content-end align-items-end gap-2\">\n                          <div className=\"search-box\">\n                            <i className=\"fas fa-search\"></i>\n                            <input\n                              type=\"search\"\n                              placeholder={t(\"search\")}\n                              onInput={(e) => handlesearchmessage(e)}\n                            />\n                          </div>\n                          <div className=\"d-flex align-items-center gap-2 message_s-btn\">\n                            {showdeletebutton && (\n                              <button\n                                className=\"deltebtn\"\n                                type=\"button\"\n                                onClick={handlealldelete}\n                              >\n                                {t(\"delete\")}\n                              </button>\n                            )}\n                            <button\n                              className={`select_btn ${\n                                selectall ? \"active\" : \"\"\n                              }`}\n                              type=\"button\"\n                              onClick={handleallselect}\n                            >\n                              {t(\"Select\")}\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div\n                      className=\"mess_box_main\"\n                      ref={chatBoxRef}\n                      style={{\n                        maxHeight: \"56vh\",\n                        overflow: \"auto\",\n                        display: \"flex\",\n                        flexWrap: \"wrap\",\n                        justifyContent: \"end\",\n                        position: \"relative\",\n                      }}\n                    >\n                      <div className=\"mess_box d-flex flex-column gap-3 justify-content-end w-100\">\n                        {loadingMore && (\n                          <div className=\"text-center w-100 py-2\">\n                            <span\n                              className=\"spinner-border text-success spinner-border-sm\"\n                              role=\"status\"\n                              aria-hidden=\"true\"\n                            ></span>\n                          </div>\n                        )}\n                        {filteredMessages.length === 0 ? (\n                          <div className=\"empty-chat-message\">\n                            <p>{t(\"No_messages_to_display\")}</p>\n                          </div>\n                        ) : (\n                          filteredMessages.map((chat, index) => (\n                            <div\n                              className=\"j\"\n                              key={index}\n                              ref={\n                                index === filteredMessages.length - 1\n                                  ? chatEndRef\n                                  : null\n                              }\n                            >\n                              {chat.user_id === LoginData.id ? (\n                                // Right-aligned messages (sent by the logged-in user)\n                                <>\n                                  <div className=\"main_mess right_mess d-flex align-items-end gap-2 flex-column\">\n                                    {/* Render the profile image only if there are files */}\n                                    {Array.isArray(JSON.parse(chat.file)) &&\n                                      JSON.parse(chat.file).length > 0 && (\n                                        <>\n                                          {/* Show profile image only for the first file */}\n                                          {index === 0 && (\n                                            <Link\n                                              to={`/friend/${chat.user1_id}`}\n                                              target=\"_blank\"\n                                              className=\"d-block mess_profile\"\n                                            >\n                                              <img\n                                                className=\"w-100 h-100 pr\"\n                                                src={\n                                                  chat.user1_makeImagePrivate ===\n                                                  1\n                                                    ? require(\"../assets/images/thumb.jpg\")\n                                                    : chat.user1_profile\n                                                }\n                                                alt=\"profile\"\n                                              />\n                                            </Link>\n                                          )}\n\n                                          {JSON.parse(chat.file).map(\n                                            (f, fileIndex) => {\n                                              const fileSrc = getFileSrc(f);\n\n                                              return (\n                                                <div\n                                                  className=\"message d-block send_image\"\n                                                  key={fileIndex}\n                                                >\n                                                  {fileSrc ? (\n                                                    // If it's an image, display it\n\n                                                    <>\n                                                      <div className=\"d-flex align-items-start gap-1 h-100\">\n                                                        <div\n                                                          style={{\n                                                            position:\n                                                              \"relative\",\n                                                            display:\n                                                              \"inline-block\",\n                                                          }}\n                                                        >\n                                                          <button\n                                                            className=\"remove_mess\"\n                                                            onClick={() =>\n                                                              toggleMenu(index)\n                                                            }\n                                                          >\n                                                            <HiDotsVertical />\n                                                          </button>\n\n                                                          {showMenu ===\n                                                            index && (\n                                                            <ul className=\"popup-menu\">\n                                                              <li\n                                                                onClick={() =>\n                                                                  handledeletemainpopup(\n                                                                    chat.id\n                                                                  )\n                                                                }\n                                                              >\n                                                                {t(\"Remove\")}\n                                                              </li>\n                                                              <li\n                                                                onClick={\n                                                                  handleCloseDeletePopup\n                                                                }\n                                                              >\n                                                                {t(\"Cancel\")}\n                                                              </li>\n                                                            </ul>\n                                                          )}\n                                                        </div>\n                                                        <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                          <div className=\"d-flex align-items-start gap-1\">\n                                                            <img\n                                                              className=\"w-100 h-100 d\"\n                                                              src={fileSrc}\n                                                              alt={`file-${fileIndex}`}\n                                                              onClick={() =>\n                                                                setSelectedImage(\n                                                                  fileSrc\n                                                                )\n                                                              }\n                                                              style={{\n                                                                cursor:\n                                                                  \"pointer\",\n                                                              }}\n                                                            />\n                                                            {selectall && (\n                                                              <input\n                                                                type=\"checkbox\"\n                                                                checked={chooseallId.includes(\n                                                                  chat.id\n                                                                )}\n                                                                onChange={() =>\n                                                                  handlechooseAll(\n                                                                    chat.id\n                                                                  )\n                                                                }\n                                                              />\n                                                            )}\n                                                          </div>\n                                                          <span>\n                                                            {formatTime(\n                                                              chat.date\n                                                            )}\n                                                          </span>\n                                                        </div>\n                                                      </div>\n                                                    </>\n                                                  ) : (\n                                                    <>\n                                                      <div className=\"d-flex align-items-start gap-1 h-100\">\n                                                        <div\n                                                          style={{\n                                                            position:\n                                                              \"relative\",\n                                                            display:\n                                                              \"inline-block\",\n                                                          }}\n                                                        >\n                                                          <button\n                                                            className=\"remove_mess\"\n                                                            onClick={() =>\n                                                              toggleMenu(index)\n                                                            }\n                                                          >\n                                                            <HiDotsVertical />\n                                                          </button>\n\n                                                          {showMenu ===\n                                                            index && (\n                                                            <ul className=\"popup-menu\">\n                                                              <li\n                                                                onClick={() =>\n                                                                  handledeletemainpopup(\n                                                                    chat.id\n                                                                  )\n                                                                }\n                                                              >\n                                                                {t(\"Remove\")}\n                                                              </li>\n                                                              <li\n                                                                onClick={\n                                                                  handleCloseDeletePopup\n                                                                }\n                                                              >\n                                                                {t(\"Cancel\")}\n                                                              </li>\n                                                            </ul>\n                                                          )}\n                                                        </div>\n                                                        <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                          <div className=\"d-flex align-items-start gap-1\">\n                                                            <Link\n                                                              to={f}\n                                                              download\n                                                              target=\"_blank\"\n                                                              rel=\"noopener noreferrer\"\n                                                              className=\"h-100\"\n                                                            >\n                                                              <img\n                                                                src={require(\"../assets/images/images.png\")}\n                                                                alt=\"File\"\n                                                              />\n                                                            </Link>\n                                                            {selectall && (\n                                                              <input\n                                                                type=\"checkbox\"\n                                                                checked={chooseallId.includes(\n                                                                  chat.id\n                                                                )}\n                                                                onChange={() =>\n                                                                  handlechooseAll(\n                                                                    chat.id\n                                                                  )\n                                                                }\n                                                              />\n                                                            )}\n                                                          </div>\n                                                          <span>\n                                                            {formatTime(\n                                                              chat.date\n                                                            )}\n                                                          </span>\n                                                        </div>\n                                                      </div>\n                                                    </>\n                                                  )}\n                                                </div>\n                                              );\n                                            }\n                                          )}\n                                        </>\n                                      )}\n                                  </div>\n\n                                  {chat.message && chat.message !== \"null\" && (\n                                    <div className=\"main_mess right_mess d-flex align-items-center gap-2\">\n                                      <Link\n                                        to={`/friend/${chat.user1_id}`}\n                                        target=\"_blank\"\n                                        className=\"d-block mess_profile ri\"\n                                      >\n                                        <img\n                                          className=\"w-100 h-100 ri\"\n                                          src={\n                                            chat.user1_makeImagePrivate === 1\n                                              ? require(\"../assets/images/thumb.jpg\")\n                                              : chat.user1_profile\n                                          }\n                                          alt=\"profile\"\n                                        />\n                                      </Link>\n                                      <div className=\" d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                        <div className=\"d-flex align-items-start gap-0\">\n                                          <div\n                                            style={{\n                                              position: \"relative\",\n                                              display: \"inline-block\",\n                                            }}\n                                          >\n                                            <button\n                                              className=\"remove_mess\"\n                                              onClick={() => toggleMenu(index)}\n                                            >\n                                              <HiDotsVertical />\n                                            </button>\n\n                                            {showMenu === index && (\n                                              <ul className=\"popup-menu align-items-end\">\n                                                <li\n                                                  onClick={() =>\n                                                    handledeletemainpopup(\n                                                      chat.id\n                                                    )\n                                                  }\n                                                >\n                                                  {t(\"Remove\")}\n                                                </li>\n                                                <li\n                                                  onClick={\n                                                    handleCloseDeletePopup\n                                                  }\n                                                >\n                                                  {t(\"Cancel\")}\n                                                </li>\n                                              </ul>\n                                            )}\n                                          </div>\n                                          <div className=\"d-flex align-items-start gap-1\">\n                                            <p className=\"message\">\n                                              {chat.message}\n                                            </p>\n                                            {selectall && (\n                                              <input\n                                                type=\"checkbox\"\n                                                checked={chooseallId.includes(\n                                                  chat.id\n                                                )}\n                                                onChange={() =>\n                                                  handlechooseAll(chat.id)\n                                                }\n                                              />\n                                            )}\n                                          </div>\n                                        </div>\n\n                                        <span>{formatTime(chat.date)}</span>\n                                      </div>\n                                    </div>\n                                  )}\n                                </>\n                              ) : (\n                                // Left-aligned messages (received from other users)\n                                <>\n                                  <div className=\"main_mess left_mess d-flex align-items-start gap-2 flex-column \">\n                                    {/* Check if chat.file is valid and has files */}\n                                    {Array.isArray(JSON.parse(chat.file)) &&\n                                      JSON.parse(chat.file).length > 0 && (\n                                        <>\n                                          {/* Show profile image only for the first file */}\n                                          {index === 0 && (\n                                            <Link\n                                              to={`/friend/${chat.user1_id}`}\n                                              target=\"_blank\"\n                                              className=\"d-block mess_profile le  flex-shrink-0\"\n                                            >\n                                              <img\n                                                className=\"w-100 h-100 d\"\n                                                src={\n                                                  chat.user1_makeImagePrivate ===\n                                                  1\n                                                    ? require(\"../assets/images/thumb.jpg\")\n                                                    : chat.user1_profile\n                                                }\n                                                alt=\"profile\"\n                                              />\n                                            </Link>\n                                          )}\n\n                                          {JSON.parse(chat.file).map(\n                                            (f, fileIndex) => {\n                                              const fileSrc = getFileSrc(f);\n\n                                              return (\n                                                <div\n                                                  className=\"message d-block send_image\"\n                                                  key={fileIndex}\n                                                >\n                                                  {fileSrc ? (\n                                                    <>\n                                                      <div className=\"d-flex align-items-start gap-1 h-100\">\n                                                        <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                          <div className=\"d-flex align-items-start gap-1\">\n                                                            <img\n                                                              className=\"w-100 h-100 d\"\n                                                              src={fileSrc}\n                                                              alt={`file-${fileIndex}`}\n                                                              onClick={() =>\n                                                                setSelectedImage(\n                                                                  fileSrc\n                                                                )\n                                                              }\n                                                              style={{\n                                                                cursor:\n                                                                  \"pointer\",\n                                                              }}\n                                                            />\n                                                          </div>\n                                                          <span>\n                                                            {formatTime(\n                                                              chat.date\n                                                            )}\n                                                          </span>\n                                                        </div>\n                                                      </div>\n                                                    </>\n                                                  ) : (\n                                                    <>\n                                                      <div className=\"d-flex align-items-start gap-1 h-100\">\n                                                        <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                          <div className=\"d-flex align-items-start gap-1\">\n                                                            <Link\n                                                              to={f}\n                                                              download\n                                                              target=\"_blank\"\n                                                              rel=\"noopener noreferrer\"\n                                                              className=\"h-100\"\n                                                            >\n                                                              <img\n                                                                src={require(\"../assets/images/images.png\")}\n                                                                alt=\"File\"\n                                                              />\n                                                            </Link>\n                                                          </div>\n                                                          <span>\n                                                            {formatTime(\n                                                              chat.date\n                                                            )}\n                                                          </span>\n                                                        </div>\n                                                      </div>\n                                                    </>\n                                                  )}\n                                                </div>\n                                              );\n                                            }\n                                          )}\n                                        </>\n                                      )}\n                                  </div>\n\n                                  {chat.message && chat.message !== \"null\" && (\n                                    <div className=\"main_mess left_mess d-flex align-items-center gap-2\">\n                                      <Link\n                                        to={`/friend/${chat.user1_id}`}\n                                        target=\"_blank\"\n                                        className=\"d-block mess_profile le  flex-shrink-0\"\n                                      >\n                                        <img\n                                          className=\"w-100 h-100 pr\"\n                                          src={\n                                            chat.user1_makeImagePrivate === 1\n                                              ? require(\"../assets/images/thumb.jpg\")\n                                              : chat.user1_profile\n                                          }\n                                          alt=\"profile\"\n                                        />\n                                      </Link>\n                                      <div className=\" d-flex flex-column gap-1 justify-content-start align-items-start\">\n                                        {/* <div className=\"d-flex align-items-start gap-0\">\n                                                                                    <p className=\"message\">{chat.message}</p>\n                                                                                  </div> */}\n                                        <div className=\"d-flex align-items-start gap-0\">\n                                          <div className=\"d-flex align-items-start gap-1\">\n                                            <p className=\"message\">\n                                              {chat.message}\n                                            </p>\n                                          </div>\n                                        </div>\n\n                                        <span>{formatTime(chat.date)}</span>\n                                      </div>\n                                    </div>\n                                  )}\n                                </>\n                              )}\n                            </div>\n                          ))\n                        )}\n                      </div>\n\n                      {filteredMessages.length > 4 && !arrow && (\n                        <button\n                          className=\"newmessagearrow\"\n                          type=\"button\"\n                          onClick={hanldeseenmessageAll}\n                        >\n                          <FaAngleDown />\n                          {Totalcountmessage > 0 && (\n                            <span>{Totalcountmessage}</span>\n                          )}\n                        </button>\n                      )}\n                    </div>\n                    {selectedImage && (\n                      <div\n                        className=\"p-5\"\n                        style={{\n                          position: \"fixed\",\n                          top: 0,\n                          left: 0,\n                          width: \"100%\",\n                          height: \"100%\",\n                          backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          zIndex: 989898,\n                        }}\n                        onClick={() => setSelectedImage(null)} // Close when clicked outside\n                      >\n                        <div className=\"rel d-block h-100\">\n                          <button type=\"button\" className=\"closebtnpic\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"icon icon-tabler icons-tabler-outline icon-tabler-x\"\n                            >\n                              <path\n                                stroke=\"none\"\n                                d=\"M0 0h24v24H0z\"\n                                fill=\"none\"\n                              />\n                              <path d=\"M18 6l-12 12\" />\n                              <path d=\"M6 6l12 12\" />\n                            </svg>\n                          </button>\n                          <MediaRenderer\n                            className=\"w-100 h-100 object-fit-cover\"\n                            url={selectedImage}\n                            style={{\n                              maxWidth: \"100%\",\n                              maxHeight: \"100%\",\n                              borderRadius: \"10px\",\n                              height: \"85vh\",\n                              objectFit: \"contain\",\n                            }}\n                          />\n                        </div>\n                      </div>\n                    )}\n                    <span className=\"text-danger\">{error}</span>\n                    {restr_message && (\n                      <span\n                        className=\"text-danger\"\n                        style={{ fontSize: \"14px\" }}\n                      >\n                        {t(\"Your_message_contain\")}\n                      </span>\n                    )}\n                    <form\n                      onSubmit={(e) => {\n                        e.preventDefault(); // Prevent page reload\n                        if (message.trim() !== \"\" || Isfile.length > 0) {\n                          handleSend();\n                        }\n                      }}\n                      className=\"message_type d-flex align-items-center gap-2\"\n                    >\n                      {/* File Upload */}\n                      <div className=\"d-block image_img\">\n                        <input\n                          type=\"file\"\n                          onChange={handleFileChange}\n                          multiple\n                        />\n                        <img\n                          className=\"w-100 h-100\"\n                          src={require(\"../assets/images/serach2.png\")}\n                          alt=\"Upload\"\n                        />\n                      </div>\n\n                      {/* Emoji Picker */}\n                      <div className=\"emoji-container emchatbox\">\n                        <button\n                          type=\"button\"\n                          className=\"emoji-button\"\n                          onClick={() => setShowPicker(!showPicker)}\n                        >\n                          😀\n                        </button>\n                        {showPicker && (\n                          <EmojiPicker onEmojiClick={handleEmojiClick} />\n                        )}\n                      </div>\n\n                      {/* Message Input */}\n                      <input\n                        type=\"text\"\n                        ref={inputRef}\n                        value={message}\n                        onChange={handleInputChange}\n                        placeholder=\"Write a message...\"\n                      />\n\n                      {/* Send Button */}\n                      <button\n                        className=\"d-block image_img\"\n                        type=\"submit\" // Change to \"submit\" so Enter key works\n                        disabled={!message.trim() && Isfile.length === 0} // Prevent empty messages\n                      >\n                        <img\n                          className=\"w-50 h-50\"\n                          src={require(\"../assets/images/send.png\")}\n                          alt=\"Send\"\n                        />\n                      </button>\n\n                      {/* Loading Spinner */}\n                      {spinner && (\n                        <div\n                          className=\"spinner-border text-success send_load\"\n                          role=\"status\"\n                        >\n                          <span className=\"visually-hidden\"></span>\n                        </div>\n                      )}\n\n                      {/* Display Selected Images */}\n                      {Isfile.length > 0 && (\n                        <div className=\"muti_images\">\n                          <div className=\"muti_main overflow-auto d-flex gap-2 mx-auto w-96\">\n                            {Isfile.map((file, index) => (\n                              <div key={index} className=\"d-block muti_image\">\n                                <img\n                                  className=\"w-100 h-100\"\n                                  src={URL.createObjectURL(file)}\n                                  alt=\"Preview\"\n                                />\n                                <button\n                                  className=\"delete_img\"\n                                  onClick={() => removeImage(index)}\n                                >\n                                  ×\n                                </button>\n                              </div>\n                            ))}\n                          </div>\n                        </div>\n                      )}\n                    </form>\n                  </div>\n                </div>\n                <div className=\"col-lg-4\">\n                  <div className=\"d-flex flex-column gap-4\">\n                    <div className=\"recive_main abouthim_scroll scroll_bar\">\n                      <div className=\"row gy-5\">\n                        <div className=\"col-12\">\n                          <div className=\"row gy-3\">\n                            {userLogin.id === Number(to_id) &&\n                              UserDetail.profile_image_1 &&\n                              UserDetail.profile_image_1.trim() !== \"\" && (\n                                <div className=\"col-12 px-1\">\n                                  <div className=\"d-block recive_two\">\n                                    {UserDetail.profile_image_1.match(\n                                      /\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i\n                                    ) ? (\n                                      <img\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        src={UserDetail.profile_image_1}\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_1\n                                          )\n                                        }\n                                        alt=\"img\"\n                                      />\n                                    ) : UserDetail.profile_image_1.match(\n                                        /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i\n                                      ) ? (\n                                      <video\n                                        controls\n                                        className=\"w-100 h-100\"\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_1\n                                          )\n                                        }\n                                      >\n                                        <source\n                                          src={UserDetail.profile_image_1}\n                                          type=\"video/mp4\"\n                                        />\n                                        {t(\"Your_browser_does\")}\n                                      </video>\n                                    ) : null}\n                                  </div>\n                                </div>\n                              )}\n                            {userLogin.id === Number(to_id) &&\n                              UserDetail.profile_image_2 &&\n                              UserDetail.profile_image_2.trim() !== \"\" && (\n                                <div className=\"col-12 px-1\">\n                                  <div className=\"d-block recive_two\">\n                                    {UserDetail.profile_image_2.match(\n                                      /\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i\n                                    ) ? (\n                                      <img\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_2\n                                          )\n                                        }\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        src={UserDetail.profile_image_2}\n                                        alt=\"img\"\n                                      />\n                                    ) : UserDetail.profile_image_2.match(\n                                        /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i\n                                      ) ? (\n                                      <video\n                                        controls\n                                        className=\"w-100 h-100\"\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_2\n                                          )\n                                        }\n                                      >\n                                        <source\n                                          src={UserDetail.profile_image_2}\n                                          type=\"video/mp4\"\n                                        />\n                                        {t(\"Your_browser_does\")}\n                                      </video>\n                                    ) : null}\n                                  </div>\n                                </div>\n                              )}\n                            {userLogin.id === Number(to_id) &&\n                              UserDetail.profile_image_3 &&\n                              UserDetail.profile_image_3.trim() !== \"\" && (\n                                <div className=\"col-12 px-1\">\n                                  <div className=\"d-block recive_two\">\n                                    {UserDetail.profile_image_3.match(\n                                      /\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i\n                                    ) ? (\n                                      <img\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_3\n                                          )\n                                        }\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        src={UserDetail.profile_image_3}\n                                        alt=\"img\"\n                                      />\n                                    ) : UserDetail.profile_image_3.match(\n                                        /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i\n                                      ) ? (\n                                      <video\n                                        controls\n                                        className=\"w-100 h-100\"\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_3\n                                          )\n                                        }\n                                      >\n                                        <source\n                                          src={UserDetail.profile_image_3}\n                                          type=\"video/mp4\"\n                                        />\n                                        {t(\"Your_browser_does\")}\n                                      </video>\n                                    ) : null}\n                                  </div>\n                                </div>\n                              )}\n                            {userLogin.id === Number(to_id) &&\n                              UserDetail.profile_image_4 &&\n                              UserDetail.profile_image_4.trim() !== \"\" && (\n                                <div className=\"col-12 px-1\">\n                                  <div className=\"d-block recive_two\">\n                                    {UserDetail.profile_image_4.match(\n                                      /\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i\n                                    ) ? (\n                                      <img\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_4\n                                          )\n                                        }\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        src={UserDetail.profile_image_4}\n                                        alt=\"img\"\n                                      />\n                                    ) : UserDetail.profile_image_4.match(\n                                        /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i\n                                      ) ? (\n                                      <video\n                                        controls\n                                        className=\"w-100 h-100\"\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_4\n                                          )\n                                        }\n                                      >\n                                        <source\n                                          src={UserDetail.profile_image_4}\n                                          type=\"video/mp4\"\n                                        />{\" \"}\n                                        {t(\"Your_browser_does\")}\n                                      </video>\n                                    ) : null}\n                                  </div>\n                                </div>\n                              )}\n                            {Array.isArray(isonlyallbum) &&\n                              isonlyallbum.map((item, index) => {\n                                const images = JSON.parse(item.images);\n\n                                // If both uStatus is \"Yes\" and visibility is \"Private_visible\", show all images/videos.\n                                if (item.uStatus === \"Yes\") {\n                                  return (\n                                    <div\n                                      key={index}\n                                      className=\"d col-12 d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                      onClick={() => {\n                                        if (!userper) {\n                                          requestToview(item.id);\n                                        } else {\n                                          if (item.password_status === \"Yes\") {\n                                            confirmPassword(\n                                              item.id,\n                                              item.album_id\n                                            );\n                                          } else {\n                                            window.open(\n                                              `/privatealbum/${item.album_id}`\n                                            );\n                                          }\n                                        }\n                                      }}\n                                    >\n                                      {item.password_status === \"Yes\" ? (\n                                        <Link\n                                          to=\"#\"\n                                          onClick={() =>\n                                            confirmPassword(\n                                              item.id,\n                                              item.album_id\n                                            )\n                                          }\n                                        >\n                                          {t(\"PrivateAlbum\")}\n                                        </Link>\n                                      ) : (\n                                        <Link\n                                          to={`/previewimages/${item.album_id}`}\n                                        >\n                                          {t(\"PrivateAlbum\")}\n                                        </Link>\n                                      )}\n\n                                      <div className=\"d-block search_twoinfoicon\">\n                                        <img\n                                          className=\"w-100 h-100\"\n                                          src={require(\"../assets/images/ms3.png\")}\n                                          alt=\"Private Album\"\n                                        />\n                                      </div>\n                                      {item.uStatus === \"Yes\" ? (\n                                        item.password_status === \"Yes\" ? (\n                                          <Link\n                                            to=\"#\"\n                                            onClick={() =>\n                                              confirmPassword(\n                                                item.id,\n                                                item.album_id\n                                              )\n                                            }\n                                          >\n                                            {t(\"AccessGranted\")}{\" \"}\n                                            <strong> {item.album_name}</strong>\n                                          </Link>\n                                        ) : (\n                                          <Link\n                                            to={`/previewimages/${item.album_id}`}\n                                          >\n                                            {t(\"AccessGranted\")}{\" \"}\n                                            <strong> {item.album_name}</strong>\n                                          </Link>\n                                        )\n                                      ) : (\n                                        <p>\n                                          {t(\"RequestToView\")} {item.album_name}\n                                        </p>\n                                      )}\n                                    </div>\n                                  );\n                                }\n\n                                // If uStatus is \"No\" and visibility is \"Private_visible\", show private album request option.\n                                if (userLogin.id === Number(to_id)) {\n                                  if (\n                                    item.uStatus === \"No\" &&\n                                    item.visibility === \"Private_visible\"\n                                  ) {\n                                    return (\n                                      <div\n                                        key={index}\n                                        className=\"2 col-12 d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                        onClick={() => {\n                                          if (!userper) {\n                                            requestToview(item.id);\n                                          } else {\n                                            window.open(\n                                              `/privatealbum/${item.album_id}`\n                                            );\n                                          }\n                                        }}\n                                      >\n                                        <Link to=\"#\">\n                                          {\" \"}\n                                          {t(\"PRIVATE_ALBUM\")}{\" \"}\n                                        </Link>\n                                        <div className=\"d-block search_twoinfoicon\">\n                                          <img\n                                            className=\"w-100 h-100\"\n                                            src={require(\"../assets/images/padlock.png\")}\n                                            alt={t(\"PrivateAlbum\")}\n                                          />\n                                        </div>\n\n                                        <strong>{item.album_name}</strong>\n                                      </div>\n                                    );\n                                  }\n                                } else {\n                                  if (\n                                    item.uStatus === \"No\" &&\n                                    item.visibility === \"Private_visible\"\n                                  ) {\n                                    return (\n                                      <div\n                                        key={index}\n                                        className=\"3 col-12 d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                        onClick={() => {\n                                          if (!userper) {\n                                            requestToview(item.id);\n                                          } else {\n                                            window.open(\n                                              `/privatealbum/${item.album_id}`\n                                            );\n                                          }\n                                        }}\n                                      >\n                                        <Link to=\"#\">\n                                          {\" \"}\n                                          {t(\"PRIVATE_ALBUM\")}{\" \"}\n                                        </Link>\n                                        <div className=\"d-block search_twoinfoicon\">\n                                          <img\n                                            className=\"w-100 h-100\"\n                                            src={require(\"../assets/images/ms3.png\")}\n                                            alt={t(\"PrivateAlbum\")}\n                                          />\n                                        </div>\n                                        <p>{t(\"REQUEST_TO_VIEW\")}</p>\n                                        <strong>{item.album_name}</strong>\n                                      </div>\n                                    );\n                                  }\n                                }\n\n                                // If visibility is not \"Private_visible\", show all images/videos.\n                                return images.map((image, imgIndex) => (\n                                  <div\n                                    className=\"col-12 px-1\"\n                                    key={`${index}-${imgIndex}`}\n                                  >\n                                    <div className=\"d-block recive_two\">\n                                      <MediaRenderer\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        url={selectedImage}\n                                        onClick={() => setSelectedImage(image)}\n                                      />\n                                    </div>\n                                  </div>\n                                ));\n                              })}\n\n                            {Array.isArray(isonlyallbumfriend) &&\n                              isonlyallbumfriend.map((item, index) => {\n                                // Parse the JSON string into an array\n                                const images = JSON.parse(item.images);\n                                const isFriend = AllFriends.some(\n                                  (friend) => friend.id === userLogin.id\n                                );\n\n                                if (isFriend || userLogin.id === item.user_id) {\n                                  if (\n                                    item.addToAlbum === \"Yes\" &&\n                                    item.visibility === \"Friends_visible\"\n                                  ) {\n                                    return (\n                                      <div className=\"col-12 px-1\" key={index}>\n                                        <div\n                                          onClick={() => {\n                                            window.open(\n                                              `/previewimages/${item.album_id}`\n                                            );\n                                          }}\n                                          className=\"dd d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                        >\n                                          <Link\n                                            to=\"javascript:void(0)\"\n                                            className=\"text-decoration-none\"\n                                          >\n                                            {item.album_name}\n                                          </Link>\n                                          <div className=\"d-block search_twoinfoicon\">\n                                            <img\n                                              className=\"w-100 h-100\"\n                                              src={require(\"../assets/images/ms3.png\")}\n                                              alt=\"Album Preview\"\n                                            />\n                                          </div>\n\n                                          <p>{t(\"PreviewImages\")}</p>\n                                          <strong>{item.album_name}</strong>\n                                        </div>\n                                      </div>\n                                    );\n                                  }\n                                }\n                              })}\n                            {Array.isArray(isonlyallbumfriend) &&\n                              isonlyallbumfriend.map((item, index) => {\n                                // Parse the JSON string into an array\n                                const images = JSON.parse(item.images);\n                                if (\n                                  item.visibility === \"Public_visible\" &&\n                                  item.addToAlbum === \"Yes\"\n                                ) {\n                                  return (\n                                    <div className=\"col-12 px-1\" key={index}>\n                                      <div\n                                        onClick={() => {\n                                          window.open(\n                                            `/previewimages/${item.album_id}`\n                                          );\n                                        }}\n                                        className=\"dd d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                      >\n                                        <Link\n                                          to=\"javascript:void(0)\"\n                                          className=\"text-decoration-none\"\n                                        >\n                                          {item.album_name}\n                                        </Link>\n                                        <div className=\"d-block search_twoinfoicon\">\n                                          <img\n                                            className=\"w-100 h-100\"\n                                            src={require(\"../assets/images/ms3.png\")}\n                                            alt=\"Album Preview\"\n                                          />\n                                        </div>\n\n                                        <p>{t(\"PreviewImages\")}</p>\n                                        <p>{item.album_name}</p>\n                                      </div>\n                                    </div>\n                                  );\n                                }\n                              })}\n                            {Array.isArray(isonlyallbumPublic) &&\n                              isonlyallbumPublic.map((item, index) => {\n                                // Parse the JSON string into an array\n                                const images = JSON.parse(item.images);\n                                if (\n                                  item.visibility === \"Public_visible\" &&\n                                  item.addToAlbum === \"No\"\n                                ) {\n                                  return images.map((image, imgIndex) => (\n                                    <div\n                                      className=\"col-12 px-1\"\n                                      key={`${index}-${imgIndex}`}\n                                    >\n                                      <div className=\"d-block recive_two\">\n                                        <MediaRenderer\n                                          onClick={() =>\n                                            setSelectedImage(image)\n                                          }\n                                          className=\"w-100 h-100 object-fit-cover\"\n                                          url={image}\n                                        />\n                                      </div>\n                                    </div>\n                                  ));\n                                }\n                              })}\n                            {Array.isArray(isonlyallbumPublic) &&\n                              isonlyallbumPublic.map((item, index) => {\n                                // Parse the JSON string into an array\n                                const images = JSON.parse(item.images);\n                                if (\n                                  item.visibility === \"Public_visible\" &&\n                                  item.addToAlbum === \"Yes\"\n                                ) {\n                                  return (\n                                    <div className=\"col-12 px-1\" key={index}>\n                                      <div\n                                        onClick={() => {\n                                          window.open(\n                                            `/previewimages/${item.album_id}`\n                                          );\n                                        }}\n                                        className=\"dd d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo rel\"\n                                      >\n                                        <Link\n                                          to={`/previewimages/${item.album_id}`}\n                                          className=\"text-decoration-none\"\n                                        >\n                                          {item.album_name}\n                                        </Link>\n                                        <div className=\"d-block search_twoinfoicon\">\n                                          <img\n                                            className=\"w-100 h-100\"\n                                            src={require(\"../assets/images/ms3.png\")}\n                                            alt=\"Album Preview\"\n                                          />\n                                        </div>\n                                        {item.cover_image !== null && (\n                                          <div className=\"lock_image\">\n                                            <MediaRenderer\n                                              className=\"w-100 h-100\"\n                                              url={item.cover_image}\n                                            />\n                                          </div>\n                                        )}\n                                        <p>{t(\"PreviewImages\")}</p>\n                                        <strong>{item.album_name}</strong>\n                                      </div>\n                                    </div>\n                                  );\n                                }\n                              })}\n                            {Array.isArray(ImagesFriends) &&\n                              ImagesFriends.map((image, index) => (\n                                <div className=\"col-12 px-1 desdsd\" key={index}>\n                                  <div className=\"d-block recive_two\">\n                                    <MediaRenderer\n                                      onClick={() => setSelectedImage(image)}\n                                      className=\"w-100 h-100 object-fit-cover\"\n                                      url={image}\n                                    />\n                                  </div>\n                                </div>\n                              ))}\n                            {Array.isArray(VideosFriends) &&\n                              VideosFriends.map((image, index) => (\n                                <div className=\"col-12 px-1 desdsd\" key={index}>\n                                  <div className=\"d-block recive_two\">\n                                    <video\n                                      onClick={() => setSelectedImage(image)}\n                                      controls\n                                      className=\"w-100 h-100 object-fit-cover\"\n                                    >\n                                      <source src={image} type=\"video/mp4\" />\n                                      {t(\"Your_browser_does\")}\n                                    </video>\n                                  </div>\n                                </div>\n                              ))}\n                            {userLogin.id === Number(to_id) && (\n                              <>\n                                {Array.isArray(ImagesFriendsOwn) &&\n                                  ImagesFriendsOwn.map((image, index) => (\n                                    <div\n                                      className=\"col-12 px-1 desdsd\"\n                                      key={index}\n                                    >\n                                      <div className=\"d-block recive_two\">\n                                        <MediaRenderer\n                                          onClick={() =>\n                                            setSelectedImage(image)\n                                          }\n                                          className=\"w-100 h-100 object-fit-cover\"\n                                          url={image}\n                                        />\n                                      </div>\n                                    </div>\n                                  ))}\n                              </>\n                            )}\n                            {userLogin.id === Number(to_id) && (\n                              <>\n                                {Array.isArray(VideosFriendsOwn) &&\n                                  VideosFriendsOwn.map((image, index) => (\n                                    <div\n                                      className=\"col-12 px-1 desdsd\"\n                                      key={index}\n                                    >\n                                      <div className=\"d-block recive_two\">\n                                        <video\n                                          onClick={() =>\n                                            setSelectedImage(image)\n                                          }\n                                          controls\n                                          className=\"w-100 h-100 object-fit-cover\"\n                                        >\n                                          <source\n                                            src={image}\n                                            type=\"video/mp4\"\n                                          />\n                                          {t(\"Your_browser_does\")}\n                                        </video>\n                                      </div>\n                                    </div>\n                                  ))}\n                              </>\n                            )}\n                          </div>\n                        </div>\n                        {userdetail.gender !== \"Couple\" && (\n                          <div className=\"col-12\">\n                            <h4 className=\"mb-2\">{t(\"abouthim\")}</h4>\n                            <ul className=\"revice_type d-flex flex-column gap-3 p-0\">\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Looking_for\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.search_looking_for !== null &&\n                                  userdetail.search_looking_for !== \"\" &&\n                                  userdetail.search_looking_for !== \"null\"\n                                    ? (() => {\n                                        try {\n                                          // Attempt to parse the JSON string\n                                          const parsedValue = JSON.parse(\n                                            userdetail.search_looking_for\n                                          );\n                                          return Array.isArray(parsedValue)\n                                            ? parsedValue.join(\", \") // Join array values with a comma\n                                            : parsedValue; // If not an array, display the value directly\n                                        } catch (error) {\n                                          return \"N/A\"; // Handle parsing errors\n                                        }\n                                      })()\n                                    : \"N/A\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Nationality\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.nationality !== \"null\"\n                                    ? userdetail.nationality\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Bodytype\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.bodytype !== \"null\"\n                                    ? userdetail.bodytype\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Height\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.height_feet !== \"null\"\n                                    ? userdetail.height_feet\n                                    : \"\"}{\" \"}\n                                  {userdetail.height_inches !== \"null\"\n                                    ? userdetail.height_inches\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Sexual_orientation\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.sexual_orientation !== null &&\n                                  userdetail.sexual_orientation !== \"\" &&\n                                  userdetail.sexual_orientation !== \"null\"\n                                    ? (() => {\n                                        try {\n                                          // Attempt to parse the JSON string\n                                          const parsedValue = JSON.parse(\n                                            userdetail.sexual_orientation\n                                          );\n                                          return Array.isArray(parsedValue)\n                                            ? parsedValue.join(\", \") // Join array values with a comma\n                                            : parsedValue; // If not an array, display the value directly\n                                        } catch (error) {\n                                          return \"Invalid data\"; // Handle parsing errors\n                                        }\n                                      })()\n                                    : \"N/A\"}{\" \"}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Relationship_status\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.relationship_status !== \"null\"\n                                    ? userdetail.relationship_status\n                                    : \"\"}{\" \"}\n                                </h6>\n                              </li>\n                            </ul>\n                          </div>\n                        )}\n                        {userdetail.gender === \"Couple\" && (\n                          <div className=\"col-12\">\n                            <h4 className=\"mb-2\">{t(\"abouthim\")}</h4>\n                            <ul className=\"revice_type d-flex flex-column gap-3 p-0\">\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Looking_for\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.search_looking_for !== null &&\n                                  userdetail.search_looking_for !== \"\" &&\n                                  userdetail.search_looking_for !== \"null\"\n                                    ? (() => {\n                                        try {\n                                          // Attempt to parse the JSON string\n                                          const parsedValue = JSON.parse(\n                                            userdetail.search_looking_for\n                                          );\n                                          return Array.isArray(parsedValue)\n                                            ? parsedValue.join(\", \") // Join array values with a comma\n                                            : parsedValue; // If not an array, display the value directly\n                                        } catch (error) {\n                                          return \"N/A\"; // Handle parsing errors\n                                        }\n                                      })()\n                                    : \"N/A\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Nationality\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.nationality !== \"null\"\n                                    ? userdetail.nationality\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Bodytype\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.bodytype !== \"null\"\n                                    ? userdetail.bodytype\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Height\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.height_feet !== \"null\"\n                                    ? userdetail.height_feet\n                                    : \"\"}{\" \"}\n                                  {userdetail.height_inches !== \"null\"\n                                    ? userdetail.height_inches\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Sexual_orientation\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.sexual_orientation !== null &&\n                                  userdetail.sexual_orientation !== \"\" &&\n                                  userdetail.sexual_orientation !== \"null\"\n                                    ? (() => {\n                                        try {\n                                          // Attempt to parse the JSON string\n                                          const parsedValue = JSON.parse(\n                                            userdetail.sexual_orientation\n                                          );\n                                          return Array.isArray(parsedValue)\n                                            ? parsedValue.join(\", \") // Join array values with a comma\n                                            : parsedValue; // If not an array, display the value directly\n                                        } catch (error) {\n                                          return \"Invalid data\"; // Handle parsing errors\n                                        }\n                                      })()\n                                    : \"N/A\"}{\" \"}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Relationship_status\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.relationship_status !== \"null\"\n                                    ? userdetail.relationship_status\n                                    : \"\"}{\" \"}\n                                </h6>\n                              </li>\n                            </ul>\n                          </div>\n                        )}\n                        {userdetail.gender === \"Couple\" && (\n                          <div className=\"col-12\">\n                            <h4 className=\"mb-2\">{t(\"abouther\")}</h4>\n                            <ul className=\"revice_type d-flex flex-column gap-3 p-0\">\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Looking_for\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.search_looking_for_her !== null &&\n                                  userdetail.search_looking_for_her !== \"\" &&\n                                  userdetail.search_looking_for_her !== \"null\"\n                                    ? (() => {\n                                        try {\n                                          // Attempt to parse the JSON string\n                                          const parsedValue = JSON.parse(\n                                            userdetail.search_looking_for_her\n                                          );\n                                          return Array.isArray(parsedValue)\n                                            ? parsedValue.join(\", \") // Join array values with a comma\n                                            : parsedValue; // If not an array, display the value directly\n                                        } catch (error) {\n                                          return \"N/A\"; // Handle parsing errors\n                                        }\n                                      })()\n                                    : \"N/A\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Nationality\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.nationality_her !== \"null\"\n                                    ? userdetail.nationality_her\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Bodytype\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.bodytype_her !== \"null\"\n                                    ? userdetail.bodytype_her\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Height\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.height_feet_her !== \"null\"\n                                    ? userdetail.height_feet_her\n                                    : \"\"}{\" \"}\n                                  {userdetail.height_inches !== \"null\"\n                                    ? userdetail.height_inches\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Sexual_orientation\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.sexual_orientation_her !== null &&\n                                  userdetail.sexual_orientation_her !== \"\" &&\n                                  userdetail.sexual_orientation_her !== \"null\"\n                                    ? (() => {\n                                        try {\n                                          // Attempt to parse the JSON string\n                                          const parsedValue = JSON.parse(\n                                            userdetail.sexual_orientation_her\n                                          );\n                                          return Array.isArray(parsedValue)\n                                            ? parsedValue.join(\", \") // Join array values with a comma\n                                            : parsedValue; // If not an array, display the value directly\n                                        } catch (error) {\n                                          return \"Invalid data\"; // Handle parsing errors\n                                        }\n                                      })()\n                                    : \"N/A\"}{\" \"}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Relationship_status\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.relationship_status_her !== \"null\"\n                                    ? userdetail.relationship_status_her\n                                    : \"\"}{\" \"}\n                                </h6>\n                              </li>\n                            </ul>\n                          </div>\n                        )}\n                        <div className=\"col-12\">\n                          <ul className=\"revice_type d-flex flex-column gap-3 p-0\">\n                            <li>\n                              <h6> {t(\"Member_since\")}: </h6>\n                              <h6 className=\"breaktext\">\n                                {userdetail.created_at &&\n                                userdetail.created_at !== \"\"\n                                  ? new Date(\n                                      userdetail.created_at\n                                    ).toLocaleDateString(\"en-GB\")\n                                  : \"\"}{\" \"}\n                              </h6>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"d-flex justify-content-center recive_main_btn align-items-center\">\n                      <button className=\"report\" onClick={handlereport}>\n                        {t(\"REPORT_USER\")}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Report isOpen={isPopupOpen1} onClose={closePopup1}></Report>\n      </section>\n      <Modal\n        show={Openpassword}\n        className=\"edit_admin\"\n        onHide={handleModalClose}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"newclass\">{t(\"EnterPassword\")}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <form className=\"popup-content\" onSubmit={handleSubmit}>\n            {showPopSuccess && (\n              <span className=\"text-success\">{successPopMessage}</span>\n            )}\n            {showPopError && (\n              <span className=\"text-danger\">{errorPopMessage}</span>\n            )}\n            <div className=\"mb-3\">\n              <label htmlFor=\"username\" className=\"form-label\">\n                {t(\"EnterPasswordtoViewThisAlbum\")}\n              </label>\n              <input\n                type=\"password\"\n                required\n                className=\"form-control\"\n                id=\"username\"\n                name=\"password\"\n                placeholder={t(\"Enterpasswordhere\")}\n              />\n            </div>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleModalClose}>\n                {t(\"Close\")}\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"primary\"\n                className=\"bg-success border-color-none\"\n              >\n                {t(\"Submit\")}\n              </Button>\n            </Modal.Footer>\n          </form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default ReceivedMessagesChat;\n","export default {\n  outline: {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: 24,\n    height: 24,\n    viewBox: '0 0 24 24',\n    fill: 'none',\n    stroke: 'currentColor',\n    strokeWidth: 2,\n    strokeLinecap: 'round',\n    strokeLinejoin: 'round',\n  },\n  filled: {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: 24,\n    height: 24,\n    viewBox: '0 0 24 24',\n    fill: 'currentColor',\n    stroke: 'none',\n  },\n};\n","import { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes';\nimport type { IconNode, IconProps, Icon } from './types';\n\nconst createReactComponent = (\n  type: 'outline' | 'filled',\n  iconName: string,\n  iconNamePascal: string,\n  iconNode: IconNode,\n) => {\n  const Component = forwardRef<Icon, IconProps>(\n    (\n      { color = 'currentColor', size = 24, stroke = 2, title, className, children, ...rest }: IconProps,\n      ref,\n    ) =>\n      createElement(\n        'svg',\n        {\n          ref,\n          ...defaultAttributes[type],\n          width: size,\n          height: size,\n          className: [`tabler-icon`, `tabler-icon-${iconName}`, className].join(' '),\n          ...(type === 'filled'\n            ? {\n                fill: color,\n              }\n            : {\n                strokeWidth: stroke,\n                stroke: color,\n              }),\n          ...rest,\n        },\n        [\n          title && createElement('title', { key: 'svg-title' }, title),\n          ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n          ...(Array.isArray(children) ? children : [children]),\n        ],\n      ),\n  );\n\n  Component.displayName = `${iconNamePascal}`;\n\n  return Component;\n};\n\nexport default createReactComponent;\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'home', 'IconHome', [[\"path\",{\"d\":\"M5 12l-2 0l9 -9l9 9l-2 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v6\",\"key\":\"svg-2\"}]]);"],"names":["Report","_ref","isOpen","onClose","children","uid","selectedFile","setSelectedFile","useState","spinner","setspinner","name","setName","description","setDescription","showPopSuccess","setShowPopSuccess","showPopError","setShowPopError","successPopMessage","setPopsuccessMessage","errorPopMessage","setPoperrorMessage","errorMessage","setErrorMessage","image","setImage","category","setCategory","otherReport","setOtherReport","_jsx","_Fragment","_jsxs","className","onClick","e","target","classList","contains","SuccessPop","message","ErrorPop","action","onSubmit","async","preventDefault","reportData","console","log","storedUsername","localStorage","getItem","formData","user_id","JSON","parse","id","to_id","res","axios","post","apiUrl","headers","Accept","data","result","length","setTimeout","err","response","request","error","for","required","value","onChange","htmlFor","type","placeholder","navigate","useNavigate","seenn","setSeen","arrow","setarrow","showMenu","setShowMenu","isonlyallbumPublic","setisonlyallbumPublic","toggleMenu","index","setShowMenu_Left","refreshNotifications","setRefreshNotifications","inputRef","useRef","Totalcountmessage","setTotalcountmessage","ImagesFriends","setImagesFriends","VideosFriends","setVideosFriends","ImagesFriendsOwn","setImagesFriendsOwn","VideosFriendsOwn","setVideosFriendsOwn","PasswordId","setPasswordId","redirectid","setredirectid","Openpassword","setOpenpassword","chooseallId_left","setchooseallId_left","selectedImage","setSelectedImage","chatEndRef","userblock","setuserblock","AllFriends","setAllFriends","apiUrlProfile","setMessage","userdetail","setuserdetail","messages","setmessages","allmessages","setmessagesall","LoginData","setLoginData","seterror","Isfile","setFiles","setto_id","slug","useParams","isCheckfriend","setCheckfriend","restr_message","setrestr_message","albumdata","setalbumdata","userper","setuserper","isonlyallbum","setisonlyallbum","isonlyallbumfriend","setisonlyallbumfriend","UserDetail","setUserDetail","IdArray","setIdArray","activeIndex","setActiveIndex","searchText","setSearchText","filteredMessages","setFilteredMessages","offset","setOffset","hasMore","setHasMore","loadingMore","setLoadingMore","chatBoxRef","useEffect","userLogin","undefined","getUserDetails","row","respo","getUsercheckPermisson","getCheckfriend","chatsectionUser","checkuserblock","current","scrollIntoView","behavior","block","hanldeseenmessage","getmessageCount","alldata","results","unreadCount","filter","item","read","handleScroll","chatBox","isAtBottom","scrollHeight","scrollTop","clientHeight","formdata","newOffset","newMessages","prevMessages","existingIds","Set","map","msg","filteredNewMessages","has","prev","fetchMessages","handleKeyDown","event","key","window","addEventListener","removeEventListener","updateReadMessagesread","ws","WebSocket","onmessage","receivedMessage","senderId","Number","receiverId","loggedInUserId","includes","setMessageFormessage","chatsectionUserRefresh","setMessageForultiple","getSEndMessagequick","close","form","n","t","Array","isArray","toid","toidd","recid","recidArray","getFileSrc","fileUrl","some","ext","endsWith","trim","requestToview","formDataa","respoo","is_friend","albumid","status","isPopupOpen1","setIsPopupOpen1","useTranslation","savedLanguage","i18n","language","changeLanguage","restrictedWords","apiUrll","get_albumStatusonly","getUserDetailsfetch","album_setting_status","getalbumStatus","String","getAllfriendss","showPicker","setShowPicker","formatTime","dateString","postDate","Date","isNaN","adjustedPostDate","getTime","Intl","DateTimeFormat","timeZone","day","month","year","hour","minute","hour12","format","handledeletemainpopup","deleteev","chooseallId","setchooseallId","showdeletebutton","setshowdeletebutton","selectall","setselectall","handleCloseDeletePopup","handlechooseAll","showMenu_Left","confirmPassword","useralbumid","passid","mediaList","images","videos","forEach","media","file","push","getUserDetailsFriends","getUserDetailsOwn","getUserDetailsfetchUserdata","handleModalClose","get_albumStatusonlyPublic","get_albumStatusonlyfriend","readmessageuser","Headertwo","Link","to","IconHome","stroke","src","ev1","alt","ev2","profile_image","require","username","birthday_date","birthday","birthDate","today","age","getFullYear","monthDifference","getMonth","getDate","calculateAge","location","onInput","searchValue","toLowerCase","filtered","chat","handlesearchmessage","other_id","handleallselect","ref","style","maxHeight","overflow","display","flexWrap","justifyContent","position","role","user1_id","user1_makeImagePrivate","user1_profile","f","fileIndex","fileSrc","HiDotsVertical","cursor","checked","date","download","rel","FaAngleDown","top","left","width","height","backgroundColor","alignItems","zIndex","xmlns","viewBox","fill","strokeWidth","strokeLinecap","strokeLinejoin","d","MediaRenderer","url","maxWidth","borderRadius","objectFit","fontSize","FormData","commentText","currentWordCount","text","split","append","handleSend","selectedFiles","from","files","validFiles","errorFiles","size","prevFiles","focus","KeyboardEvent","code","keyCode","bubbles","dispatchEvent","multiple","EmojiPicker","onEmojiClick","emojiObject","prevMessage","emoji","inputValue","hasRestrictedWord","word","disabled","URL","createObjectURL","_","i","removeImage","profile_image_1","match","controls","profile_image_2","profile_image_3","profile_image_4","uStatus","password_status","album_id","open","album_name","visibility","imgIndex","friend","addToAlbum","cover_image","gender","search_looking_for","parsedValue","join","nationality","bodytype","height_feet","height_inches","sexual_orientation","relationship_status","search_looking_for_her","nationality_her","bodytype_her","height_feet_her","sexual_orientation_her","relationship_status_her","created_at","toLocaleDateString","closePopup1","document","body","overflowY","Modal","show","onHide","Header","closeButton","Title","Body","password","idd","Footer","Button","variant","defaultAttributes","outline","filled","createReactComponent","iconName","iconNamePascal","iconNode","Component","forwardRef","color","title","rest","createElement","_ref2","tag","attrs","displayName"],"sourceRoot":""}