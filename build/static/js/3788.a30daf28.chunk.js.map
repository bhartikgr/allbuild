{"version":3,"file":"static/js/3788.a30daf28.chunk.js","mappings":"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","sources":["components/Rightsidebar.jsx","components/Dashboardnotification.jsx","components/UsergalleryDashboard.jsx","pages/Dashboard.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport user from \"../assets/images/pic.png\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\"; // Make sure i18n is imported properly\nexport const Rightsidebar = ({ refreshRight }) => {\n  var apiUrl2 = \"https://backend.amourette.no/api/profile/\";\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n  const [isshowOnline, setshowOnline] = useState(\"0\");\n  const [isshowMember, setshowMember] = useState(\"0\");\n  const [isshowUser, setshowUser] = useState(\"0\");\n  const [isshowNewMember, setshowMemberNew] = useState(\"0\");\n\n  const [isshowImages, setshowImages] = useState(\"0\");\n  const [isshowGroup, setshowGroups] = useState(\"0\");\n  const [isshowEvent, setshowEvents] = useState(\"0\");\n  const [isshowVisit, setshowVisit] = useState([]);\n  const [notificationsdetail, setnotificationsdetail] = useState([]);\n  useEffect(() => {\n    console.log(\"right\", refreshRight);\n    gettotalGroups();\n    gettotalEvents();\n    gettotalImages();\n  }, [refreshRight]);\n  useEffect(() => {\n    gettotalGroups();\n    gettotalEvents();\n    gettotalImages();\n    //gettotalOnline();\n  }, []);\n  const gettotalGroups = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl2 + \"gettotalGroups\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data;\n      //console.log(respo);\n      setshowGroups(respo.groupsCount);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const gettotalEvents = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl2 + \"gettotalEvents\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data;\n      // console.log(respo);\n      setshowEvents(respo.eventsCount);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const gettotalImages = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl2 + \"gettotalImages\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data;\n      // console.log(respo);\n      setshowImages(respo.totalImages);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  useEffect(() => {\n    getvisitprofile();\n  }, []);\n  const getvisitprofile = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl2 + \"getvisitprofile\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.result;\n      setshowVisit(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    const intervalId = setInterval(async () => {\n      gettotalOnline();\n      gettotalGroups();\n      gettotalEvents();\n      gettotalImages();\n      gettotalNewMembers();\n      gettotalMembers();\n    }, 1500); // Run every 60 seconds\n\n    // Cleanup the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, []);\n\n  const gettotalOnline = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl2 + \"gettotalOnline\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data;\n      // setshowOnline(respo.onlineCount);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    gettotalMembers();\n    gettotaluserss();\n  }, []);\n  const gettotalMembers = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n      looking_forr: [],\n    };\n\n    try {\n      const res = await axios.post(\n        apiUrl + \"getAllMembersPageDashboard\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      var respo = res.data.results;\n      if (respo.length > 0) {\n        const onlineActiveCount = respo.filter(\n          (item) =>\n            item.online_user === \"Online\" && item.online_user_active === \"Yes\"\n        ).length;\n        setshowOnline(onlineActiveCount);\n\n        const now = new Date();\n        const sevenDaysAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000); // 7 days ago\n\n        let totalMembers = respo.length;\n        let last30Days = 0;\n\n        respo.forEach((user) => {\n          const createdAt = new Date(user.created_at);\n\n          if (createdAt >= sevenDaysAgo) {\n            last30Days++;\n          }\n        });\n        setshowMemberNew(last30Days);\n      }\n      setshowMember(respo.length);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const gettotaluserss = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl2 + \"gettotalMembers\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data;\n      console.log(respo);\n      setshowUser(respo.memberCount);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  useEffect(() => {\n    gettotalNewMembers();\n  }, []);\n  const gettotalNewMembers = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl2 + \"gettotalNewMembers\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data;\n      var ress = respo.last7Days;\n      //setshowMemberNew(ress);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    // console.log(\"language\");\n    // console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n\n    //console.log(t(\"LeftMenu_yourprofile\")); // Testing translation\n  }, [i18n, t]);\n  return (\n    <>\n      <div className=\"d-flex flex-column leftbar\">\n        <div className=\"d-flex flex-column  visitedlast\">\n          <h5 className=\"grouptitle mb-3\">{t(\"RightMenu_LastVisited\")}</h5>\n          <div className=\"d-flex flex-column gap-3 scroll_bar visitscroll\">\n            {isshowVisit.length === 0 ? (\n              <p>{t(\"RightMenu_NovisitFound\")}.</p>\n            ) : (\n              isshowVisit.map((visit, index) => (\n                <Link\n                  to={`/friend/${visit.uid}`}\n                  key={index}\n                  className=\"d-flex gap-3 align-items-center listoficons\"\n                >\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"userpic ofit rounded-circle overflow-hidden\">\n                      <img\n                        src={\n                          visit.profile_image\n                            ? visit.profile_image\n                            : require(\"../assets/images/thumb.jpg\")\n                        }\n                        alt=\"userpic\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"flex-grow-1\">\n                    <h4>\n                      <strong>{visit.username}</strong>{\" \"}\n                    </h4>\n                    <h6>{formateTime(visit.date)}</h6>\n                  </div>\n                </Link>\n              ))\n            )}\n          </div>\n          {/* <div className=\"viewmore d-block mt-2\">\n            <Link to=\"/\">View more</Link>\n          </div> */}\n        </div>\n        <hr className=\"linehr\" />\n        <div className=\"d-flex flex-column gap-2\">\n          <h5 className=\"grouptitle mb-3\">{t(\"RightMenu_Statistics\")}</h5>\n          <div className=\"d-flex flex-column gap-3 listnumber\">\n            <div className=\"d-flex justify-content-between\">\n              <h4>{t(\"RightMenu_Onlinenow\")}</h4>\n              <h4>{isshowOnline}</h4>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <h4>{t(\"RightMenu_Newmembers\")}</h4>\n              <h4>{isshowNewMember}</h4>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <h4>{t(\"RightMenu_Images\")}</h4>\n              <h4>{isshowImages}</h4>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <h4>{t(\"RightMenu_Groups\")}</h4>\n              <h4>{isshowGroup}</h4>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <h4>{t(\"RightMenu_Eventsandparties\")}</h4>\n              <h4>{isshowEvent}</h4>\n            </div>\n            <div className=\"d-flex justify-content-between\">\n              <h4>{t(\"RightMenu_Membersintotal\")}</h4>\n              <h4>{isshowMember}</h4>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport pe1 from \"../assets/images/pic.png\";\nimport axios from \"axios\";\nimport { SlOptions } from \"react-icons/sl\";\nimport { Usergallerynotification } from \"../components/Usergallerynotification\";\nimport userpic from \"../assets/images/pic.png\";\nimport { DateTime } from \"luxon\";\nfunction Dashboardnotification({ refresh }) {\n  var apiUrlnoti = \"https://backend.amourette.no/api/notifications/\";\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n  const [AllfriendId, setAllfriendId] = useState([]);\n  const [notificationsdetail, setnotificationsdetail] = useState([]);\n  const [LoginData, setLoginData] = useState(\"\");\n  useEffect(() => {\n    const getAllfriends = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        user_id: userLogin.id,\n      };\n      try {\n        const res = await axios.post(apiUrl + \"getAllfriends\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        var respo = res.data.results;\n        const friendUserIds = respo.map((friend) => friend.id);\n        setAllfriendId(friendUserIds);\n        const galleries = await getnotifications(friendUserIds);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    getAllfriends();\n  }, [refresh, notificationsdetail]);\n\n  const getnotifications = async (userIds) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    const userIdsWithSelf = [...userIds, userLogin.id]; // e.g., [3, 1, 5]\n    const userIdsString = userIdsWithSelf.join(\", \");\n    let formData = {\n      user_ids: userIdsString, // Sending as a string for the query\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrlnoti + \"getnotificationsdashboard\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      var respo = res.data.results;\n      setnotificationsdetail(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Treat input as a Europe/Oslo time (even though it has 'Z')\n    // Remove the 'Z' if it exists\n    const cleanDateString = dateString.replace(/Z$/, \"\");\n\n    // Parse it as if it's Oslo local time (not UTC)\n    const osloTime = DateTime.fromISO(cleanDateString, { zone: \"Europe/Oslo\" });\n\n    if (!osloTime.isValid) {\n      console.error(\"Invalid Oslo Time:\", osloTime.invalidExplanation);\n      return \"Invalid Date\";\n    }\n\n    // Convert to current system's local timezone\n    const localTime = osloTime.setZone(\n      Intl.DateTimeFormat().resolvedOptions().timeZone\n    );\n\n    const userTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n    console.log(osloTime);\n    const now = DateTime.now().setZone(userTimeZone);\n    const localPostTime = localTime.toFormat(\"HH:mm\");\n\n    const diffInMinutes = now.diff(localTime, \"minutes\").minutes;\n    const diffInHours = now.diff(localTime, \"hours\").hours;\n    const diffInDays = now.diff(localTime, \"days\").days;\n    const diffInWeeks = Math.floor(diffInDays / 7);\n    const diffInMonths = Math.floor(diffInDays / 30);\n    const diffInYears = Math.floor(diffInDays / 365);\n\n    if (diffInMinutes < 60) return `${localPostTime}`;\n    if (diffInHours < 24) return `${localPostTime}`;\n    if (Math.floor(diffInDays) === 1) return `Yesterday at ${localPostTime}`;\n    if (diffInDays < 7) return `${Math.floor(diffInDays)}d ${localPostTime}`;\n    if (diffInWeeks < 4) return `${diffInWeeks}w ${localPostTime}`;\n    if (diffInMonths < 12) return `${diffInMonths}m ${localPostTime}`;\n    return `${diffInYears}y ${localPostTime}`;\n  };\n  //Gallery popup\n  const [isPopupOpen1, setIsPopupOpen1] = useState(false);\n  const [seperateGallerydetail, setseperateGallerydetail] = useState(\"\");\n  const [UserDetail, setUserDetail] = useState(\"\");\n  const [GalleryCommets, setGalleryCommets] = useState([]);\n  const [GalleryIdDetailGet, setGalleryIdDetailGet] = useState(\"\");\n  const [nextId, setnextId] = useState(\"\");\n  const [previousId, setpreviousId] = useState(\"\");\n  const closePopup1 = () => {\n    setIsPopupOpen1(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  var apiUrlMember = \"https://backend.amourette.no/api/members/\";\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    setLoginData(userLogin);\n    getUserDetail();\n  }, []);\n  const getUserDetail = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrlMember + \"getUserDetail\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      if (res.data.row.length > 0) {\n        var respo = res.data.row[0];\n        setUserDetail(respo);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getGalleryDetail = async (galleryId) => {\n    console.log(\";ll\");\n    setGalleryIdDetailGet(galleryId);\n    getGalleryComments(galleryId);\n    getGalleryDetailnextprevious(galleryId);\n    let formData = {\n      id: galleryId,\n      user_id: LoginData.id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrlMember + \"getGalleryDetail\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      if (res.data.row.length > 0) {\n        var respo = res.data.row[0];\n        openPopup1();\n        setseperateGallerydetail(respo);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getGalleryDetailnextprevious = async (galleryId) => {\n    let formData = {\n      id: galleryId,\n      user_id: LoginData.id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrlMember + \"getGalleryDetailnextprevious\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n\n      if (res.data.next_gallery_id !== null) {\n        setpreviousId(res.data.next_gallery_id);\n      }\n      if (res.data.previous_gallery_id !== null) {\n        setnextId(res.data.previous_gallery_id);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getUserfav = async () => {\n    getGalleryDetail(GalleryIdDetailGet);\n  };\n  const getCommentPost = async () => {\n    getGalleryDetail(GalleryIdDetailGet);\n  };\n  const getgallerydetialnext = () => {\n    getGalleryDetail(nextId);\n  };\n  const getgallerydetialprev = () => {\n    getGalleryDetail(previousId);\n  };\n  const getGalleryComments = async (g_id) => {\n    let formData = {\n      id: g_id,\n      user_id: LoginData.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getGalleryComments\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      var respo = res.data.results;\n\n      setGalleryCommets(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const openPopup1 = () => {\n    setIsPopupOpen1(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n\n  return (\n    <>\n      <div className=\"d-flex flex-column gap-4 \">\n        <div className=\"d-flex flex-column gap-3\">\n          {notificationsdetail.length === 0 ? ( // Check if there are no notifications\n            <p></p>\n          ) : (\n            <div className=\"d-flex flex-column gap-3\">\n              {notificationsdetail.map((notification, index) => (\n                <div className=\"postblock d-flex flex-column rounded-4 overflow-hidden h-100\">\n                  <div className=\"d-flex justify-content-between align-items-center h-100 px-2 py-1\">\n                    <div className=\"flex-grow-1\">\n                      <Link\n                        to={\n                          notification.link_href?.trim() === \"/previewimages\" &&\n                          notification.post_id &&\n                          notification.image_url\n                            ? `/previewimages/${\n                                notification.post_id\n                              }/${encodeURIComponent(notification.image_url)}`\n                            : notification.link_href?.trim() || \"#\"\n                        }\n                        onClick={(e) => {\n                          const trimmedHref = notification.link_href?.trim();\n\n                          // Handle /allgallery\n                          if (\n                            trimmedHref === \"/allgallery\" &&\n                            notification.post_id\n                          ) {\n                            e.preventDefault();\n                            getGalleryDetail(notification.post_id);\n                          }\n\n                          // Handle /editprofile/viewrequest with redirect\n                          if (trimmedHref === \"/editprofile/viewrequest\") {\n                            e.preventDefault();\n                            window.location.href = \"/editprofile/viewrequest\"; // or use navigate(\"/editprofile/viewrequest\") if using useNavigate from react-router\n                          }\n                        }}\n                        className=\"d-flex gap-3\"\n                        key={index}\n                      >\n                        <div className=\"flex-shrink-0\">\n                          <div className=\"urpic ofit rounded-circle overflow-hidden\">\n                            <img\n                              src={\n                                notification.status === \"Admin\"\n                                  ? require(\"../assets/images/thumb.jpg\")\n                                  : notification.recipient_profile_image || pe1\n                              }\n                              alt=\"userpic\"\n                            />\n                          </div>\n                        </div>\n                        <div className=\"flex-grow-1\">\n                          <h4>\n                            {notification.status === \"User\" && (\n                              <strong>{notification.recipient_name} </strong>\n                            )}\n                            {notification.status === \"Admin\" && (\n                              <strong>Admin </strong>\n                            )}\n                            {notification.message}\n                          </h4>\n\n                          <h5>{formateTime(notification.date)}</h5>\n                        </div>\n                      </Link>\n                    </div>\n                    {/* <div className=\"flex-shrink-0\">\n                      <button type=\"button\" className=\"btnoption\">\n                        <SlOptions />\n                      </button>\n                    </div> */}\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n      </div>\n      <Usergallerynotification\n        isOpen1={isPopupOpen1}\n        onClose1={closePopup1}\n        seperateGallerydetail={seperateGallerydetail}\n        UserDetail={UserDetail}\n        LoginData={LoginData}\n        getUserfav={getUserfav}\n        GalleryCommets={GalleryCommets}\n        getCommentPost={getCommentPost}\n        GalleryIdDetailGet={GalleryIdDetailGet}\n        previousId={previousId}\n        nextId={nextId}\n        getgallerydetialnext={getgallerydetialnext}\n        getgallerydetialprev={getgallerydetialprev}\n      ></Usergallerynotification>\n    </>\n  );\n}\n\nexport default Dashboardnotification;\n","import React, { useState, useRef, useEffect } from \"react\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport { Link } from \"react-router-dom\";\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport { FaChevronLeft } from \"react-icons/fa\";\nimport { FaChevronRight } from \"react-icons/fa\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport SuccessPop from \"../components/SuccessPop\";\nexport const UsergalleryDashboard = ({\n  isOpen1,\n  onClose1,\n  children,\n  seperateGallerydetail,\n  UserDetail,\n  LoginData,\n  getUserfav,\n  GalleryCommets,\n  getCommentPost,\n  GalleryIdDetailGet,\n  galleryData,\n  previousId,\n  nextId,\n  getgallerydetialnext,\n  getgallerydetialprev,\n  postType,\n  postdetail,\n  refreshdiv,\n}) => {\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const chatEndRef = useRef(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isparamVl, setparamVl] = useState(seperateGallerydetail);\n  const [isgallid, setgallid] = useState(GalleryIdDetailGet);\n  const [restr_message, setrestr_message] = useState(false);\n  const [GalleryCommetss, setGalleryCommetss] = useState(GalleryCommets);\n  const { t } = useTranslation();\n  const [input, setInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const [spinnerlik, setspinnerlik] = useState(false);\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  console.log(isparamVl);\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  useEffect(() => {\n    setGalleryCommetss(GalleryCommets);\n    setparamVl(seperateGallerydetail);\n    setgallid(GalleryIdDetailGet);\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView();\n    }\n  }, [GalleryCommets, seperateGallerydetail, GalleryIdDetailGet]);\n\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\"); // Adjust port if needed\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        let gid = \"\";\n\n        if (postType === \"group\") {\n          gid = String(receivedMessage.post_id);\n        } else if (postType === \"gallery\") {\n          gid = String(receivedMessage.gallery_id);\n        } else if (postType === \"forum\") {\n          gid = String(receivedMessage.forum_id);\n        }\n\n        const galleryIdDetail = String(GalleryIdDetailGet); // Convert to string as well\n\n        const log = LoginData.id;\n\n        // Check if gid matches the expected GalleryIdDetailGet\n        if (galleryIdDetail === gid) {\n          if (receivedMessage.event === \"GalleryLike\") {\n            // Update the local state based on the received message\n            setparamVl((prev) => {\n              if (prev.id === receivedMessage.gallery_id) {\n                return {\n                  ...prev,\n                  total_favourites: receivedMessage.total_favourites,\n                  user_favourited:\n                    log === receivedMessage.user_id\n                      ? receivedMessage.user_favourited // Update user_favourited only if IDs match\n                      : prev.user_favourited, // Toggle the favourited state\n                };\n              }\n              return prev;\n            });\n          }\n          if (receivedMessage.event === \"GalleryPost\") {\n            // Update state with the new comment\n            setGalleryCommetss((prevComments) => [\n              ...prevComments,\n              {\n                user_id: receivedMessage.user_id,\n                username: receivedMessage.username,\n                description: receivedMessage.message,\n                profile_image: receivedMessage.profile_image,\n                makeImagePrivate: receivedMessage.makeImagePrivate,\n                date: receivedMessage.date,\n                lastInsertId: receivedMessage.lastInsertId,\n              },\n            ]);\n          }\n          if (receivedMessage.event === \"groupComments\") {\n            // Update state with the new comment\n            setGalleryCommetss((prevComments) => [\n              ...prevComments,\n              {\n                user_id: receivedMessage.post.user_id,\n                username: receivedMessage.post.comment_user_username,\n                description: receivedMessage.post.description,\n                profile_image: receivedMessage.post.comment_user_profile_image,\n                makeImagePrivate: 0,\n                date: receivedMessage.post.comment_date,\n                lastInsertId: \"\",\n              },\n            ]);\n          }\n          if (receivedMessage.event === \"ForumComments\") {\n            setGalleryCommetss((prevComments) => [\n              ...prevComments,\n              {\n                user_id: receivedMessage.user_id,\n                username: receivedMessage.username,\n                description: receivedMessage.description,\n                profile_image: receivedMessage.profile_image,\n                makeImagePrivate: receivedMessage.makeImagePrivate,\n                date: receivedMessage.date,\n                lastInsertId: receivedMessage.lastInsertId,\n              },\n            ]);\n          }\n        } else {\n        }\n      } catch (error) {\n        console.error(\"Failed to parse WebSocket message:\", error);\n        console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [LoginData, GalleryIdDetailGet]);\n  //console.log(GalleryCommets);\n  // Ref to the chat container\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n\n  const [comments, setComments] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const onEmojiClick = (event, emojiObject) => {\n    setInput((prevInput) => prevInput + emojiObject.emoji);\n  };\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"ArrowRight\") {\n        getgallerydetialnext(); // Trigger next post\n      } else if (event.key === \"ArrowLeft\") {\n        getgallerydetialprev(); // Trigger previous post\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup on unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [getgallerydetialnext, getgallerydetialprev]);\n  // Example usage\n\n  const isButtonDisabled = !comments.trim() || restr_message;\n  const handleCommentChange = (e) => {\n    const inputValue = e.target.value;\n\n    // Update the state with the new text (including emojis)\n    setComments(inputValue);\n\n    // If input is completely empty, remove all text and emojis\n    if (inputValue.trim() === \"\") {\n      setComments(\"\");\n    }\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    setrestr_message(hasRestrictedWord);\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const handlePostSubmit = async (e) => {\n    if (e.preventDefault) e.preventDefault(); // Prevent default only if `e` is an actual event\n\n    setspinner(true);\n    if (postType === \"forum\") {\n      let formData = {\n        description: e.description || e.target.description.value,\n        forum_id: e.gallery_id || e.target.gallery_id.value,\n        user_id: LoginData.id,\n        postType: postType,\n      };\n      try {\n        const res = await axios.post(\n          apiUrl + \"forumscommentSaveDashboard\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n            },\n          }\n        );\n        //console.log(res.data);\n        setspinner(false);\n        setComments(\"\");\n        getCommentPost();\n        chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n    if (postType === \"group\") {\n      const apiUrl = \"https://backend.amourette.no/api/groups/\";\n      let formData = {\n        comment: e.description || e.target.description.value,\n        post_id: e.gallery_id || e.target.gallery_id.value,\n        user_id: LoginData.id,\n        postType: postType,\n      };\n      try {\n        const res = await axios.post(\n          apiUrl + \"CreateGroupPostCommentDashboard\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n            },\n          }\n        );\n        //console.log(res.data);\n        setspinner(false);\n        setComments(\"\");\n        getCommentPost();\n        chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n    if (postType === \"gallery\") {\n      let formData = {\n        description: e.description || e.target.description.value,\n        gallery_id: e.gallery_id || e.target.gallery_id.value,\n        user_id: LoginData.id,\n        postType: postType,\n      };\n      try {\n        const res = await axios.post(apiUrl + \"GalleryPostSave\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        //console.log(res.data);\n        setspinner(false);\n        setComments(\"\");\n        getCommentPost();\n        chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n  const galleryPostLike = async (id, pertype) => {\n    let formData = {\n      user_id: LoginData.id,\n      id: id,\n      pertype: pertype,\n    };\n    console.log(formData);\n    setspinnerlik(true);\n    if (pertype === \"gallery\") {\n      try {\n        const res = await axios.post(apiUrl + \"galleryPostLike\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        setspinnerlik(false);\n        getUserfav(\"\");\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n    if (pertype === \"forum\") {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        user_id: userLogin.id,\n        id: id,\n      };\n      try {\n        const res = await axios.post(\n          apiUrl + \"forumlikepostforumpage\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        getUserfav(\"\");\n      } catch (err) {\n        if (err.response) {\n          console.error(\"Response error:\", err.response.data);\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n    if (pertype === \"group\") {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        user_id: userLogin.id,\n        id: id,\n      };\n      try {\n        const res = await axios.post(\n          apiUrl + \"grouplikepostgrouppage\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n        console.log(\"k\");\n        setTimeout(() => {\n          getUserfav(\"\");\n        }, 100);\n      } catch (err) {\n        if (err.response) {\n          console.error(\"Response error:\", err.response.data);\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n\n  // Function to handle next image\n  // Function to handle next image\n\n  // Function to handle previous image\n  const prevImage = (id_id) => {\n    getgallerydetialprev(id_id);\n  };\n  const [showPicker, setShowPicker] = useState(false);\n  const pickerRef = useRef(null); // hold refs for each index\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (pickerRef.current && !pickerRef.current.contains(event.target)) {\n        setShowPicker(false);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, []);\n  const handleEmojiClick = (emojiObject) => {\n    // Append emoji to the existing text\n    setComments((prevMessage) => prevMessage + emojiObject.emoji);\n    setShowPicker(false);\n\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  // Update `isparamVl` when `currentIndex` changes\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        onClose1(); // Close the popup when Escape is pressed\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [onClose1]);\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\" && comments.trim() !== \"\") {\n      e.preventDefault();\n\n      handlePostSubmit({\n        description: comments,\n        gallery_id: seperateGallerydetail.id,\n      });\n    }\n  };\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n  const handledeletebtn = () => {\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want to delete this post\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const refreshpopup = async () => {\n    deletePost();\n  };\n  const deletePost = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let deleteev = {\n      user_id: userLogin.id,\n      id: seperateGallerydetail.id,\n      post_type: postType,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"deletePostDashboard\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      setShowPopSuccess(true);\n      setPopsuccessMessage(\"Post deleted successfully\");\n\n      setisPopupOpen_delete(false);\n      refreshdiv();\n      setTimeout(() => {\n        onClose1();\n        setShowPopSuccess(false);\n      }, 1000);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  // console.log(seperateGallerydetail);\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <AlertDelete\n          isOpen1={isPopupOpen_delete}\n          onClose1={closePopup_delete}\n          message={deleteMessage}\n          onReturnSent={refreshpopup}\n        ></AlertDelete>\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        <div className=\"popup-content col-md-10\">\n          <button\n            className=\"close-button\"\n            style={{ zIndex: \"999\" }}\n            onClick={onClose1}\n          >\n            &times; {/* Close button */}\n          </button>\n\n          <div className=\"usergallery_pop  d-flex flex-column gap-1 h-100\">\n            <button\n              className=\"arrow right\"\n              type=\"button\"\n              onClick={getgallerydetialnext}\n            >\n              <FaChevronRight />\n            </button>\n            <button\n              className=\"arrow left\"\n              type=\"button\"\n              onClick={getgallerydetialprev}\n            >\n              <FaChevronLeft />\n            </button>\n            <div className=\"row p-2 p-md-4\">\n              <div className=\"col-lg-7\">\n                <div className=\"position-relative\">\n                  <div className=\"d-block gallery_im1g \">\n                    {isparamVl.image && typeof isparamVl.image === \"string\" ? (\n                      // Check if the URL ends with a valid image extension\n\n                      <MediaRenderer\n                        className=\"w-100 h-100\"\n                        url={isparamVl.image}\n                      />\n                    ) : (\n                      // Fallback when `item.image` is undefined or invalid\n                      <p>{t(\"No_avalibale_media\")}</p>\n                    )}\n                  </div>\n                  {userLogin.id === isparamVl.user_id && (\n                    <div className=\"flex-shrink-0 posttopbtns\">\n                      <button\n                        title=\"Delete\"\n                        onClick={handledeletebtn}\n                        type=\"button\"\n                        className=\"btn redbtn\"\n                        style={{\n                          padding: \"0px 0px\",\n                          textAlign: \"center\",\n                          minWidth: \"0px\",\n                          background: \"red\",\n                          width: \"40px\",\n                          height: \"40px\",\n                          borderRadius: \"50px\",\n                          position: \"absolute\",\n                          top: \"10px\",\n                          right: \"15px\",\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"icon icon-tabler textcolor icons-tabler-outline icon-tabler-trash\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M4 7l16 0\" />\n                          <path d=\"M10 11l0 6\" />\n                          <path d=\"M14 11l0 6\" />\n                          <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                          <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n                        </svg>\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-lg-5\">\n                <div className=\"d-flex h-100 flex-column justify-content-between gap-1\">\n                  <div className=\"d-flex flex-column gap-1 py-3 bordr-bt\">\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <Link to={`/friend/${isparamVl.uid}`}>\n                        {isparamVl.username}\n                      </Link>\n\n                      <h6>{formateTime(isparamVl.date)}</h6>\n                    </div>\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <p>\n                        {isparamVl &&\n                        isparamVl.description &&\n                        isparamVl.description.length > 150\n                          ? isparamVl.description.substring(0, 150) + \"...\"\n                          : isparamVl?.description ||\n                            \"No description available\"}\n                      </p>\n\n                      <div className=\"d-flex align-items-center gap-3 flex-shrink-0\">\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <button\n                            type=\"button\"\n                            onClick={() =>\n                              galleryPostLike(isparamVl.id, isparamVl.pertype)\n                            }\n                            className=\"liked  fulw j\"\n                          >\n                            {isparamVl.user_favourited ? (\n                              <FaHeart />\n                            ) : (\n                              <FaRegHeart />\n                            )}\n                          </button>\n                          <p className=\"likecount\">\n                            {isparamVl.total_favourites}\n                          </p>\n                        </div>\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <div className=\"d-block like_icon\">\n                            <img\n                              className=\"w-100 h-100\"\n                              src={require(\"../assets/images/comment.png\")}\n                              alt=\"img\"\n                            />\n                          </div>\n                          <p className=\"likecount\">{GalleryCommetss.length}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"d-flex flex-column gap-1\">\n                    <ul className=\"usergallery_msg scroll_bar\">\n                      {GalleryCommetss.length === 0 ? (\n                        <li>{t(\"Nocommentsavailable\")}</li>\n                      ) : (\n                        GalleryCommetss.map((comment, index) => (\n                          <li className=\"gap-3\" key={index}>\n                            <div className=\"profile_img\">\n                              <img\n                                className=\"w-100 h-100\"\n                                src={\n                                  comment.makeImagePrivate === 1\n                                    ? require(\"../assets/images/thumb.jpg\") // Default image if the profile image is private\n                                    : comment.profile_image // Use user's profile image if available\n                                    ? comment.profile_image\n                                    : require(\"../assets/images/image3.png\") // Default image if no profile image\n                                }\n                                alt=\"img\"\n                              />\n                            </div>\n                            <div className=\"comment_text d-flex flex-column gap-1\">\n                              <h6>{comment.username}</h6>{\" \"}\n                              {/* Display the commenter's username */}\n                              <p>{comment.description}</p>{\" \"}\n                              {/* Display the comment text */}\n                            </div>\n                            <p>{formateTime(comment.date)}</p>{\" \"}\n                          </li>\n                        ))\n                      )}\n                      <li ref={chatEndRef} />\n                    </ul>\n                    <form\n                      action=\"javascript:void(0)\"\n                      method=\"post\"\n                      onSubmit={handlePostSubmit}\n                    >\n                      {restr_message && (\n                        <span\n                          className=\"text-danger\"\n                          style={{ fontSize: \"14px\" }}\n                        >\n                          {t(\"Your_message_contain\")}\n                        </span>\n                      )}\n                      <div className=\"d-flex align-items-center gap-3 w-100 usergallery_from\">\n                        <div className=\"comment_input w-100 d-flex align-items-center gap-1\">\n                          {spinner && (\n                            <div\n                              className=\"spinner-border text-success postloader\"\n                              role=\"status\"\n                            >\n                              <span className=\"visually-hidden\"></span>\n                            </div>\n                          )}\n                          <input\n                            type=\"hidden\"\n                            value={seperateGallerydetail.id}\n                            name=\"gallery_id\"\n                          />\n                          <div className=\"emoji-container\">\n                            <button\n                              type=\"button\"\n                              className=\"emoji-button\"\n                              onClick={() => setShowPicker(!showPicker)}\n                            >\n                              😀\n                            </button>\n\n                            {showPicker && (\n                              <div\n                                className=\"emoji-picker\"\n                                ref={pickerRef}\n                                style={{ position: \"absolute\", top: \"64px\" }}\n                              >\n                                <EmojiPicker onEmojiClick={handleEmojiClick} />\n                              </div>\n                            )}\n                          </div>\n                          <input\n                            type=\"text\"\n                            required\n                            ref={inputRef}\n                            name=\"description\"\n                            value={comments} // Controlled input\n                            onChange={handleCommentChange} // Simplified\n                            onKeyDown={handleKeyDown} // Send on Enter Key\n                            placeholder={`${t(\"write_a_comment\")}`}\n                          />\n\n                          <button\n                            type=\"submit\"\n                            disabled={isButtonDisabled} // Disable button if comment is empty\n                            style={{ opacity: isButtonDisabled ? 1 : 1 }}\n                            className=\"comment_postbtn\"\n                          >\n                            {t(\"Post\")}\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Headertwo from \"../components/Headertwo\";\nimport { Leftsidebar } from \"../components/Leftsidebar\";\nimport { Rightsidebar } from \"../components/Rightsidebar\";\nimport Dashboardnotification from \"../components/Dashboardnotification\";\nimport { SlOptions } from \"react-icons/sl\";\nimport { useTranslation } from \"react-i18next\";\nimport \"../i18n\";\nimport { useNavigate } from \"react-router-dom\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport { UsergalleryDashboard } from \"../components/UsergalleryDashboard\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport axios from \"axios\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport { DateTime } from \"luxon\";\nfunction Dashboard() {\n  const chatBoxRef = useRef(null);\n  const loadMoreRef = useRef(null);\n  const navigate = useNavigate();\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [searchheader, setsearchheader] = useState(\"\");\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [refreshNotifications, setRefreshNotifications] = useState(true);\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [postdetail, setPostdetail] = useState([]);\n  const [refreshRight, setrefreshRight] = useState(false);\n  const [AllfriendId, setAllfriendId] = useState([]);\n  const [LoginData, setLoginData] = useState(\"\");\n  const [PostId, setPostId] = useState(\"\");\n  const [rightbarrefresh, setrightbarrefresh] = useState(false);\n  const [seperateGallerydetail, setseperateGallerydetail] = useState(\"\");\n  const [UserDetail, setUserDetail] = useState(\"\");\n  const [GalleryIdDetailGet, setGalleryIdDetailGet] = useState(\"\");\n  const [GalleryCommets, setGalleryCommets] = useState([]);\n  const [nextId, setnextId] = useState(\"\");\n  const [previousId, setpreviousId] = useState(\"\");\n  const [offset, setOffset] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n  const [postindex, setpostindex] = useState(\"\");\n  const [PostType, setPostType] = useState(\"\");\n  const [currentPostIndex, setCurrentPostIndex] = useState(null);\n  const [galleryViewState, setGalleryViewState] = useState({\n    index: 0,\n    type: \"\", // forum or gallery\n  });\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n  const { t, i18n } = useTranslation();\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  var offst = 0;\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\");\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n\n        const storedUsername = localStorage.getItem(\"userLogin\");\n        const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n        if (receivedMessage.event === \"Deletegallery\") {\n          getAllgallery(AllfriendId);\n        }\n        if (receivedMessage.event === \"sendfriendRequest\") {\n          if (receivedMessage.user_id === userLogin.id) {\n            refreshNotifications();\n          }\n        }\n\n        if (receivedMessage.event === \"friendrequestacceptnotification\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.some((user) => user.id === userLogin.id)\n          ) {\n            // Trigger notification on new message\n\n            // Trigger refresh notifications function\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"adminNotification\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.includes(userLogin.id) // Check if current user ID is in the array\n          ) {\n            console.log(\n              \"New notification received for this user:\",\n              receivedMessage.message\n            );\n\n            // Trigger notification on new message\n            // Example: Show a toast notification or update the UI\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"adminEventupdate\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.includes(userLogin.id) // Check if current user ID is in the array\n          ) {\n            console.log(\n              \"New notification received for this user update event:\",\n              receivedMessage.message\n            );\n\n            // Trigger notification on new message\n            // Example: Show a toast notification or update the UI\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"adminEventdelete\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.includes(userLogin.id) // Check if current user ID is in the array\n          ) {\n            console.log(\n              \"New notification delete event:\",\n              receivedMessage.message\n            );\n\n            // Trigger notification on new message\n            // Example: Show a toast notification or update the UI\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"adminEventPostdelete\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.includes(userLogin.id) // Check if current user ID is in the array\n          ) {\n            console.log(\n              \"New notification delete event:\",\n              receivedMessage.message\n            );\n\n            // Trigger notification on new message\n            // Example: Show a toast notification or update the UI\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"adminEventPostCommentEdit\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.includes(userLogin.id) // Check if current user ID is in the array\n          ) {\n            console.log(\n              \"New notification delete event:\",\n              receivedMessage.message\n            );\n\n            // Trigger notification on new message\n            // Example: Show a toast notification or update the UI\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"adminGalleryPostUpdate\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.includes(userLogin.id) // Check if current user ID is in the array\n          ) {\n            console.log(\n              \"New notification delete event:\",\n              receivedMessage.message\n            );\n\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"gallerynotification\") {\n          // Check if user_id is an array and contains a matching userLogin.id\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.some((user) => user.id === userLogin.id)\n          ) {\n            getAllfriendss();\n            setRefreshNotifications(true);\n            // If a match is found, trigger the notification\n            refreshNotifications();\n          }\n        }\n      } catch (error) {}\n    };\n\n    ws.onopen = () => {\n      console.log(\"WebSocket connection established\");\n    };\n\n    ws.onerror = (error) => {\n      console.error(\"WebSocket error:\", error);\n    };\n\n    return () => {\n      ws.close();\n      console.log(\"WebSocket connection closed\");\n    };\n  }, [refreshNotifications]);\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  useEffect(() => {\n    // Check if the username key exists in session storage\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    if (userLogin === null) {\n      window.location.href = \"/login\";\n    }\n  }, []);\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    setLoginData(userLogin);\n    getUserDetail();\n  }, []);\n  const getUserDetail = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getUserDetail\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      if (res.data.row.length > 0) {\n        var respo = res.data.row[0];\n        setUserDetail(respo);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const [showMenu1, setShowMenu1] = useState(false);\n\n  const toggleMenu1 = () => {\n    setShowMenu1(!showMenu1);\n  };\n  const handleclosedeletepopup1 = () => {\n    setShowMenu1(false);\n  };\n\n  const [showMenu, setShowMenu] = useState(null);\n\n  const toggleMenu = (index) => {\n    setShowMenu(showMenu === index ? null : index);\n  };\n  const handleCloseDeletePopup = () => {\n    setShowMenu(false);\n  };\n  const handledeletemainpopup = async (id, type) => {\n    setPostType(type);\n    setPostId(id);\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want to delete this post\");\n  };\n\n  useEffect(() => {\n    getAllfriendss();\n  }, []);\n  const getAllfriendss = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getAllfriends\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      const friendUserIds = respo.map((friend) => friend.id);\n      setAllfriendId(friendUserIds);\n\n      const galleries = await getAllgallery(friendUserIds);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getAllgallery = async (userIds) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    const userIdsWithSelf = [...userIds, userLogin.id]; // e.g., [3, 1, 5]\n    const userIdsString = userIdsWithSelf.join(\", \");\n    let formData = {\n      user_ids: userIdsString, // Sending as a string for the query\n      user_id: userLogin.id, // Sending as a string for the query\n      offset: 0,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"getdashboardpost\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      console.log(respo);\n      setPostdetail(respo);\n      //setrefreshRight((refreshRight) => !refreshRight);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Treat input as a Europe/Oslo time (even though it has 'Z')\n    // Remove the 'Z' if it exists\n    const cleanDateString = dateString.replace(/Z$/, \"\");\n\n    // Parse it as if it's Oslo local time (not UTC)\n    const osloTime = DateTime.fromISO(cleanDateString, { zone: \"Europe/Oslo\" });\n\n    if (!osloTime.isValid) {\n      console.error(\"Invalid Oslo Time:\", osloTime.invalidExplanation);\n      return \"Invalid Date\";\n    }\n\n    // Convert to current system's local timezone\n    const localTime = osloTime.setZone(\n      Intl.DateTimeFormat().resolvedOptions().timeZone\n    );\n\n    const userTimeZone = Intl.DateTimeFormat().resolvedOptions().timeZone;\n\n    console.log(osloTime);\n    const now = DateTime.now().setZone(userTimeZone);\n    const localPostTime = localTime.toFormat(\"HH:mm\");\n\n    const diffInMinutes = now.diff(localTime, \"minutes\").minutes;\n    const diffInHours = now.diff(localTime, \"hours\").hours;\n    const diffInDays = now.diff(localTime, \"days\").days;\n    const diffInWeeks = Math.floor(diffInDays / 7);\n    const diffInMonths = Math.floor(diffInDays / 30);\n    const diffInYears = Math.floor(diffInDays / 365);\n\n    if (diffInMinutes < 60) return `${localPostTime}`;\n    if (diffInHours < 24) return `${localPostTime}`;\n    if (Math.floor(diffInDays) === 1) return `Yesterday at ${localPostTime}`;\n    if (diffInDays < 7) return `${Math.floor(diffInDays)}d ${localPostTime}`;\n    if (diffInWeeks < 4) return `${diffInWeeks}w ${localPostTime}`;\n    if (diffInMonths < 12) return `${diffInMonths}m ${localPostTime}`;\n    return `${diffInYears}y ${localPostTime}`;\n  };\n\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const refreshpopup = async () => {\n    deletePost();\n  };\n  const deletePost = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let deleteev = {\n      user_id: userLogin.id,\n      id: PostId,\n      post_type: PostType,\n    };\n    if (PostType !== \"\") {\n      try {\n        const res = await axios.post(apiUrl + \"deletePostDashboard\", deleteev, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        setShowPopSuccess(true);\n        setPopsuccessMessage(\"Post deleted successfully\");\n        getAllgallery(AllfriendId);\n        setisPopupOpen_delete(false);\n        setShowMenu(null);\n        setTimeout(() => {\n          setShowPopSuccess(false);\n        }, 1000);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n  const getGalleryDetail = async (galleryId, type, index = \"\") => {\n    setGalleryIdDetailGet(galleryId);\n    getGalleryComments(galleryId, type);\n    setGalleryViewState({ index, type });\n    setpostindex(index);\n    // getGalleryDetailnextprevious(galleryId);\n    setPostType(type);\n    let formData = {\n      id: galleryId,\n      user_id: LoginData.id,\n      post_type: type,\n    };\n    //console.log(formData);\n    try {\n      const res = await axios.post(\n        apiUrl + \"getGalleryGroupforumDetail\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      //console.log(res.data);\n      if (res.data.row.length > 0) {\n        var respo = res.data.row[0];\n        openPopup1();\n        setseperateGallerydetail(respo);\n        setCurrentPostIndex(index);\n        //console.log(postdetail);\n        setseperateGallerydetail(postdetail[index]);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getGalleryDetailnextprevious = async (galleryId) => {\n    let formData = {\n      id: galleryId,\n      user_id: LoginData.id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"getGalleryDetailnextprevious\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n\n      if (res.data.next_gallery_id !== null) {\n        setpreviousId(res.data.next_gallery_id);\n      }\n      if (res.data.previous_gallery_id !== null) {\n        setnextId(res.data.previous_gallery_id);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getGalleryComments = async (g_id, type) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      id: g_id,\n      user_id: userLogin.id,\n      post_type: type,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"getGalleryCommentsDashboard\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n\n      var respo = res.data.results;\n\n      setGalleryCommets(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const [isPopupOpen1, setIsPopupOpen1] = useState(false);\n  const getUserfav = async () => {\n    //getGalleryComments(GalleryIdDetailGet, galleryViewState.type);\n    // getGalleryDetail(\n    //   GalleryIdDetailGet,\n    //   galleryViewState.type,\n    //   galleryViewState.index\n    // );\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      id: GalleryIdDetailGet,\n      type: galleryViewState.type,\n      user_id: userLogin.id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"getGallerlikedislike\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      console.log(res.data);\n      if (res.data.results.length > 0) {\n        setseperateGallerydetail(res.data.results[0]);\n        // const updatedPost = res.data.results?.[0];\n        const updatedPost = res.data.results?.[0];\n        setPostdetail((prev) =>\n          prev.map((p) => (p.id === updatedPost.id ? updatedPost : p))\n        );\n        // setseperateGallerydetail(res.data.results[0]);\n        // setCurrentPostIndex(postindex);\n        // setseperateGallerydetail(postdetail[postindex]);\n      }\n    } catch (err) {\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getCommentPost = async () => {\n    // getGalleryDetail(\n    //   GalleryIdDetailGet,\n    //   galleryViewState.type,\n    //   galleryViewState.index\n    // );\n    let formData = {\n      id: GalleryIdDetailGet,\n      type: galleryViewState.type,\n    };\n    console.log(formData, \"kk\");\n    try {\n      const res = await axios.post(\n        apiUrl + \"getGallerforumgroupcomment\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      // console.log(res.data.results);\n      if (res.data.results.length > 0) {\n        //  setseperateGallerydetail(res.data.results[0]);\n        const updatedPost = res.data.results?.[0];\n        setPostdetail((prev) =>\n          prev.map((p) => (p.id === updatedPost.id ? updatedPost : p))\n        );\n      }\n    } catch (err) {\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getgallerydetialnext = () => {\n    if (currentPostIndex < postdetail.length - 1) {\n      //setIsPopupOpen1(false);\n      const nextIndex = currentPostIndex + 1;\n      const nextPost = postdetail[nextIndex];\n\n      getGalleryDetail(nextPost.id, nextPost.pertype, nextIndex); // get post_type directly\n    }\n  };\n  const getgallerydetialprev = () => {\n    if (currentPostIndex > 0) {\n      setCurrentPostIndex(currentPostIndex - 1);\n      const nextIndex = currentPostIndex - 1;\n      const nextPost = postdetail[nextIndex];\n      //console.log(nextPost);\n      getGalleryDetail(nextPost.id, nextPost.pertype, nextIndex);\n    }\n  };\n  const openPopup1 = () => {\n    setIsPopupOpen1(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n  useEffect(() => {\n    // Ensure the postdetail exists and fetch data for the current index\n    if (postdetail.length > 0 && postdetail[currentPostIndex]) {\n      const currentPost = postdetail[currentPostIndex];\n      console.log(PostType);\n      console.log(currentPostIndex);\n      console.log(currentPost.id);\n      getGalleryDetail(currentPost.id, PostType, currentPostIndex);\n    }\n  }, [currentPostIndex]); // Ensure to watch both currentPostIndex and postdetail\n\n  const closePopup1 = () => {\n    setIsPopupOpen1(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const handleScroll = async () => {\n    const chatBox = chatBoxRef.current;\n    const isAtBottom =\n      chatBox.scrollHeight - chatBox.scrollTop <= chatBox.clientHeight + 7;\n    console.log(isAtBottom);\n  };\n  const fetchdata = async (offset) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    const userIdsWithSelf = [...AllfriendId, userLogin.id];\n    const userIdsString = userIdsWithSelf.join(\", \");\n\n    let formData = {\n      user_ids: userIdsString,\n      user_id: userLogin.id,\n      offset: offset,\n    };\n\n    console.log(\"Fetching with offset:\", offset);\n\n    try {\n      const res = await axios.post(apiUrl + \"getdashboardpost\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      const newMessages = res.data.results;\n\n      setPostdetail((prevMessages) => {\n        const existingIds = new Set(prevMessages.map((msg) => msg.id));\n        const filteredNewMessages = newMessages.filter(\n          (msg) => !existingIds.has(msg.id)\n        );\n\n        // ✅ Update offset here\n        if (filteredNewMessages.length > 0) {\n          setOffset((prevOffset) => prevOffset + filteredNewMessages.length);\n        } else {\n          setHasMore(false); // No more records to fetch\n        }\n\n        return [...prevMessages, ...filteredNewMessages];\n      });\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Server error:\", err.response.data);\n      } else if (err.request) {\n        console.error(\"No response:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const observer = new IntersectionObserver(\n      (entries) => {\n        if (entries[0].isIntersecting && hasMore && !loadingMore) {\n          console.log(offset);\n          fetchdata(offset);\n        }\n      },\n      { threshold: 1.0 }\n    );\n\n    if (loadMoreRef.current) {\n      observer.observe(loadMoreRef.current);\n    }\n\n    return () => {\n      if (loadMoreRef.current) {\n        observer.unobserve(loadMoreRef.current);\n      }\n    };\n  }, [offset, hasMore, loadingMore]);\n  const refreshdiv = () => {\n    getAllgallery(AllfriendId);\n  };\n  return (\n    <>\n      <Headertwo refreshNotifications={refreshNotifications} />\n      <AlertDelete\n        isOpen1={isPopupOpen_delete}\n        onClose1={closePopup_delete}\n        message={deleteMessage}\n        onReturnSent={refreshpopup}\n      ></AlertDelete>\n      {showPopSuccess && <SuccessPop message={successPopMessage} />}\n      <section className=\"dashbox d-block\">\n        <div className=\"container-lg\">\n          <div className=\"row justify-content-between\">\n            <div className=\"col-lg-3 col-xl-3 sidefixedbox sticky-top scroll_bar d-none d-lg-block\">\n              <Leftsidebar />\n            </div>\n\n            <div className=\"col-lg-5 col-xl-6\">\n              <div className=\"d-flex flex-column gap-3\">\n                <h1 className=\"grouptitle mb-1\">{t(\"Friends_activity\")}</h1>\n\n                {postdetail.length === 0 ? (\n                  <div className=\"postblock d-flex flex-column rounded-4 overflow-hidden h-100 p-2\">\n                    <h2>{t(\"No_activity\")}</h2>\n                  </div>\n                ) : (\n                  // Access only the first item in the array\n                  <div\n                    className=\"postblock d-flex flex-column rounded-4 overflow-hidden\"\n                    key={0}\n                  >\n                    <div className=\"d-flex justify-content-between align-items-center px-2 py-1\">\n                      <div className=\"flex-grow-1\">\n                        <Link\n                          to=\"javascript:void(0)\"\n                          className=\"d-flex gap-2 align-items-center\"\n                        >\n                          <div className=\"flex-shrink-0\">\n                            <div className=\"urpic ofit rounded-circle overflow-hidden ssd\">\n                              <Link\n                                to={`/friend/${postdetail[0].user_id}`}\n                                target=\"_blank\"\n                              >\n                                {postdetail && postdetail[0] ? (\n                                  // Check if it's an image or video based on file extension\n                                  <MediaRenderer url={postdetail[0].uimage} />\n                                ) : (\n                                  <p></p> // In case postdetail is not available\n                                )}\n                              </Link>\n                            </div>\n                          </div>\n                          <div className=\"flex-grow-1\">\n                            {/* Conditionally render the text based on formattedTime */}\n                            {formateTime(postdetail[0].date) === \"Just now\" ? (\n                              <Link\n                                to={`/friend/${postdetail[0].user_id}`}\n                                target=\"_blank\"\n                              >\n                                {postdetail[0].username} {t(\"Just_post\")}\n                              </Link>\n                            ) : (\n                              <Link\n                                to={`/friend/${postdetail[0].user_id}`}\n                                target=\"_blank\"\n                              >\n                                {postdetail[0].username}\n                              </Link>\n                            )}\n                            <h5>{formateTime(postdetail[0].date)} </h5>\n                          </div>\n                        </Link>\n                      </div>\n                      {userLogin.id === postdetail[0].user_id && (\n                        <div className=\"flex-shrink-0 position-relative\">\n                          <button\n                            type=\"button\"\n                            onClick={toggleMenu1}\n                            className=\"btnoption\"\n                          >\n                            <SlOptions />\n                          </button>\n                          {showMenu1 && (\n                            <ul className=\"popup-menu\">\n                              <li\n                                onClick={() =>\n                                  handledeletemainpopup(\n                                    postdetail[0].id,\n                                    postdetail[0].pertype\n                                  )\n                                }\n                              >\n                                {t(\"Delete\")}\n                              </li>\n\n                              <li onClick={handleclosedeletepopup1}>Cancel</li>\n                            </ul>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                    <Link\n                      onClick={() =>\n                        getGalleryDetail(\n                          postdetail[0].id,\n                          postdetail[0].pertype,\n                          0\n                        )\n                      }\n                      to=\"javascript:void(0)\"\n                      className=\"imgblock ofit rounded-3 overflow-hidden mt-2\"\n                    >\n                      <MediaRenderer\n                        className=\"w-100 h-100\"\n                        url={postdetail[0].image}\n                      />\n                    </Link>\n                  </div>\n                )}\n                <Dashboardnotification refresh={refreshNotifications} />\n                <div className=\"d-flex flex-column gap-3\" ref={chatBoxRef}>\n                  {postdetail.length === 0 ? (\n                    <h2></h2>\n                  ) : (\n                    postdetail.slice(1).map((item, index) => {\n                      // Start from index 1\n                      const formattedTime = formateTime(item.date); // Get the formatted time\n                      return (\n                        <div\n                          className=\"postblock d-flex flex-column rounded-4 h-100 overflow-hidden \"\n                          key={index}\n                        >\n                          <div className=\"d-flex justify-content-between align-items-center h-100 px-2 py-1\">\n                            <div className=\"flex-grow-1\">\n                              <Link\n                                to=\"javascript:void(0)\"\n                                className=\"d-flex gap-2 align-items-center\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"urpic ofit rounded-circle overflow-hidden\">\n                                    <Link\n                                      to={`/friend/${item.user_id}`}\n                                      target=\"_blank\"\n                                    >\n                                      <img src={item.uimage} alt=\"userpic\" />\n                                    </Link>\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  {/* Conditionally render the text based on formattedTime */}\n                                  {formattedTime === \"Just now\" ? (\n                                    <Link\n                                      to={`/friend/${item.user_id}`}\n                                      target=\"_blank\"\n                                    >\n                                      {item.username} {t(\"Justpostedanewphoto\")}\n                                    </Link>\n                                  ) : (\n                                    <Link\n                                      to={`/friend/${item.user_id}`}\n                                      target=\"_blank\"\n                                    >\n                                      {item.username}\n                                    </Link>\n                                  )}\n                                  <h5>{formattedTime}</h5>\n                                </div>\n                              </Link>\n                            </div>\n                            {userLogin.id === item.user_id && (\n                              <div className=\"flex-shrink-0 position-relative\">\n                                <button\n                                  type=\"button\"\n                                  onClick={() => toggleMenu(index)}\n                                  onTouchStart={() => toggleMenu(index)}\n                                  className=\"btnoption\"\n                                >\n                                  <SlOptions />\n                                </button>\n                                {showMenu === index && ( // Check if menu is open for this post\n                                  <ul className=\"popup-menu\">\n                                    <li\n                                      onClick={() =>\n                                        handledeletemainpopup(\n                                          item.id,\n                                          item.pertype\n                                        )\n                                      }\n                                      onTouchStart={() =>\n                                        handledeletemainpopup(\n                                          item.id,\n                                          item.pertype\n                                        )\n                                      }\n                                    >\n                                      {t(\"Delete\")}\n                                    </li>\n\n                                    <li\n                                      onTouchStart={handleCloseDeletePopup}\n                                      onClick={handleCloseDeletePopup}\n                                    >\n                                      {t(\"Cancel\")}\n                                    </li>\n                                  </ul>\n                                )}\n                              </div>\n                            )}\n                          </div>\n                          <Link\n                            onTouchStart={() =>\n                              getGalleryDetail(item.id, item.pertype, index + 1)\n                            }\n                            onClick={() =>\n                              getGalleryDetail(item.id, item.pertype, index + 1)\n                            }\n                            to=\"javascript:void(0)\"\n                            className=\"imgblock ofit rounded-3 overflow-hidden mt-2\"\n                          >\n                            <MediaRenderer\n                              className=\"w-100 h-100\"\n                              url={item.image}\n                            />\n                          </Link>\n                        </div>\n                      );\n                    })\n                  )}\n                  <div ref={loadMoreRef}></div>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-3 col-xl-3 sidefixedbox sticky-top scroll_bar d-none d-lg-block\">\n              <Rightsidebar refreshRight={refreshRight} />\n            </div>\n          </div>\n        </div>\n      </section>\n      <UsergalleryDashboard\n        isOpen1={isPopupOpen1}\n        onClose1={closePopup1}\n        seperateGallerydetail={seperateGallerydetail}\n        UserDetail={UserDetail}\n        LoginData={LoginData}\n        getUserfav={getUserfav}\n        GalleryCommets={GalleryCommets}\n        getCommentPost={getCommentPost}\n        GalleryIdDetailGet={GalleryIdDetailGet}\n        previousId={postdetail[currentPostIndex - 1]?.id}\n        nextId={postdetail[currentPostIndex + 1]?.id}\n        getgallerydetialnext={getgallerydetialnext}\n        getgallerydetialprev={getgallerydetialprev}\n        postType={PostType}\n        postdetail={postdetail}\n        refreshdiv={refreshdiv}\n      ></UsergalleryDashboard>\n    </>\n  );\n}\n\nexport default Dashboard;\n"],"names":["Rightsidebar","_ref","refreshRight","apiUrl2","isshowOnline","setshowOnline","useState","isshowMember","setshowMember","isshowUser","setshowUser","isshowNewMember","setshowMemberNew","isshowImages","setshowImages","isshowGroup","setshowGroups","isshowEvent","setshowEvents","isshowVisit","setshowVisit","notificationsdetail","setnotificationsdetail","useEffect","console","log","gettotalGroups","gettotalEvents","gettotalImages","async","storedUsername","localStorage","getItem","formData","user_id","JSON","parse","id","respo","axios","post","headers","Accept","data","groupsCount","err","response","request","eventsCount","totalImages","getvisitprofile","result","intervalId","setInterval","gettotalOnline","gettotalNewMembers","gettotalMembers","clearInterval","gettotaluserss","looking_forr","apiUrl","results","length","onlineActiveCount","filter","item","online_user","online_user_active","now","Date","sevenDaysAgo","getTime","last30Days","forEach","user","created_at","memberCount","last7Days","formateTime","dateString","postDate","isNaN","error","adjustedPostDate","osloPostTime","Intl","DateTimeFormat","timeZone","hour","minute","hour12","format","timeDiff","seconds","Math","floor","minutes","hours","days","weeks","months","years","t","useTranslation","savedLanguage","i18n","language","changeLanguage","_jsx","_Fragment","children","_jsxs","className","map","visit","index","Link","to","uid","src","profile_image","require","alt","username","date","refresh","AllfriendId","setAllfriendId","LoginData","setLoginData","friendUserIds","friend","getnotifications","message","getAllfriends","userLogin","user_ids","userIds","join","apiUrlnoti","cleanDateString","replace","osloTime","DateTime","fromISO","zone","isValid","invalidExplanation","localTime","setZone","resolvedOptions","userTimeZone","localPostTime","toFormat","diffInMinutes","diff","diffInHours","diffInDays","diffInWeeks","diffInMonths","diffInYears","isPopupOpen1","setIsPopupOpen1","seperateGallerydetail","setseperateGallerydetail","UserDetail","setUserDetail","GalleryCommets","setGalleryCommets","GalleryIdDetailGet","setGalleryIdDetailGet","nextId","setnextId","previousId","setpreviousId","apiUrlMember","getUserDetail","res","row","getGalleryDetail","galleryId","getGalleryComments","getGalleryDetailnextprevious","openPopup1","next_gallery_id","previous_gallery_id","g_id","document","body","style","overflowY","notification","_notification$link_hr","_notification$link_hr2","link_href","trim","post_id","image_url","encodeURIComponent","onClick","e","_notification$link_hr3","trimmedHref","preventDefault","window","location","href","status","recipient_profile_image","pe1","recipient_name","Usergallerynotification","isOpen1","onClose1","closePopup1","getUserfav","getCommentPost","getgallerydetialnext","getgallerydetialprev","UsergalleryDashboard","galleryData","postType","postdetail","refreshdiv","successPopMessage","setPopsuccessMessage","showPopSuccess","setShowPopSuccess","isPopupOpen_delete","setisPopupOpen_delete","deleteMessage","setdeleteMessage","chatEndRef","useRef","currentIndex","setCurrentIndex","isparamVl","setparamVl","isgallid","setgallid","restr_message","setrestr_message","GalleryCommetss","setGalleryCommetss","input","setInput","inputRef","spinnerlik","setspinnerlik","current","scrollIntoView","ws","WebSocket","onmessage","event","receivedMessage","gid","String","gallery_id","forum_id","galleryIdDetail","prev","total_favourites","user_favourited","prevComments","description","makeImagePrivate","lastInsertId","comment_user_username","comment_user_profile_image","comment_date","close","comments","setComments","spinner","setspinner","handleKeyDown","key","addEventListener","removeEventListener","isButtonDisabled","restrictedWords","handlePostSubmit","target","value","behavior","comment","showPicker","setShowPicker","pickerRef","handleClickOutside","contains","deletePost","deleteev","post_type","setTimeout","classList","AlertDelete","closePopup_delete","onReturnSent","SuccessPop","zIndex","type","FaChevronRight","FaChevronLeft","image","MediaRenderer","url","title","handledeletebtn","padding","textAlign","minWidth","background","width","height","borderRadius","position","top","right","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","substring","pertype","galleryPostLike","FaHeart","FaRegHeart","ref","action","method","onSubmit","fontSize","role","name","EmojiPicker","onEmojiClick","emojiObject","prevMessage","emoji","focus","required","onChange","inputValue","hasRestrictedWord","some","word","toLowerCase","includes","onKeyDown","placeholder","disabled","opacity","_postdetail","_postdetail2","chatBoxRef","loadMoreRef","useNavigate","searchheader","setsearchheader","refreshNotifications","setRefreshNotifications","setPostdetail","setrefreshRight","PostId","setPostId","rightbarrefresh","setrightbarrefresh","offset","setOffset","hasMore","setHasMore","loadingMore","setLoadingMore","postindex","setpostindex","PostType","setPostType","currentPostIndex","setCurrentPostIndex","galleryViewState","setGalleryViewState","getAllgallery","Array","isArray","getAllfriendss","onopen","onerror","showMenu1","setShowMenu1","showMenu","setShowMenu","toggleMenu","handleCloseDeletePopup","handledeletemainpopup","arguments","undefined","currentPost","observer","IntersectionObserver","entries","isIntersecting","newMessages","prevMessages","existingIds","Set","msg","filteredNewMessages","has","prevOffset","fetchdata","threshold","observe","unobserve","Headertwo","Leftsidebar","uimage","toggleMenu1","SlOptions","handleclosedeletepopup1","Dashboardnotification","slice","formattedTime","onTouchStart","_res$data$results","updatedPost","p","_res$data$results2","nextIndex","nextPost"],"sourceRoot":""}