{"version":3,"file":"static/js/1818.ab33d188.chunk.js","mappings":"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","sources":["components/Createnewgrouppost.jsx","components/GroupPostComment.jsx","components/GroupInviteFriend.jsx","components/Editgroup.jsx","components/GroupMediaLikeComment.jsx","pages/Singlegroup.jsx","../node_modules/@tabler/icons-react/src/icons/IconUserPlus.ts"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nexport const Createnewgrouppost = ({\n  isOpen,\n  onClose,\n  children,\n  groupId,\n  LoginData,\n  reSetPost,\n}) => {\n  var apiUrl = \"https://backend.amourette.no/api/groups/\";\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const [restr_message, setrestr_message] = useState(false);\n  const [fileType, setFileType] = useState(\"\");\n  const [videoUrl, setVideoUrl] = useState(\"\");\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  if (!isOpen) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose(); // Close the popup if the overlay is clicked\n    }\n  };\n  const MAX_FILE_SIZE = 25 * 1024 * 1024; // 2 MB\n  const handleImageChange = async (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const isImage = file.type.startsWith(\"image/\");\n      const isVideo = file.type.startsWith(\"video/\");\n\n      if (!isImage && !isVideo) {\n        setError(\"Please upload a valid image or video file.\");\n        setImage(null);\n        return;\n      }\n\n      let processedFile = file;\n\n      // Only convert unsupported image types (not jpg, jpeg, png, gif) to PNG\n      const supportedImageTypes = [\n        \"image/jpeg\",\n        \"image/jpg\",\n        \"image/png\",\n        \"image/gif\",\n      ];\n      if (isImage && !supportedImageTypes.includes(file.type)) {\n        try {\n          processedFile = await convertToPng(file);\n        } catch (error) {\n          setError(\"Failed to convert image to PNG.\");\n          setImage(null);\n          return;\n        }\n      }\n\n      if (processedFile.size > MAX_FILE_SIZE) {\n        setError(\"File size must be less than 5 MB.\");\n        setImage(null);\n        return;\n      }\n\n      setError(\"\");\n      setImage(processedFile);\n      setFileType(isImage ? \"image\" : \"video\");\n\n      if (isVideo) {\n        // const resizedVideoUrl = await resizeVideo(file);\n        // setVideoUrl(resizedVideoUrl);\n      }\n    }\n  };\n  const convertToPng = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = (e) => {\n        const img = new Image();\n        img.onload = () => {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = img.width;\n          canvas.height = img.height;\n\n          const ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(img, 0, 0);\n\n          canvas.toBlob(\n            (blob) => {\n              if (blob) {\n                const pngFile = new File(\n                  [blob],\n                  file.name.replace(/\\.\\w+$/, \".png\"),\n                  { type: \"image/png\", lastModified: Date.now() }\n                );\n                resolve(pngFile);\n              } else {\n                reject(new Error(\"Canvas conversion failed\"));\n              }\n            },\n            \"image/png\",\n            1\n          );\n        };\n        img.onerror = reject;\n        img.src = e.target.result;\n      };\n\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setspinner(true);\n    const formData = new FormData();\n    formData.append(\"description\", description);\n    formData.append(\"image\", image);\n    formData.append(\"group_id\", groupId);\n    formData.append(\"user_id\", LoginData.id);\n    formData.append(\"fileType\", \"groupspost\");\n    try {\n      const res = await axios.post(apiUrl + \"createGroupPost\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form\", // Ensure the content type is JSON\n        },\n      });\n      console.log(res.status);\n      setspinner(false);\n      if (res.status === 200) {\n        setShowPopSuccess(true);\n        setPopsuccessMessage(\"Post created successfully\");\n        console.log(\"Submission successful:\", res.data);\n        // Reset the form fields\n        reSetPost();\n        setTimeout(() => {\n          setShowPopSuccess(false);\n          setPopsuccessMessage(\"\");\n          onClose();\n        }, 800);\n        setDescription(\"\");\n        setImage(null);\n        setError(\"\");\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        // console.error(\"Request data:\", err.request);\n      } else {\n        //console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const isButtonDisabled = (!description.trim() && !image) || restr_message;\n  const handleCommentChange = (e) => {\n    const inputValue = e.target.value;\n    setDescription(inputValue);\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    if (hasRestrictedWord) {\n      setrestr_message(true);\n    } else {\n      setrestr_message(false);\n    }\n  };\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"gallery_pop  d-flex flex-column gap-4\">\n            <h3> {`${t(\"create_post\")}`}</h3>\n            {restr_message && (\n              <span className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                {`${t(\"Your_message_contain\")}`}\n              </span>\n            )}\n            <form\n              action=\"javascript:void(0)\"\n              method=\"post\"\n              onSubmit={handleSubmit}\n            >\n              <div className=\"row gy-3 align-items-end\">\n                <div className=\"col-12\">\n                  <textarea\n                    rows=\"8\"\n                    placeholder={`${t(\"what_do_you_think\")}`}\n                    value={description}\n                    onChange={handleCommentChange}\n                  ></textarea>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"uploadfile rel bgload\">\n                    <input\n                      type=\"file\"\n                      required\n                      accept=\"image/*,video/mp4,video/webm,video/ogg\"\n                      className=\"fileload\"\n                      name=\"image\"\n                      onChange={handleImageChange}\n                    />\n                    <div className=\"upload_image\">\n                      {/* Show image preview */}\n                      {fileType === \"image\" && image && (\n                        <img\n                          className=\"w-100 h-100\"\n                          src={URL.createObjectURL(image)}\n                          alt=\"Selected Image\"\n                        />\n                      )}\n\n                      {/* Show video preview */}\n                      {fileType === \"video\" && image && (\n                        <video className=\"w-100 h-100\" controls>\n                          <source\n                            src={videoUrl || URL.createObjectURL(image)}\n                            type=\"video/mp4\"\n                          />\n                          {t(\"Your_browser_does\")}\n                        </video>\n                      )}\n                    </div>\n                    <div className=\"inload\" style={{ height: \"100px\" }}>\n                      <div>\n                        <BsCloudUpload style={{ fontSize: \"24px\" }} />\n                        <h3 style={{ fontSize: \"14px\" }}>{`${t(\n                          \"upload_image\"\n                        )}`}</h3>\n                      </div>\n                      {error && <p style={{ color: \"red\" }}>{error}</p>}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  {spinner && (\n                    <div\n                      className=\"spinner-border text-success date-load\"\n                      role=\"status\"\n                    >\n                      <span className=\"visually-hidden\">\n                        {`${t(\"loading\")}`}...\n                      </span>\n                    </div>\n                  )}\n                  <button\n                    type=\"submit\"\n                    disabled={isButtonDisabled} // Disable button if comment is empty\n                    style={{ opacity: isButtonDisabled ? 0.8 : 1 }}\n                  >\n                    {`${t(\"POST\")}`}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport chat from \"../assets/images/chatpost.png\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport axios from \"axios\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport image1 from \"../assets/images/image1.jfif\";\nimport image2 from \"../assets/images/image2.jfif\";\nimport image3 from \"../assets/images/image4.jfif\";\nimport image4 from \"../assets/images/image5.jfif\";\nimport image5 from \"../assets/images/angular.jpg\";\nimport image6 from \"../assets/images/image3.png\";\nimport { useTranslation } from \"react-i18next\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport i18n from \"../i18n\";\nimport EmojiPicker from \"emoji-picker-react\";\nexport const GroupPostComment = ({\n  isGrouppost,\n  LoginData,\n  Isgroupfav,\n  commentSectionRefresh,\n  getpostCommentrefresh,\n}) => {\n  const apiUrl = \"https://backend.amourette.no/api/groups/\";\n  const commentRefs = useRef([]); // Ref to manage scroll to the last comment\n  const inputRef = useRef({});\n  const [commentInputs, setCommentInputs] = useState(\n    Array(isGrouppost.length).fill(\"\")\n  );\n  const [showPopError, setShowPopError] = useState(false);\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const MAX_WORDS = 2000;\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const [postId, setpostId] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(1);\n  const openModal = () => setModalOpen(true);\n  const closeModal = () => {\n    setimage(null); // Close the modal by setting imagess to null\n  };\n  const [imagess, setimage] = useState(null);\n  const [restrictedStates, setRestrictedStates] = useState([]); // To track restricted word status for each input\n\n  const [restr_message, setrestr_message] = useState(false);\n  const [comments, setComments] = useState(Array(isGrouppost.length).fill([])); // Initialize comments state\n  const images = [\n    {\n      src: image1,\n      wideSrc: image1,\n      alt: \"Nature\",\n    },\n    {\n      src: image2,\n      wideSrc: image3,\n      alt: \"Snow\",\n    },\n    {\n      src: image4,\n      wideSrc: image5,\n      alt: \"Mountains\",\n    },\n    {\n      src: image6,\n      wideSrc: image6,\n      alt: \"Lights\",\n    },\n    {\n      src: image1,\n      wideSrc: image1,\n      alt: \"Nature\",\n    },\n    {\n      src: image2,\n      wideSrc: image3,\n      alt: \"Snow\",\n    },\n    {\n      src: image4,\n      wideSrc: image5,\n      alt: \"Mountains\",\n    },\n    {\n      src: image6,\n      wideSrc: image6,\n      alt: \"Lights\",\n    },\n  ];\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const showSlide = (n) => {\n    if (n > images.length) setCurrentSlideIndex(1);\n    else if (n < 1) setCurrentSlideIndex(images.length);\n    else setCurrentSlideIndex(n);\n  };\n  useEffect(() => {\n    if (modalOpen) {\n      // Disable scrolling when modal is open\n      document.body.style.overflowY = \"hidden\";\n    } else {\n      // Enable scrolling when modal is closed\n      document.body.style.overflowY = \"auto\";\n    }\n\n    // Cleanup to restore the overflow style when the component unmounts\n    return () => {\n      document.body.style.overflowY = \"auto\";\n    };\n  }, [modalOpen]);\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\"); // Adjust port if needed\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        console.log(\"New WebSocket message:\", receivedMessage);\n\n        if (receivedMessage.event === \"groupComments\") {\n          commentSectionRefresh();\n        }\n        if (receivedMessage.event === \"groupfav\") {\n          console.log(\"aaaaaa\");\n\n          commentSectionRefresh();\n        }\n      } catch (error) {\n        console.error(\"Failed to parse WebSocket message:\", error);\n        console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [isGrouppost, LoginData]);\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n\n  const handleChangeHeart = async (postid, group_id) => {\n    let formData = {\n      user_id: LoginData.id,\n      post_id: postid,\n      group_id: group_id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"GrouppostFavourite\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      commentSectionRefresh();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleCommentChange = (e, index) => {\n    const inputValue = e.target.value;\n\n    setCommentInputs((prev) => ({\n      ...prev,\n      [index]: inputValue, // Ensure updating only specific input\n    }));\n\n    // Check for restricted words for the specific input\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    // Update the restriction state for this input\n    setRestrictedStates((prev) => ({\n      ...prev,\n      [index]: hasRestrictedWord,\n    }));\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const countWords = (text) => {\n    return text.trim() ? text.split(/\\s+/).length : 0; // Count words by splitting on whitespace\n  };\n  const handlePostComment = async (index, postId, group_id) => {\n    const commentText = commentInputs[index]?.trim();\n    const currentWordCount = countWords(commentText);\n    if (currentWordCount < 2000) {\n      if (commentText) {\n        const formData = {\n          post_id: postId,\n          user_id: LoginData.id,\n          group_id: group_id,\n          comment: commentText, // Use trimmed comment\n        };\n\n        try {\n          const res = await axios.post(\n            apiUrl + \"CreateGroupPostComment\",\n            formData,\n            {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n            }\n          );\n\n          console.log(\"Comment posted:\", res.data);\n\n          // ✅ Reset only the specific input field after posting\n          setCommentInputs((prev) => ({\n            ...prev,\n            [index]: \"\", // Reset only this comment field\n          }));\n\n          setTimeout(() => {\n            scrollToLastComment();\n          }, 100);\n\n          Isgroupfav(); // Refresh comment section\n        } catch (err) {\n          console.error(\"Error posting comment:\", err);\n        }\n      }\n    } else {\n      setShowPopError(true);\n      setPoperrorMessage(\n        `Comment cannot exceed ${MAX_WORDS} words. Currently: ${currentWordCount} words.`\n      );\n      setTimeout(() => {\n        setShowPopError(false);\n        setPoperrorMessage(\"\");\n      }, 1500);\n    }\n  };\n\n  const scrollToLastComment = () => {\n    // if (commentRefs.current.length > 0) {\n    //   const lastCommentIndex = commentRefs.current.length - 1;\n    //   const lastComment = commentRefs.current[lastCommentIndex];\n    //   if (lastComment) {\n    //     lastComment.scrollIntoView({ behavior: \"smooth\", block: \"end\" });\n    //   }\n    // }\n  };\n  const handlegroupPostDeleteconfirm = async (id) => {\n    setpostId(id);\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want delete this post\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const handlegroupPostDelete = async () => {\n    let formData = {\n      id: postId,\n      user_id: LoginData.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"grouppostDelete\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      setisPopupOpen_delete(false);\n      getpostCommentrefresh();\n    } catch (err) {\n      console.error(\"Error posting comment:\", err);\n    }\n  };\n  const refreshpopup = async () => {\n    handlegroupPostDelete();\n  };\n  const [showPicker, setShowPicker] = useState({}); // Ensure it's an object\n\n  const handleEmojiClick = (emojiObject, index) => {\n    const inputEl = inputRef.current[index];\n    if (!inputEl) return;\n\n    // Get current value, ensuring it's a string\n    const currentValue = commentInputs[index] || \"\";\n\n    // Insert emoji at the current cursor position\n    const startPos = inputEl.selectionStart || currentValue.length;\n    const endPos = inputEl.selectionEnd || currentValue.length;\n    const newValue =\n      currentValue.substring(0, startPos) +\n      emojiObject.emoji +\n      currentValue.substring(endPos);\n\n    setCommentInputs((prev) => ({\n      ...prev,\n      [index]: newValue, // Ensure the index key is properly set\n    }));\n\n    // Move cursor after the inserted emoji\n    setTimeout(() => {\n      inputEl.selectionStart = inputEl.selectionEnd =\n        startPos + emojiObject.emoji.length;\n      inputEl.focus();\n    }, 0);\n\n    // Close emoji picker\n    setShowPicker((prev) => ({\n      ...prev,\n      [index]: false,\n    }));\n  };\n\n  const toggleEmojiPicker = (index) => {\n    setShowPicker((prev) => ({\n      ...prev,\n      [index]: !prev[index], // Toggle the specific index\n    }));\n  };\n  const handleKeyDown = (e, index, postId, groupId) => {\n    if (e.key === \"Enter\" && commentInputs[index]?.trim() !== \"\") {\n      e.preventDefault();\n      handlePostComment(index, postId, groupId);\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        closeModal();\n      }\n    };\n\n    // Attach event listener\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup event listener on unmount\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n  console.log(imagess);\n  return (\n    <div>\n      <AlertDelete\n        isOpen1={isPopupOpen_delete}\n        onClose1={closePopup_delete}\n        message={deleteMessage}\n        onReturnSent={refreshpopup}\n      ></AlertDelete>\n      {showPopError && <ErrorPop message={errorPopMessage} />}\n      <div className=\"d-flex flex-column gap-3\">\n        {isGrouppost.length > 0 ? (\n          isGrouppost.map((post, index) => (\n            <div className=\"evname d-block\" key={index}>\n              <div className=\"d-flex flex-column gap-2\">\n                <div className=\"d-flex gap-2 align-items-center\">\n                  <div className=\"flex-shrink-0\">\n                    <div className=\"evephoto ofit rounded-circle overflow-hidden\">\n                      <Link to={`/friend/${post.uid}`} target=\"_blank\">\n                        {post.profile_image && post.makeImagePrivate === 0 ? (\n                          <img src={post.profile_image} alt=\"Selected\" />\n                        ) : (\n                          <img\n                            src={require(\"../assets/images/thumb.jpg\")}\n                            alt=\"Profile\"\n                          />\n                        )}\n                      </Link>\n                    </div>\n                  </div>\n                  <div className=\"flex-grow-1\">\n                    <div className=\"d-flex flex-column gap-1 evettimeheaing\">\n                      <Link to={`/friend/${post.uid}`} target=\"_blank\">\n                        {post.username} {t(\"createdagroup\")}\n                      </Link>\n\n                      <h5>{formateTime(post.date)}</h5>\n                    </div>\n                  </div>\n                  {LoginData.id === post.user_id && (\n                    <div className=\"flex-shrink-0 posttopbtns\">\n                      <button\n                        title=\"Delete\"\n                        type=\"button\"\n                        onClick={() => handlegroupPostDeleteconfirm(post.id)}\n                        className=\"btn redbtn\"\n                        style={{\n                          padding: \"0px 0px\",\n                          textAlign: \"center\",\n                          minWidth: \"0px\",\n                          background: \"red\",\n                          width: \"40px\",\n                          height: \"40px\",\n                          borderRadius: \"50px\",\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"icon icon-tabler textcolor icons-tabler-outline icon-tabler-trash\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M4 7l16 0\" />\n                          <path d=\"M10 11l0 6\" />\n                          <path d=\"M14 11l0 6\" />\n                          <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                          <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n                        </svg>\n                      </button>\n                    </div>\n                  )}\n                </div>\n                <div className=\"d-block contpost\">\n                  <p>{post.description}</p>\n                </div>\n                {post.file && (\n                  <div className=\"postimgfull ofit rounded-2 overflow-hidden\">\n                    <MediaRenderer\n                      url={post.file}\n                      onClick={() => {\n                        setimage(post.file);\n                      }}\n                    />\n                  </div>\n                )}\n                <div className=\"d-flex justify-content-end\">\n                  <div className=\"d-flex gap-3 postchatheart\">\n                    <div className=\"d-flex align-items-center gap-3\">\n                      <button type=\"button\" className=\"btn fulw\">\n                        <img src={chat} alt=\"chatpic\" />\n                      </button>\n                      <p>{post.post.length}</p>\n                    </div>\n                    <div className=\"d-flex align-items-center gap-3\">\n                      <button\n                        type=\"button\"\n                        onClick={() =>\n                          handleChangeHeart(post.id, post.group_id)\n                        }\n                        className=\"liked btn fulw\"\n                      >\n                        {post.fav ? <FaHeart /> : <FaRegHeart />}\n                      </button>\n                      <p>{post.fav_count}</p>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"comment_input d-flex flex-column gap-3\">\n                  <ul className=\"p-0 comment_section scroll_bar d-flex flex-column gap-2\">\n                    {/* Displaying comments from state */}\n                    {post.post.length > 0 ? (\n                      post.post.map((comm, index) => (\n                        <li\n                          className=\"d-flex align-items-start gap-2\"\n                          key={index}\n                          ref={(el) => (commentRefs.current[index] = el)}\n                        >\n                          <Link\n                            to={`/friend/${comm.comt_uid}`}\n                            target=\"_blank\"\n                            className=\"d-block user_profile\"\n                          >\n                            {comm.comment_user_profile_image &&\n                            comm.comment_makeImagePrivate === 0 ? (\n                              <img\n                                className=\"w-100 h-100\"\n                                src={comm.comment_user_profile_image}\n                                alt=\"eventspic\"\n                              />\n                            ) : (\n                              <img\n                                className=\"w-100 h-100\"\n                                src={require(\"../assets/images/thumb.jpg\")}\n                                alt=\"eventspic\"\n                              />\n                            )}\n                          </Link>\n                          <div className=\"d-flex flex-column gap-1\">\n                            <div className=\"d-flex align-items-center gap-3\">\n                              <Link\n                                to={`/friend/${comm.comt_uid}`}\n                                target=\"_blank\"\n                                className=\"textcolor\"\n                              >\n                                {comm.comment_user_username}{\" \"}\n                              </Link>\n                              <span className=\"comment_time\">\n                                {formateTime(comm.comment_date)}\n                              </span>\n                            </div>\n                            <p className=\"comment_user scroll_bar\">\n                              {comm.description}\n                            </p>\n                          </div>\n                        </li>\n                      ))\n                    ) : (\n                      <p className=\"fs-6\">{t(\"Nocommentsavailable\")}.</p>\n                    )}\n                  </ul>\n                  {restrictedStates[index] && (\n                    <span className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                      {t(\"Your_message_contain\")}\n                    </span>\n                  )}\n                  <div className=\"d-flex align-items-center gap-2\">\n                    <div className=\"emoji-container\">\n                      <button\n                        type=\"button\"\n                        className=\"emoji-button\"\n                        onClick={() => toggleEmojiPicker(index)}\n                      >\n                        😀\n                      </button>\n\n                      {showPicker[index] && (\n                        <div className=\"emoji-picker\">\n                          <EmojiPicker\n                            onEmojiClick={(emojiObject) =>\n                              handleEmojiClick(emojiObject, index)\n                            }\n                          />\n                        </div>\n                      )}\n                    </div>\n                    <input\n                      type=\"text\"\n                      name=\"comment\"\n                      placeholder={t(\"EnterYourComment\")}\n                      value={commentInputs[index] || \"\"}\n                      onChange={(e) => handleCommentChange(e, index)}\n                      onKeyDown={(e) =>\n                        handleKeyDown(e, index, post.id, post.group_id)\n                      }\n                      ref={(el) => (inputRef.current[index] = el)} // Store reference for each input\n                    />\n                    <button\n                      type=\"submit\"\n                      onClick={() =>\n                        handlePostComment(index, post.id, post.group_id)\n                      }\n                      disabled={\n                        !commentInputs[index]?.trim() || restrictedStates[index]\n                      } // Disable button if input is empty or has restricted words\n                      style={{\n                        opacity:\n                          !commentInputs[index]?.trim() ||\n                          restrictedStates[index]\n                            ? 1\n                            : 1,\n                      }}\n                      className=\"comment_postbtn\"\n                    >\n                      {t(\"Post\")}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p>{t(\"Nopostsavailable\")}</p>\n        )}\n      </div>\n      {imagess && (\n        <div\n          className=\"p-5\"\n          style={{\n            position: \"fixed\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\",\n            backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            zIndex: 989898,\n          }}\n          onClick={closeModal} // Close when clicked outside\n        >\n          <div className=\"rel d-block h-100\">\n            <button type=\"button\" className=\"closebtnpic\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width={24}\n                height={24}\n                viewBox=\"0 0 24 24\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                strokeWidth={2}\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                className=\"icon icon-tabler icons-tabler-outline icon-tabler-x\"\n              >\n                <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                <path d=\"M18 6l-12 12\" />\n                <path d=\"M6 6l12 12\" />\n              </svg>\n            </button>\n            <MediaRenderer\n              className=\"w-100 h-100 object-fit-cover\"\n              url={imagess}\n              style={{\n                maxWidth: \"100%\",\n                maxHeight: \"100%\",\n                borderRadius: \"10px\",\n                height: \"85vh\",\n                objectFit: \"contain\",\n              }}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GroupPostComment;\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nexport const GroupInviteFriend = ({\n  isOpen1,\n  onClose1,\n  children,\n  friends,\n  LoginData,\n  groupId,\n  groupdetail,\n  onInvitesSent,\n}) => {\n  const [selectedFriends, setSelectedFriends] = useState([]);\n  const [invMessage, setinvMessage] = useState(\"\");\n  var apiUrl = \"https://backend.amourette.no/api/groups/\";\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n  const handleCheckboxChange = (userId) => {\n    setSelectedFriends((prevSelected) => {\n      if (prevSelected.includes(userId)) {\n        // If already selected, remove from selectedFriends\n        return prevSelected.filter((id) => id !== userId);\n      } else {\n        // If not selected, add to selectedFriends\n        return [...prevSelected, userId];\n      }\n    });\n  };\n  const handleInviterequest = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n\n    let formData = {\n      friendIds: selectedFriends,\n      user_id: LoginData.id,\n      groupId: groupId,\n    };\n    console.log(formData);\n    // Append selected friend IDs to formData\n\n    try {\n      const response = await axios.post(apiUrl + \"sendGroupinvite\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      setinvMessage(\"Invites sent successfully\");\n      setSelectedFriends([]);\n      onInvitesSent();\n      setTimeout(() => {\n        setinvMessage(\"\");\n      }, 1500);\n      console.log(\"Invites sent successfully:\", response.data);\n    } catch (error) {\n      console.error(\"Error sending invites:\", error);\n      // Optionally handle error (e.g., show an error message)\n    }\n  };\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose1}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"invite_pop  gallery_pop d-flex flex-column gap-4\">\n            <div className=\"d-flex flex-column gap-2\">\n              <h3>{`${t(\"invite_a_member\")}`}</h3>\n              <p className=\"invite_text\">{groupdetail.description}</p>\n            </div>\n            <form\n              action=\"javascript:void(0)\"\n              onSubmit={handleInviterequest}\n              method=\"post\"\n            >\n              <div className=\"row gy-3 align-items-end\">\n                <div className=\"col-12\">\n                  <ul className=\"invite_list scroll_bar p-0\">\n                    {friends.length > 0 ? (\n                      friends.map((friend, index) => (\n                        <li key={index}>\n                          <div className=\"d-flex align-items-center gap-3\">\n                            <div className=\"invite_profile\">\n                              {friend.profile_image ? ( // Display the image URL if available\n                                <img\n                                  className=\"w-100 h-100 object-fit-cover\"\n                                  src={friend.profile_image} // Use the URL created from the file\n                                  alt=\"Selected\"\n                                />\n                              ) : (\n                                <img\n                                  className=\"w-100 h-100 object-fit-cover\"\n                                  src={require(\"../assets/images/thumb.jpg\")} // If it's an image URL from the profile\n                                  alt=\"Profile\"\n                                />\n                              )}\n                            </div>\n                            <h4>{friend.username}</h4>{\" \"}\n                            {/* Display the friend's username */}\n                          </div>\n                          <div className=\"listbox d-flex justify-content-center\">\n                            <label className=\"cbox\">\n                              <input\n                                type=\"checkbox\"\n                                onChange={() => handleCheckboxChange(friend.id)} // Handle checkbox change\n                                checked={selectedFriends.includes(friend.id)} // Check if this friend is selected\n                                name=\"makeImagePrivate\"\n                              />\n                              <span className=\"checkmark\"></span>\n                            </label>\n                          </div>\n                        </li>\n                      ))\n                    ) : (\n                      <li className=\"invite_text\">\n                        <p>{`${t(\"No_friend_ab\")}`}.</p>{\" \"}\n                        {/* Message when there are no friends */}\n                      </li>\n                    )}\n                  </ul>\n                </div>\n                {invMessage !== \"\" && (\n                  <p className=\"invite_text text-success\">{invMessage}</p>\n                )}\n                <div className=\"col-12\">\n                  {friends.length > 0 ? (\n                    <button\n                      type=\"submit\"\n                      className={selectedFriends.length === 0 ? \"opa\" : \"\"}\n                      disabled={selectedFriends.length === 0}\n                    >\n                      {`${t(\"SEND_INVITE\")}`}\n                    </button>\n                  ) : (\n                    <p>{`${t(\"No_friend_ab\")}`}</p> // Optional message when there are no friends\n                  )}\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\n\nimport SuccessPop from \"../components/SuccessPop\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\n\nexport const Editgroup = ({\n  isOpen,\n  onClose,\n  children,\n  LoginData,\n  groupId,\n  groupdetail,\n}) => {\n  var apiUrl = \"https://backend.amourette.no/api/groups/\";\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [makeImageUse, setMakeImageUse] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [spinner, setspinner] = useState(false);\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [showPopError, setShowPopError] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [fileType, setFileType] = useState(\"\");\n  const [videoUrl, setVideoUrl] = useState(\"\"); // for resized video\n  const [restr_message, setrestr_message] = useState(\"\");\n  const [previewImage, setPreviewImage] = useState(\"\");\n  const { t } = useTranslation();\n  const [makePrivateUse, setmakePrivateUse] = useState(false);\n  const [GroupData, setGroupData] = useState({\n    name: \"\",\n    description: \"\",\n  });\n  useEffect(() => {\n    if (groupdetail) {\n      setName(groupdetail.name);\n      setDescription(groupdetail.description);\n      setGroupData({\n        name: groupdetail.name,\n        description: groupdetail.description,\n      });\n      setMakeImageUse(groupdetail.makeImageUse || false);\n      if (groupdetail.image) {\n        setSelectedFile(null); // Reset selectedFile if editing\n        setPreviewImage(groupdetail.image);\n      }\n      // Ensure that the value is correctly parsed into a Date object\n    }\n  }, [groupdetail]);\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n\n  if (!isOpen) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose(); // Close the popup if the overlay is clicked\n    }\n  };\n\n  const MAX_FILE_SIZE = 25 * 1024 * 1024; // 2 MB\n  const handleFileChange = async (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an image or video\n      const isImage = file.type.startsWith(\"image/\");\n      const isVideo = file.type.startsWith(\"video/\");\n\n      if (!isImage && !isVideo) {\n        setErrorMessage(\"Please upload a valid image or video file.\");\n        setSelectedFile(null);\n        return;\n      }\n\n      // Check file size\n      if (file.size > MAX_FILE_SIZE) {\n        setErrorMessage(\"File size must be less than 5 MB.\");\n        setSelectedFile(null);\n        return;\n      }\n      setPreviewImage(\"\");\n      // Clear previous error messages\n      setErrorMessage(\"\");\n      setSelectedFile(file);\n      setFileType(isImage ? \"image\" : \"video\");\n\n      if (isVideo) {\n        //const resizedVideoUrl = await resizeVideo(file);\n        // setVideoUrl(resizedVideoUrl);\n      }\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Create a FormData object to handle file upload\n    setspinner(true);\n    try {\n      console.log(selectedFile);\n      if (selectedFile !== null) {\n        const formData = new FormData();\n        formData.append(\"name\", name);\n\n        formData.append(\"groupId\", groupId);\n        formData.append(\"description\", description);\n        formData.append(\"image\", selectedFile);\n        formData.append(\"user_id\", LoginData.id);\n        formData.append(\"fileType\", \"groups\");\n        formData.append(\"previewImage\", previewImage);\n        formData.append(\"makeImageUse\", makeImageUse);\n        const response = await axios.post(apiUrl + \"groupEditfile\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        });\n        setspinner(false);\n        setShowPopSuccess(true);\n        setPopsuccessMessage(response.data.message);\n        window.location.replace(`/group/${response.data.slug}`);\n        setTimeout(() => {\n          setShowPopError(false);\n          setShowPopSuccess(false);\n\n          // Reload the page after changing the URL\n          window.location.reload();\n          onClose();\n        }, 800);\n\n        setImage(null);\n        setName(\"\");\n        setDescription(\"\");\n        setMakeImageUse(false);\n        setSelectedFile(null);\n        // Close the popup after submission\n      } else {\n        const formData = new FormData();\n        formData.append(\"name\", name);\n\n        formData.append(\"groupId\", groupId);\n        formData.append(\"description\", description);\n        formData.append(\"image\", selectedFile);\n        formData.append(\"user_id\", LoginData.id);\n        formData.append(\"fileType\", \"groups\");\n        formData.append(\"previewImage\", previewImage);\n        formData.append(\"makeImageUse\", makeImageUse);\n        const response = await axios.post(apiUrl + \"groupEdit\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        setspinner(false);\n        setShowPopSuccess(true);\n        setPopsuccessMessage(response.data.message);\n        window.location.replace(`/group/${response.data.slug}`);\n        setTimeout(() => {\n          setShowPopError(false);\n          setShowPopSuccess(false);\n\n          // Reload the page after changing the URL\n          window.location.reload();\n          onClose();\n        }, 800);\n\n        setImage(null);\n        setName(\"\");\n        setDescription(\"\");\n        setMakeImageUse(false);\n        setSelectedFile(null);\n        // Close the popup after submission\n      }\n    } catch (error) {\n      setspinner(false);\n      setShowPopError(true);\n      setTimeout(() => {\n        setShowPopError(false);\n        onClose();\n      }, 800);\n      setPoperrorMessage(\"Error creating esssvent:\", error);\n    }\n  };\n  const handleInputChange = (e) => {\n    const inputValue = e.target.value;\n    setName(inputValue);\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    if (hasRestrictedWord) {\n      setrestr_message(true);\n    } else {\n      setrestr_message(false);\n    }\n  };\n  const handleInputChangedescription = (e) => {\n    const inputValue = e.target.value;\n    setDescription(inputValue);\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    if (hasRestrictedWord) {\n      setrestr_message(true);\n    } else {\n      setrestr_message(false);\n    }\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        {showPopError && <ErrorPop message={errorPopMessage} />}\n        <div className=\"popup-content col-md-4\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"cneventup  d-flex flex-column gap-4\">\n            <h3>{t(\"edit_group\")}</h3>\n            <form\n              onSubmit={handleSubmit}\n              action=\"javascript:void(0)\"\n              method=\"post\"\n            >\n              <div className=\"row gy-4\">\n                <div className=\"col-md-6\">\n                  <div className=\"uploadfile rel bgload\">\n                    <input\n                      type=\"file\"\n                      name=\"image\"\n                      className=\"fileload\"\n                      onChange={handleFileChange}\n                      required={!previewImage} // Required only if no existing image\n                    />\n                    <div className=\"upload_image\">\n                      {/* Show Existing Image */}\n                      {previewImage && (\n                        <img\n                          className=\"w-100 h-100\"\n                          src={previewImage}\n                          alt=\"Selected Image\"\n                        />\n                      )}\n\n                      {/* Show Selected Image Preview */}\n                      {selectedFile && fileType === \"image\" && (\n                        <img\n                          className=\"w-100 h-100\"\n                          src={URL.createObjectURL(selectedFile)}\n                          alt=\"Selected Image\"\n                        />\n                      )}\n\n                      {/* Show Video Preview */}\n                      {fileType === \"video\" && selectedFile && (\n                        <video className=\"w-100 h-100\" controls>\n                          <source\n                            src={URL.createObjectURL(selectedFile)}\n                            type=\"video/mp4\"\n                          />\n                          {t(\"Your_browser_does\")}\n                        </video>\n                      )}\n                    </div>\n                    <div className=\"inload\" style={{ height: \"100px\" }}>\n                      <div>\n                        <BsCloudUpload style={{ fontSize: \"24px\" }} />\n                        <h3 style={{ fontSize: \"14px\" }}>\n                          {t(\"UPLOADIMAGE_Video\")} *\n                        </h3>\n                      </div>\n                    </div>\n                    {errorMessage && (\n                      <p className=\"text-danger\">{errorMessage}</p>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <input\n                    type=\"text\"\n                    placeholder={`${t(\"Group_name\")} *`}\n                    name=\"name\"\n                    required\n                    value={name}\n                    onChange={handleInputChange}\n                  />\n                </div>\n                <div className=\"col-12\">\n                  <textarea\n                    rows=\"5\"\n                    placeholder={`${t(\"Group_description\")} *`}\n                    name=\"description\"\n                    value={description}\n                    onChange={handleInputChangedescription}\n                  ></textarea>\n                </div>\n                {restr_message && (\n                  <span className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                    {t(\"Your_message_contain\")}\n                  </span>\n                )}\n                <div className=\"col-12\">\n                  <div className=\"listbox\">\n                    <label className=\"cbox\">\n                      {t(\"Make_private\")}\n                      <input\n                        type=\"checkbox\"\n                        checked={makeImageUse}\n                        onChange={(e) => setMakeImageUse(e.target.checked)}\n                        name=\"makeImagePrivate\"\n                      />\n                      <span className=\"checkmark\"></span>\n                    </label>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  {spinner && (\n                    <div className=\"spinner-border text-success\" role=\"status\">\n                      <span className=\"visually-hidden\">{t(\"Loading\")}...</span>\n                    </div>\n                  )}\n                  <button type=\"submit\">{t(\"edit_group\")}</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport { Link } from \"react-router-dom\";\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport { FaChevronLeft } from \"react-icons/fa\";\nimport { FaChevronRight } from \"react-icons/fa\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport SuccessPop from \"../components/SuccessPop\";\n\nexport const GroupMediaLikeComment = ({\n  isOpen1,\n  onClose1,\n  GroupPostDataPopup,\n  GrouppostCommentGet,\n  getrefreshComment,\n  favSectionRefresh,\n  gotoNext,\n  gotoprev,\n  validPosts,\n}) => {\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [restr_message, setrestr_message] = useState(false);\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const chatEndRef = useRef(null);\n  const { t } = useTranslation();\n  const inputRef = useRef(null);\n  const [isparamVl, setparamVl] = useState(\"\");\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  const [UserPhotoCommets, setUserPhotoCommets] = useState(\"\");\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const [UserPopupData, setUserPopupData] = useState(\"\");\n\n  const [PopupData, setPopupData] = useState(\"\");\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n\n  //console.log(GalleryCommets);\n  // Ref to the chat container\n  var apiUrl = \"https://backend.amourette.no/api/groups/\";\n\n  const [comments, setComments] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const onEmojiClick = (event, emojiObject) => {\n    setInput((prevInput) => prevInput + emojiObject.emoji);\n  };\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (!isOpen1) return;\n      if (event.key === \"ArrowRight\") {\n        gotoNext();\n      } else if (event.key === \"ArrowLeft\") {\n        gotoprev();\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [isOpen1, gotoNext, gotoprev]);\n\n  // Example usage\n\n  const isButtonDisabled = !comments.trim() || restr_message;\n  const handleCommentChange = (e) => {\n    const inputValue = e.target.value;\n\n    // Update the state with the new text (including emojis)\n    setComments(inputValue);\n\n    // If input is completely empty, remove all text and emojis\n    if (inputValue.trim() === \"\") {\n      setComments(\"\");\n    }\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    setrestr_message(hasRestrictedWord);\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const getcommentUseralbum = async (id, commentid) => {\n    let formData = {\n      id: id,\n      commentid: commentid,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(\n        apiUrl + \"getUseralbumsCommentsSeperate\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const newComment = res.data.album.comments; // the newly saved comment with full details\n      console.log(newComment);\n      setUserPhotoCommets((prevComments) => [\n        ...prevComments, // Spread the previous comments\n        ...newComment, // Append the new comments\n      ]);\n      if (newComment.user_id === userLogin.id) {\n        if (chatEndRef.current) {\n          chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n        }\n      }\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Server responded with error:\", err.response);\n      } else if (err.request) {\n        console.error(\"No response received:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    } finally {\n      setspinner(false);\n    }\n  };\n  const handlePostSubmit = async (e) => {\n    if (e.preventDefault) e.preventDefault();\n\n    setspinner(true);\n\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      comment: e.description || e.target.description.value,\n      group_id: GroupPostDataPopup.group_id,\n      post_id: GroupPostDataPopup.id,\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"CreateGroupPostComment\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      getrefreshComment(\"\");\n      setTimeout(() => {\n        if (chatEndRef.current) {\n          chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n        }\n      }, 1000);\n      setComments(\"\");\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Server responded with error:\", err.response);\n      } else if (err.request) {\n        console.error(\"No response received:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    } finally {\n      setspinner(false);\n    }\n  };\n\n  const [showPicker, setShowPicker] = useState(false);\n\n  const handleEmojiClick = (emojiObject) => {\n    // Append emoji to the existing text\n    setComments((prevMessage) => prevMessage + emojiObject.emoji);\n    setShowPicker(false);\n\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  // Update `isparamVl` when `currentIndex` changes\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        onClose1(); // Close the popup when Escape is pressed\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [onClose1]);\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\" && comments.trim() !== \"\") {\n      e.preventDefault();\n\n      handlePostSubmit({\n        description: comments,\n        group_id: GroupPostDataPopup.group_id,\n        post_id: GroupPostDataPopup.id,\n        user_id: userLogin.id,\n      });\n    }\n  };\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n  const handledeletebtn = () => {\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want to delete this album media\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const refreshpopup = async () => {\n    deletePost();\n  };\n  const deletePost = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  };\n  const handleChangeHeartPopup = async (postid, group_id) => {\n    let formData = {\n      user_id: userLogin.id,\n      post_id: postid,\n      group_id: group_id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"GrouppostFavourite\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      favSectionRefresh();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <AlertDelete\n          isOpen1={isPopupOpen_delete}\n          onClose1={closePopup_delete}\n          message={deleteMessage}\n          onReturnSent={refreshpopup}\n        ></AlertDelete>\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        <div className=\"popup-content col-md-10\">\n          <button\n            className=\"close-button\"\n            style={{ zIndex: \"999\" }}\n            onClick={onClose1}\n          >\n            &times; {/* Close button */}\n          </button>\n\n          <div className=\"usergallery_pop  d-flex flex-column gap-1 h-100\">\n            <button\n              className=\"arrow right\"\n              type=\"button\"\n              onClick={() => gotoNext()}\n            >\n              <FaChevronRight />\n            </button>\n            <button\n              className=\"arrow left\"\n              type=\"button\"\n              onClick={() => gotoprev()}\n            >\n              <FaChevronLeft />\n            </button>\n            <div className=\"row p-2 p-md-4\">\n              <div className=\"col-lg-7\">\n                <div className=\"position-relative\">\n                  <div className=\"d-block gallery_im1g \">\n                    <MediaRenderer url={GroupPostDataPopup.file} />\n                  </div>\n                  {userLogin.id === GroupPostDataPopup.user_id && (\n                    <div className=\"flex-shrink-0 posttopbtns\">\n                      {/* <button\n                        title=\"Delete\"\n                        onClick={handledeletebtn}\n                        type=\"button\"\n                        className=\"btn redbtn\"\n                        style={{\n                          padding: \"0px 0px\",\n                          textAlign: \"center\",\n                          minWidth: \"0px\",\n                          background: \"red\",\n                          width: \"40px\",\n                          height: \"40px\",\n                          borderRadius: \"50px\",\n                          position: \"absolute\",\n                          top: \"10px\",\n                          right: \"15px\",\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"icon icon-tabler textcolor icons-tabler-outline icon-tabler-trash\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M4 7l16 0\" />\n                          <path d=\"M10 11l0 6\" />\n                          <path d=\"M14 11l0 6\" />\n                          <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                          <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n                        </svg>\n                      </button> */}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-lg-5\">\n                <div className=\"d-flex h-100 flex-column justify-content-between gap-1\">\n                  <div className=\"d-flex flex-column gap-1 py-3 bordr-bt\">\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <Link\n                        to={`/friend/${GroupPostDataPopup.uid}`}\n                        target=\"_blank\"\n                      >\n                        {GroupPostDataPopup.username}\n                      </Link>\n\n                      <h6>{formateTime(GroupPostDataPopup.date)}</h6>\n                    </div>\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <p>\n                        {GroupPostDataPopup &&\n                        GroupPostDataPopup.description &&\n                        GroupPostDataPopup.description.length > 150\n                          ? GroupPostDataPopup.description.substring(0, 150) +\n                            \"...\"\n                          : GroupPostDataPopup?.description ||\n                            \"No description available\"}\n                      </p>\n\n                      <div className=\"d-flex align-items-center gap-3 flex-shrink-0\">\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <button\n                            type=\"button\"\n                            className=\"liked  fulw\"\n                            onClick={() =>\n                              handleChangeHeartPopup(\n                                GroupPostDataPopup.id,\n                                GroupPostDataPopup.group_id\n                              )\n                            }\n                          >\n                            {GroupPostDataPopup.total_favorite ? (\n                              <FaHeart />\n                            ) : (\n                              <FaRegHeart />\n                            )}\n                          </button>\n                          <p className=\"likecount\">\n                            {GroupPostDataPopup.total_favorite}\n                          </p>\n                        </div>\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <div className=\"d-block like_icon\">\n                            <img\n                              className=\"w-100 h-100\"\n                              src={require(\"../assets/images/comment.png\")}\n                              alt=\"img\"\n                            />\n                          </div>\n                          <p className=\"likecount\">\n                            {GroupPostDataPopup.total_comments}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"d-flex flex-column gap-1\">\n                    <ul className=\"usergallery_msg scroll_bar\">\n                      {GrouppostCommentGet.length === 0 ? (\n                        <li>{t(\"Nocommentsavailable\")}</li>\n                      ) : (\n                        GrouppostCommentGet.map((comment, index) => (\n                          <li className=\"gap-3\" key={index}>\n                            <div className=\"profile_img\">\n                              <img\n                                className=\"w-100 h-100\"\n                                src={\n                                  comment.makeImagePrivate === 1\n                                    ? require(\"../assets/images/thumb.jpg\") // Default image if the profile image is private\n                                    : comment.profile_image // Use user's profile image if available\n                                    ? comment.profile_image\n                                    : require(\"../assets/images/image3.png\") // Default image if no profile image\n                                }\n                                alt=\"img\"\n                              />\n                            </div>\n                            <div className=\"comment_text d-flex flex-column gap-1\">\n                              <h6>{comment.username}</h6>{\" \"}\n                              {/* Display the commenter's username */}\n                              <p>{comment.description}</p>{\" \"}\n                              {/* Display the comment text */}\n                            </div>\n                            <p>{formateTime(comment.date)}</p>{\" \"}\n                          </li>\n                        ))\n                      )}\n                      <li ref={chatEndRef} />\n                    </ul>\n                    <form\n                      action=\"javascript:void(0)\"\n                      method=\"post\"\n                      onSubmit={handlePostSubmit}\n                    >\n                      {restr_message && (\n                        <span\n                          className=\"text-danger\"\n                          style={{ fontSize: \"14px\" }}\n                        >\n                          {t(\"Your_message_contain\")}\n                        </span>\n                      )}\n                      <div className=\"d-flex align-items-center gap-3 w-100 usergallery_from\">\n                        {spinner && (\n                          <div\n                            className=\"spinner-border text-success postloader\"\n                            role=\"status\"\n                          >\n                            <span className=\"visually-hidden\">Loading...</span>\n                          </div>\n                        )}\n                        <div className=\"comment_input w-100 d-flex align-items-center gap-1\">\n                          <input\n                            type=\"hidden\"\n                            value={PopupData.id}\n                            name=\"comment_id\"\n                          />\n                          <div className=\"emoji-container\">\n                            <button\n                              type=\"button\"\n                              className=\"emoji-button\"\n                              onClick={() => setShowPicker(!showPicker)}\n                            >\n                              😀\n                            </button>\n\n                            {showPicker && (\n                              <div\n                                className=\"emoji-picker\"\n                                style={{ position: \"absolute\", top: \"64px\" }}\n                              >\n                                <EmojiPicker onEmojiClick={handleEmojiClick} />\n                              </div>\n                            )}\n                          </div>\n                          <input\n                            type=\"text\"\n                            required\n                            ref={inputRef}\n                            name=\"description\"\n                            value={comments} // Controlled input\n                            onChange={handleCommentChange} // Simplified\n                            onKeyDown={handleKeyDown} // Send on Enter Key\n                            placeholder={`${t(\"write_a_comment\")}`}\n                          />\n\n                          <button\n                            type=\"submit\"\n                            disabled={isButtonDisabled} // Disable button if comment is empty\n                            style={{ opacity: isButtonDisabled ? 1 : 1 }}\n                            className=\"comment_postbtn\"\n                          >\n                            {t(\"Post\")}\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport Headertwo from \"../components/Headertwo\";\nimport { FaFacebookMessenger } from \"react-icons/fa\";\nimport { IconUserPlus } from \"@tabler/icons-react\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport iconphoto from \"../assets/images/me3.png\";\nimport { Createnewgrouppost } from \"../components/Createnewgrouppost\";\nimport { GroupPostComment } from \"../components/GroupPostComment\";\nimport { GroupInviteFriend } from \"../components/GroupInviteFriend\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport image1 from \"../assets/images/image1.jfif\";\nimport image2 from \"../assets/images/image2.jfif\";\nimport image3 from \"../assets/images/image4.jfif\";\nimport image4 from \"../assets/images/image5.jfif\";\nimport image5 from \"../assets/images/angular.jpg\";\nimport image6 from \"../assets/images/image3.png\";\nimport { IoMdCloseCircleOutline } from \"react-icons/io\";\nimport i18n from \"../i18n\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport { Editgroup } from \"../components/Editgroup\";\nimport { GroupMediaLikeComment } from \"../components/GroupMediaLikeComment\";\nexport default function Singlegroup() {\n  const [key, setKey] = useState(\"Invite\");\n  const navigate = useNavigate();\n  var apiUrl = \"https://backend.amourette.no/api/groups/\";\n  var apiUrl2 = \"https://backend.amourette.no/api/members/\";\n  const [showPopError, setShowPopError] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(1);\n  const [AllfriendId, setAllfriendId] = useState([]);\n  const [Allcheckgroupmember, setAllcheckgroupmember] = useState([]);\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [isPopupOpen_newpost, setIsPopupOpen_newpost] = useState(false);\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [isPopupOpen1, setIsPopupOpen1] = useState(false);\n  const [LoginData, setLoginData] = useState(null);\n  const [groupId, setgroupId] = useState(\"\");\n  const [groupdetail, setgroupdetail] = useState(\"\");\n  const [showhide, setshowhide] = useState(false);\n  const [groupView, setgroupView] = useState(false);\n  const [groupAcceptorNo, setgroupAcceptorNo] = useState(false);\n  const [groupAccepted, setgroupAccepted] = useState(false);\n  const [groupAcceptorNoCheck, setgroupAcceptorNoCheck] = useState(false);\n  const [isInterested, setIsInterested] = useState(false);\n  const [GroupDetailIntersted, setGroupDetailIntersted] = useState([]);\n  const [GroupDetailInterstedTotal, setGroupDetailInterstedTotal] = useState(\n    []\n  );\n  const [isGrouppost, setGrouppost] = useState([]);\n  const [allyourgroupsUser, setallyourgroupsUser] = useState([]);\n  const [Isslug, setSlug] = useState(\"\");\n  const [editPage, seteditPage] = useState(false);\n  const { slug } = useParams();\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  const [GroupCommentpopupPostId, setGroupCommentpopupPostId] = useState(\"\");\n  const [inviteGuestuser, setinviteGuestuser] = useState([]);\n  const [confirmgodGuestuser, setconfirmgodGuestuser] = useState([]);\n  const [cannotgodGuestuser, setcannotgodGuestuser] = useState([]);\n  const [intersetddGuestuser, setintersetddGuestuser] = useState([]);\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    setLoginData(userLogin);\n  }, []);\n  const images = [\n    {\n      src: image1,\n      wideSrc: image1,\n      alt: \"Nature\",\n    },\n    {\n      src: image2,\n      wideSrc: image3,\n      alt: \"Snow\",\n    },\n    {\n      src: image4,\n      wideSrc: image5,\n      alt: \"Mountains\",\n    },\n    {\n      src: image6,\n      wideSrc: image6,\n      alt: \"Lights\",\n    },\n    {\n      src: image1,\n      wideSrc: image1,\n      alt: \"Nature\",\n    },\n    {\n      src: image2,\n      wideSrc: image3,\n      alt: \"Snow\",\n    },\n    {\n      src: image4,\n      wideSrc: image5,\n      alt: \"Mountains\",\n    },\n    {\n      src: image6,\n      wideSrc: image6,\n      alt: \"Lights\",\n    },\n  ];\n  useEffect(() => {\n    if (LoginData) {\n      UsercheckAccept(); // Call UsercheckAccept only when LoginData is available\n    }\n    if (slug !== undefined) {\n      setSlug(slug); // Ensure setSlug is defined and does not cause issues\n      getDetails(slug);\n    }\n  }, [LoginData, groupView, slug]); // Dependency on LoginData\n  useEffect(() => {\n    if (slug !== undefined) {\n      UsercheckAccept();\n    }\n  }, [slug]);\n  useEffect(() => {\n    if (slug !== undefined) {\n      getinviteusers();\n      getintesusers();\n      getcannotattend();\n      getconfirmgodGuestuser();\n    }\n  }, [slug]);\n  const getinviteusers = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      slug: slug,\n    };\n    try {\n      const res = await axios.post(apiUrl2 + \"getinviteusers\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      setinviteGuestuser(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getconfirmgodGuestuser = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      slug: slug,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl2 + \"getconfirmgodGuestuser\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n\n      setconfirmgodGuestuser(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getintesusers = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      slug: slug,\n    };\n    try {\n      const res = await axios.post(apiUrl2 + \"getintesusers\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      setintersetddGuestuser(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getcannotattend = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      slug: slug,\n    };\n    try {\n      const res = await axios.post(apiUrl2 + \"getcannotattend\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      setcannotgodGuestuser(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const open_Edit = () => {\n    seteditPage(true);\n  };\n  useEffect(() => {\n    if (LoginData && groupId) {\n      get_GroupdetailallIntersted();\n      get_GroupdetailallInterstedTotal();\n    }\n  }, [LoginData, groupId]);\n  useEffect(() => {\n    if (groupId) {\n      getpostComment(groupId);\n    }\n  }, [groupId]);\n\n  useEffect(() => {\n    if (groupId) {\n      getuserGroupIntersted(groupId);\n    }\n  }, [groupId]);\n  const editPageClose = () => {\n    seteditPage(false);\n  };\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n\n    getAllfriends();\n  }, []);\n  const getAllfriends = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl2 + \"getAllfriends\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      const friendUserIds = respo.map((friend) => friend.id);\n\n      setAllfriendId(friendUserIds);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getuserGroupIntersted = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    let formData = {\n      group_id: groupId,\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(\n        apiUrl + \"get_userGroupIntersted\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      var respo = res.data.results;\n      console.log(\"vv\");\n      console.log(respo);\n      if (respo.length > 0) {\n        setIsInterested(true); // User is now interested\n      } else {\n        setIsInterested(false); // User is now interested\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const [showInvite, setshowInvite] = useState(false);\n  const getDetails = async (slug) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    let formData = {\n      slug: slug,\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getGroupDetailSlug\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.group;\n      console.log(respo);\n      setgroupdetail(respo);\n\n      if (res.data.group === \"\" || res.data.group === undefined) {\n        navigate(\"/groups\");\n      } else {\n        const storedUsername = localStorage.getItem(\"userLogin\");\n        const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n        if (respo.accept === \"Yes\") {\n          setshowInvite(true);\n        } else {\n          setshowInvite(false);\n        }\n        if (userLogin && userLogin.id === res.data.group.user_id) {\n          setshowhide(true);\n        } else {\n          setshowhide(false);\n        }\n      }\n      setgroupId(respo.id);\n      await UsercheckAccept();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  console.log(inviteGuestuser);\n  useEffect(() => {\n    if (groupdetail) {\n      getuserGroupView(groupdetail.user_id);\n    }\n    console.log(groupdetail);\n  }, [groupdetail]);\n  const getuserGroupView = async (idd) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: groupdetail.user_id,\n      checkfrd: groupdetail.user_id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"checkfrdgroup\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      console.log(respo);\n      const friendUserIds = respo.map((friend) => friend.id);\n\n      setAllcheckgroupmember(friendUserIds);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const UsercheckAccept = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      slug: slug,\n    };\n    console.log(formData);\n    //return;\n    try {\n      const res = await axios.post(apiUrl + \"UsercheckAccept\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      console.log(respo);\n      if (respo.length === 0) {\n        setgroupView(false);\n        setgroupAcceptorNo(false);\n        //navigate(\"/groups\");\n      } else {\n        if (respo[0].group_status === \"Created by You\") {\n          console.log(respo[0].group_status);\n          setgroupView(true);\n          setgroupAcceptorNo(false);\n          setgroupAcceptorNoCheck(false);\n        }\n        if (respo[0].invite_status === \"No\") {\n          console.log(\"1\");\n          setgroupView(false);\n          setgroupAcceptorNo(true);\n        }\n        if (respo[0].invite_status === \"Yes\") {\n          console.log(\"2\");\n          setgroupView(true);\n          setgroupAccepted(false);\n          setgroupAcceptorNo(false);\n          setgroupAcceptorNoCheck(true);\n        }\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        //console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const get_GroupdetailallIntersted = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    const userIdsWithSelf = [...AllfriendId, userLogin.id];\n    let formData = {\n      group_id: groupId,\n      user_id: userLogin.id,\n      user_ids: userIdsWithSelf,\n    };\n\n    try {\n      const res = await axios.post(\n        apiUrl + \"getGroupdetailAllIntersted\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n\n      setGroupDetailIntersted(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const get_GroupdetailallInterstedTotal = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n\n    let formData = {\n      group_id: groupId,\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(\n        apiUrl + \"getGroupdetailAllInterstedTotal\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      console.log(res.data.results);\n\n      setGroupDetailInterstedTotal(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getallYourgroupsUser = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n      group_id: groupId,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"getallYourgroupsUser\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      setallyourgroupsUser(res.data.groups);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const openPopup = () => {\n    setIsPopupOpen(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n\n  const closePopup = () => {\n    setIsPopupOpen(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const openPopup1 = (id) => {\n    console.log(id);\n    setIsPopupOpen1(true);\n    setgroupId(id);\n    getallYourgroupsUser();\n    document.body.style.overflowY = \"hidden\";\n  };\n\n  const closePopup1 = () => {\n    setIsPopupOpen1(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const handleInterested = async () => {\n    let formData = {\n      group_id: groupId,\n      user_id: LoginData.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"userGroupIntersted\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      console.log(\"hh\");\n      //getEventdetailallIntersted(groupId);\n      if (res.data.status === \"1\") {\n        setIsInterested(true); // User is now interested\n      } else if (res.data.status === \"2\") {\n        setIsInterested(false); // User is no longer interested\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleAccept = async (slug) => {\n    let groupAccepted = {\n      user_id: LoginData.id,\n      group_id: groupId,\n      slug: slug,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"groupAccepted\", groupAccepted, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      setShowPopError(true);\n      setPoperrorMessage(\"Group invite updated successfully\");\n      UsercheckAccept();\n      // get_GroupdetailallIntersted();\n      setTimeout(() => {\n        setShowPopError(false);\n      }, 800);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const [isPopupOpen_delete2, setisPopupOpen_delete2] = useState(false);\n  const [deleteMessage2, setdeleteMessage2] = useState(\"\");\n  const handledeleteSentto = async (slug) => {\n    setisPopupOpen_delete2(true);\n    setdeleteMessage2(\"Are you sure? You want leave this group\");\n  };\n  const refreshpopupleave = async () => {\n    leavegroup();\n  };\n  const leavegroup = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    let deleteev = {\n      user_id: userLogin.id,\n      group_id: groupId,\n      slug: slug,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"DeleteInviteRequest\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      setShowPopError(true);\n      setPoperrorMessage(\"Successfully\");\n      navigate(\"/groups\");\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const open_DeleteAlert = (id) => {\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want delete this group\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n    setisPopupOpen_delete2(false);\n  };\n  const refreshpopup = async () => {\n    deleteGroup();\n  };\n  const deleteGroup = async () => {\n    let deleteev = {\n      user_id: LoginData.id,\n      group_id: groupId,\n    };\n    console.log(deleteev);\n    try {\n      const res = await axios.post(apiUrl + \"userDeleteGroup\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      navigate(\"/groups\");\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const refreshFriendsList = () => {\n    getallYourgroupsUser(groupId);\n  };\n  const getpostComment = async (idd) => {\n    let formData = {\n      group_id: idd,\n      user_id: LoginData.id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"get_postComment\", formData, {\n        headers: {\n          Accept: \"application/json\",\n        },\n      });\n      console.log(res.data.results, \"kkk\");\n      setGrouppost(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const Isgroupfav = async () => {\n    getpostComment(groupId);\n  };\n  const refreshPostComment = () => {\n    getpostComment(groupId);\n    setIsPopupOpen_newpost(false);\n  };\n  const commentSectionRefresh = async () => {\n    getpostComment(groupId);\n  };\n  const getpostCommentrefresh = async () => {\n    getpostComment(groupId);\n  };\n\n  const openModal = () => setModalOpen(true);\n  const closeModal = () => setModalOpen(false);\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (!modalOpen) return; // Ensure key events work only when modal is open\n\n      if (event.key === \"ArrowRight\") {\n        showSlide(currentSlideIndex + 1); // Right arrow → moves to next slide\n      } else if (event.key === \"ArrowLeft\") {\n        showSlide(currentSlideIndex - 1); // Left arrow ← moves to previous slide\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [currentSlideIndex, modalOpen]);\n\n  useEffect(() => {\n    if (modalOpen) {\n      // Disable scrolling when modal is open\n      document.body.style.overflowY = \"hidden\";\n    } else {\n      // Enable scrolling when modal is closed\n      document.body.style.overflowY = \"auto\";\n    }\n\n    // Cleanup to restore the overflow style when the component unmounts\n    return () => {\n      document.body.style.overflowY = \"auto\";\n    };\n  }, [modalOpen]);\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        setModalOpen(false);\n      }\n    };\n\n    // Add event listener\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup event listener on unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n  const validPosts = isGrouppost.filter((post) => post.file);\n  const showSlide = (index) => {\n    if (index < 0) {\n      setCurrentSlideIndex(validPosts.length); // Loop back to last slide\n    } else if (index > validPosts.length) {\n      setCurrentSlideIndex(1); // Loop to first slide\n    } else {\n      setCurrentSlideIndex(index);\n    }\n  };\n  // Likes Comments Groups Same As Gallery\n  console.log(validPosts);\n  const [isPopupOpen11, setIsPopupOpen11] = useState(false);\n  const [GroupPostDataPopup, setGroupPostDataPopup] = useState(\"\");\n  const [GrouppostCommentGet, setGrouppostCommentGet] = useState([]);\n  const [popupgroupindex, setpopupgroupindex] = useState(\"\");\n  const [currentIndexPopup, setCurrentIndexPopup] = useState(0); // Assuming you have a state to track the index\n\n  const openPopupCommentBox = async (id, group_id, index) => {\n    setGroupCommentpopupPostId(id);\n    GrouppostComment(id, group_id);\n    setpopupgroupindex(index);\n    let formData = {\n      id: id,\n      group_id: group_id,\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getGroupPostData\", formData, {\n        headers: {\n          Accept: \"application/json\",\n        },\n      });\n      setGroupPostDataPopup(res.data.results[0]);\n      setIsPopupOpen11(true);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const GrouppostComment = async (postid, group_id) => {\n    let formData = {\n      id: postid,\n      group_id: group_id,\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getGrouppostComment\", formData, {\n        headers: {\n          Accept: \"application/json\",\n        },\n      });\n      setGrouppostCommentGet(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const closePopup11 = () => {\n    setIsPopupOpen11(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const getrefreshComment = async () => {\n    GrouppostComment(GroupCommentpopupPostId, groupId);\n  };\n  const favSectionRefresh = async () => {\n    openPopupCommentBox(GroupCommentpopupPostId, groupId, popupgroupindex);\n  };\n  const gotoNext = () => {\n    console.log(\"Navigating to next post\");\n    setCurrentIndexPopup((prevIndex) => {\n      if (prevIndex < validPosts.length - 1) {\n        const newIndex = prevIndex + 1;\n        console.log(\"New Index:\", newIndex);\n        console.log(\"Next Post Data:\", validPosts[newIndex]);\n        openPopupCommentBox(\n          validPosts[newIndex].id,\n          validPosts[newIndex].group_id,\n          newIndex\n        );\n        return newIndex;\n      }\n      console.log(\"Already at the last post. Index:\", prevIndex);\n      console.log(\"Current Post Data:\", validPosts[prevIndex]);\n      return prevIndex;\n    });\n  };\n\n  const gotoprev = () => {\n    console.log(\"Navigating to previous post\");\n    setCurrentIndexPopup((prevIndex) => {\n      if (prevIndex > 0) {\n        const newIndex = prevIndex - 1;\n        console.log(\"New Index:\", newIndex);\n        console.log(\"Previous Post Data:\", validPosts[newIndex]);\n        openPopupCommentBox(\n          validPosts[newIndex].id,\n          validPosts[newIndex].group_id,\n          newIndex\n        );\n        return newIndex;\n      }\n      console.log(\"Already at the first post. Index:\", prevIndex);\n      console.log(\"Current Post Data:\", validPosts[prevIndex]);\n      return prevIndex;\n    });\n  };\n  const [openGuest, setopenGuest] = useState(false);\n  const OpenGuest = () => {\n    getinviteusers();\n    getintesusers();\n    getcannotattend();\n    getconfirmgodGuestuser();\n    setopenGuest(true);\n  };\n  const guestClose = () => {\n    setopenGuest(false);\n  };\n  const handleCancelRequest = async (idd) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      id: idd,\n    };\n    try {\n      const res = await axios.post(apiUrl2 + \"handlerequestcancel\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      getinviteusers();\n      getintesusers();\n      getcannotattend();\n      getconfirmgodGuestuser();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleAddFriend = async (id) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      sent_id: id,\n    };\n    try {\n      const res = await axios.post(apiUrl2 + \"sendFriendRequest\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.message;\n      //console.log(respo);\n      setShowPopSuccess(true);\n      setPopsuccessMessage(respo);\n      getinviteusers();\n      getintesusers();\n      getcannotattend();\n      getconfirmgodGuestuser();\n      setTimeout(() => {\n        setShowPopSuccess(false);\n        setPopsuccessMessage(\"\");\n      }, 800);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  // Likes Comments Groups Same As Gallery\n  return (\n    <>\n      <Headertwo />\n\n      <section className=\"singleevent d-block gapy\">\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        <div className=\"container-lg\">\n          <div className=\"row gy-4\">\n            <div className=\"col-md-7\">\n              <div className=\"d-flex flex-column gap-4\">\n                <div className=\"eventtitle d-block pb-1 f\">\n                  <h1>{groupdetail.name}</h1>\n                </div>\n                <div className=\"d-flex flex-column gap-3\">\n                  {groupView && (\n                    <div className=\"evname d-block h\">\n                      <div className=\"d-flex flex-column gap-2\">\n                        <div className=\"d-flex gap-2 align-items-center\">\n                          <div className=\"flex-shrink-0\">\n                            <div className=\"evephoto ofit rounded-circle overflow-hidden\">\n                              <MediaRenderer url={groupdetail.image} />\n                            </div>\n                          </div>\n                          <div className=\"flex-grow-1\">\n                            <div\n                              onClick={openPopup}\n                              className=\"whatthink d-block\"\n                            >\n                              <h4> {`${t(\"what_do_you_think\")}`}</h4>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"d-flex justify-content-end addphotothink\">\n                          <div\n                            onClick={openPopup}\n                            className=\"d-flex gap-2 align-items-center\"\n                            style={{ cursor: \"pointer\" }}\n                          >\n                            <div className=\"flex-grow-1\">\n                              <h4>{`${t(\"Add_photo\")}`}</h4>\n                            </div>\n                            <div className=\"flex-shrink-0\">\n                              <div className=\"iconphoto fulw\">\n                                <img src={iconphoto} alt=\"namepic\" />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  {groupView ? (\n                    <GroupPostComment\n                      isGrouppost={isGrouppost}\n                      LoginData={LoginData}\n                      Isgroupfav={Isgroupfav}\n                      commentSectionRefresh={commentSectionRefresh}\n                      getpostCommentrefresh={getpostCommentrefresh}\n                    />\n                  ) : (\n                    <p>{`${t(\"No_result_found\")}`}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-5\">\n              <div className=\"d-flex flex-column gap-3\">\n                <div className=\"d-flex justify-content-start flex-wrap gap-3 posttopbtns\">\n                  {groupAcceptorNo && (\n                    <button\n                      type=\"button\"\n                      onClick={() => handleAccept(slug)}\n                      className=\"btn prbtn\"\n                    >\n                      {`${t(\"Accept\")}`}\n                    </button>\n                  )}\n                  {/* {groupAcceptorNoCheck && (\n                    <button type=\"button\" className=\"btn prbtn nh\">\n                      {`${t(\"Accepted\")}`}\n                    </button>\n                  )} */}\n                  {Number(groupdetail.user_id) !== Number(userLogin.id) && (\n                    <button\n                      type=\"button\"\n                      onClick={handleInterested}\n                      className={`btn prbtn ${\n                        isInterested ? \"interested_btn\" : \"\"\n                      }`}\n                    >\n                      {t(\"INTERESTED\")}\n                    </button>\n                  )}\n\n                  {groupAcceptorNoCheck && (\n                    <button\n                      type=\"button\"\n                      onClick={() => handledeleteSentto(slug)}\n                      className=\"btn prbtn\"\n                    >\n                      {`${t(\"Leave\")}`}\n                    </button>\n                  )}\n\n                  {showhide && (\n                    <button\n                      type=\"button\"\n                      onClick={() => openPopup1(groupId)}\n                      className=\"btn sebtn\"\n                    >\n                      {`${t(\"invite_a_member\")}`}\n                    </button>\n                  )}\n                  {Number(groupdetail.user_id) !== Number(userLogin.id) &&\n                    showInvite && (\n                      <button\n                        type=\"button\"\n                        onClick={() => openPopup1(groupId)}\n                        className=\"btn sebtn\"\n                      >\n                        {`${t(\"invite_a_member\")}`}\n                      </button>\n                    )}\n                  {showhide && (\n                    <div className=\"d-flex justify-content-between posttopbtns\">\n                      <button\n                        type=\"button\"\n                        onClick={() => OpenGuest()}\n                        className=\"btn sebtn\"\n                      >\n                        {`${t(\"GuestUser\")}`}\n                      </button>\n                    </div>\n                  )}\n                  {/* {showhide && (\n                    <div className=\"d-flex justify-content-between posttopbtns\">\n                      <button type=\"button\" className=\"btn prbtn\">\n                        {`${t(\"save_changes\")}`}\n                      </button>\n                    </div>\n                  )} */}\n                  {showhide && (\n                    <div className=\"d-flex justify-content-between posttopbtns\">\n                      <button\n                        type=\"button\"\n                        onClick={() => open_DeleteAlert(groupId)}\n                        className=\"btn redbtn\"\n                      >\n                        {`${t(\"delete_group\")}`}\n                      </button>\n                    </div>\n                  )}\n                  {showhide && (\n                    <div className=\"d-flex justify-content-between posttopbtns\">\n                      <button\n                        type=\"button\"\n                        onClick={() => open_Edit()}\n                        className=\"btn sebtn\"\n                      >\n                        {`${t(\"save_changes\")}`}\n                      </button>\n                    </div>\n                  )}\n                </div>\n\n                <div className=\"detailbox d-flex flex-column gap-2\">\n                  <h3>{`${t(\"About\")}`}</h3>\n                  <p>{groupdetail.description}</p>\n                  {/* <div className=\"d-block vmore\">\n                    <Link to=\"/\">View More</Link>\n                  </div> */}\n                </div>\n\n                <div className=\"detailbox d-flex flex-column gap-2\">\n                  <h3>{`${t(\"LeftMenu_Members\")}`} </h3>\n                  <div className=\"d-flex flex-column gap-3 overflow-auto scroll_bar pb-4\">\n                    <div className=\"d-flex align-items-center w-100 gap-2\">\n                      {GroupDetailIntersted.length > 0 && (\n                        <span>{GroupDetailIntersted.length}</span>\n                      )}\n\n                      <p className=\"text1line\">\n                        {GroupDetailIntersted && GroupDetailIntersted.length > 0\n                          ? GroupDetailIntersted.map((member, index) => (\n                              <span key={member.uid}>\n                                <Link\n                                  to={`/friend/${member.uid}`}\n                                  target=\"_blank\"\n                                >\n                                  {member.username}\n                                </Link>\n                                {index !== GroupDetailIntersted.length - 1 &&\n                                  \", \"}\n                              </span>\n                            ))\n                          : \"\"}\n                      </p>\n                    </div>\n                    {GroupDetailIntersted && GroupDetailIntersted.length > 0 ? (\n                      <ul className=\"avimgs\">\n                        {GroupDetailIntersted.map((member, index) => (\n                          <li key={index}>\n                            <Link to={`/friend/${member.uid}`} target=\"_blank\">\n                              <img\n                                className=\"w-100 h-100\"\n                                src={\n                                  member.profile_image ||\n                                  require(\"../assets/images/thumb.jpg\")\n                                }\n                                alt=\"Profile\"\n                              />\n                            </Link>\n                          </li>\n                        ))}\n                      </ul>\n                    ) : (\n                      <p>{t(\"No_result_found\")}</p>\n                    )}\n                  </div>\n                  {/* <div className=\"d-block vmore\">\n                    <Link to=\"/\">View More</Link>\n                  </div> */}\n                </div>\n                <div className=\"detailbox d-flex flex-column gap-2\">\n                  <h3>{`${t(\"LeftMenu_Membersinster\")}`} </h3>\n                  <div className=\"d-flex flex-column gap-3 overflow-auto scroll_bar pb-4\">\n                    <div className=\"d-flex align-items-center w-100 gap-2\">\n                      {GroupDetailInterstedTotal.length > 0 && (\n                        <span>{GroupDetailInterstedTotal.length}</span>\n                      )}\n\n                      <p className=\"text1line\">\n                        {GroupDetailInterstedTotal &&\n                        GroupDetailInterstedTotal.length > 0\n                          ? GroupDetailInterstedTotal.map((member, index) => (\n                              <span key={member.uid}>\n                                <Link\n                                  to={`/friend/${member.uid}`}\n                                  target=\"_blank\"\n                                >\n                                  {member.username}\n                                </Link>\n                                {index !==\n                                  GroupDetailInterstedTotal.length - 1 && \", \"}\n                              </span>\n                            ))\n                          : \"\"}\n                      </p>\n                    </div>\n                    {GroupDetailInterstedTotal &&\n                    GroupDetailInterstedTotal.length > 0 ? (\n                      <ul className=\"avimgs\">\n                        {GroupDetailInterstedTotal.map((member, index) => (\n                          <li key={index}>\n                            <Link to={`/friend/${member.uid}`} target=\"_blank\">\n                              <img\n                                className=\"w-100 h-100\"\n                                src={\n                                  member.profile_image ||\n                                  require(\"../assets/images/thumb.jpg\")\n                                }\n                                alt=\"Profile\"\n                              />\n                            </Link>\n                          </li>\n                        ))}\n                      </ul>\n                    ) : (\n                      <p>{t(\"No_result_found\")}</p>\n                    )}\n                  </div>\n                  {/* <div className=\"d-block vmore\">\n                    <Link to=\"/\">View More</Link>\n                  </div> */}\n                </div>\n\n                <div className=\"detailbox d-flex flex-column gap-2\">\n                  <h3>{`${t(\"Media\")}`}</h3>\n                  <div className=\"row\">\n                    {groupView && validPosts.length > 0 ? (\n                      <div className=\"row gy-2\">\n                        {validPosts.map((post, index) =>\n                          post.file && typeof post.file === \"string\" ? (\n                            <div className=\"col-sm-3 col-md-6\" key={index}>\n                              <div className=\"memperson ofit d-flex flex-column gap-1\">\n                                <div className=\"overflow-hidden rounded-3 d-block\">\n                                  <MediaRenderer\n                                    url={post.file}\n                                    onClick={() => {\n                                      if (groupView) {\n                                        openPopupCommentBox(\n                                          post.id,\n                                          post.group_id,\n                                          index\n                                        );\n                                        showSlide(index + 1);\n                                      } else {\n                                        openModal(); // Call your function for opening the modal when groupView is false\n                                        showSlide(index + 1);\n                                      }\n                                    }}\n                                  />\n                                </div>\n                                <Link\n                                  to={`/friend/${post.uid}`}\n                                  className=\"goupmediatext\"\n                                  target=\"_blank\"\n                                >\n                                  {post.username}\n                                </Link>\n                              </div>\n                            </div>\n                          ) : null\n                        )}\n                      </div>\n                    ) : (\n                      <p>{`${t(\"No_available_media\")}`}</p>\n                    )}\n                  </div>\n\n                  {groupView &&\n                    validPosts.some(\n                      (post) =>\n                        post.file &&\n                        typeof post.file === \"string\" &&\n                        post.file.trim() !== \"\"\n                    ) && (\n                      <div className=\"d-block vmore\">\n                        <Link to={`/groupmedia/${slug}`}>{`${t(\n                          \"view_more\"\n                        )}`}</Link>\n                      </div>\n                    )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <GroupInviteFriend\n        isOpen1={isPopupOpen1}\n        onClose1={closePopup1}\n        friends={allyourgroupsUser}\n        LoginData={LoginData}\n        groupId={groupId}\n        groupdetail={groupdetail}\n        onInvitesSent={refreshFriendsList}\n      ></GroupInviteFriend>\n      <Createnewgrouppost\n        isOpen={isPopupOpen}\n        onClose={closePopup}\n        groupId={groupId}\n        LoginData={LoginData}\n        reSetPost={refreshPostComment}\n      ></Createnewgrouppost>\n      <AlertDelete\n        isOpen1={isPopupOpen_delete}\n        onClose1={closePopup_delete}\n        message={deleteMessage}\n        onReturnSent={refreshpopup}\n      ></AlertDelete>\n      <AlertDelete\n        isOpen1={isPopupOpen_delete2}\n        onClose1={closePopup_delete}\n        message={deleteMessage2}\n        onReturnSent={refreshpopupleave}\n      ></AlertDelete>\n      <Editgroup\n        isOpen={editPage}\n        onClose={editPageClose}\n        LoginData={LoginData}\n        groupId={groupId}\n        groupdetail={groupdetail}\n      ></Editgroup>\n      {modalOpen && (\n        <div id=\"myModal\" className=\"modalgg\">\n          <span className=\"close cursor\" onClick={closeModal}>\n            &times;\n          </span>\n          <div className=\"modal-content\">\n            {validPosts.length > 0 ? (\n              validPosts.map((post, index) => (\n                <div\n                  className=\"mySlides\"\n                  style={{\n                    display: currentSlideIndex === index + 1 ? \"block\" : \"none\",\n                  }}\n                  key={index}\n                >\n                  <div className=\"numbertext\">\n                    {index + 1} / {validPosts.length}\n                  </div>\n\n                  {post.file &&\n                  typeof post.file === \"string\" &&\n                  post.file.match(/\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i) ? (\n                    <img src={post.file} alt=\"img\" />\n                  ) : post.file &&\n                    typeof post.file === \"string\" &&\n                    post.file.match(\n                      /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i\n                    ) ? (\n                    <video controls alt=\"video\">\n                      <source src={post.file} type=\"video/mp4\" />\n                      {`${t(\"Your_browser_does\")}`}\n                    </video>\n                  ) : null}\n                </div>\n              ))\n            ) : (\n              <p>{`${t(\"No_available_media\")}`}</p>\n            )}\n\n            <a\n              className=\"prev\"\n              onClick={() => showSlide(currentSlideIndex - 1)}\n            >\n              &#10094;\n            </a>\n            <a\n              className=\"next\"\n              onClick={() => showSlide(currentSlideIndex + 1)}\n            >\n              &#10095;\n            </a>\n          </div>\n        </div>\n      )}\n\n      <GroupMediaLikeComment\n        isOpen1={isPopupOpen11}\n        onClose1={closePopup11}\n        GroupPostDataPopup={GroupPostDataPopup}\n        GrouppostCommentGet={GrouppostCommentGet}\n        getrefreshComment={getrefreshComment}\n        favSectionRefresh={favSectionRefresh}\n        gotoNext={gotoNext}\n        gotoprev={gotoprev}\n        validPosts={validPosts}\n      />\n\n      {openGuest && (\n        <>\n          <div className=\"d-flex flex-column gap-3 scroll_bar guest_invitepop\">\n            <h4>{t(\"Guest\")}</h4>\n            <button onClick={guestClose} className=\"guestClose\">\n              <IoMdCloseCircleOutline />\n            </button>\n            <Tabs\n              id=\"controlled-tab-example\"\n              activeKey={key}\n              onSelect={(k) => setKey(k)}\n              className=\"mb-3 flex gap-3\"\n            >\n              <Tab\n                eventKey=\"Going\"\n                title={`${t(\"going\")} (${confirmgodGuestuser.length || 0})`}\n              >\n                <div className=\"d-flex flex-column gap-4\">\n                  <div className=\"d-flex flex-column gap-2\">\n                    <h5>\n                      {t(\"Friends\")} ({confirmgodGuestuser.length})\n                    </h5>\n                    <ul className=\"scroll_bar invite_people\">\n                      {confirmgodGuestuser.length === 0 ? (\n                        <li className=\"d-flex flex-column gap-2\">\n                          <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                            {t(\"No_result_found\")}\n                          </div>\n                        </li>\n                      ) : (\n                        confirmgodGuestuser.map((invite, index) => (\n                          <li className=\"d-flex flex-column gap-2\">\n                            <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                              <div className=\"d-flex align-items-center gap-3 pt-2\">\n                                <div className=\"d-block main_profile\">\n                                  <img\n                                    src={invite.sender_profile_image}\n                                    alt=\"image\"\n                                  />\n                                </div>\n                                <div className=\"d-flex flex-column gap-2\">\n                                  <h6>{invite.sender_username}</h6>\n                                </div>\n                              </div>\n                              {invite.is_friend === \"Yes\" && (\n                                <Link\n                                  to={`/receivedchatmessage/${invite.sender_slug}`}\n                                  className=\"send_messsage\"\n                                >\n                                  <FaFacebookMessenger />\n                                  <p>{t(\"Message\")}</p>\n                                </Link>\n                              )}\n\n                              {invite.is_friend === null && (\n                                <Link\n                                  to=\"#\"\n                                  onClick={() =>\n                                    handleAddFriend(invite.sent_id)\n                                  }\n                                  className=\"send_messsage\"\n                                >\n                                  <IconUserPlus stroke={2} />\n                                  <p>{t(\"AddFriend\")}</p>\n                                </Link>\n                              )}\n\n                              {invite.is_friend === \"No\" && (\n                                <Link\n                                  to=\"#\"\n                                  onClick={() =>\n                                    handleCancelRequest(invite.frd_id)\n                                  }\n                                  className=\"send_messsage\"\n                                >\n                                  <p>{t(\"CancelRequest\")}</p>\n                                </Link>\n                              )}\n                            </div>\n                          </li>\n                        ))\n                      )}\n                    </ul>\n                  </div>\n                </div>\n              </Tab>\n              <Tab\n                eventKey=\"Maybe\"\n                title={`${t(\"Maybe\")} (${intersetddGuestuser.length || 0})`}\n              >\n                <div className=\"d-flex flex-column gap-4\">\n                  <div className=\"d-flex flex-column gap-2\">\n                    <h5>\n                      {t(\"Friends\")} ({intersetddGuestuser.length})\n                    </h5>\n                    <ul className=\"scroll_bar invite_people\">\n                      {intersetddGuestuser.length === 0 ? (\n                        <li className=\"d-flex flex-column gap-2\">\n                          <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                            {t(\"No_result_found\")}\n                          </div>\n                        </li>\n                      ) : (\n                        intersetddGuestuser.map((invite, index) => (\n                          <li className=\"d-flex flex-column gap-2\">\n                            <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                              <div className=\"d-flex align-items-center gap-3 pt-2\">\n                                <div className=\"d-block main_profile\">\n                                  <img\n                                    src={invite.sender_profile_image}\n                                    alt=\"image\"\n                                  />\n                                </div>\n                                <div className=\"d-flex flex-column gap-2\">\n                                  <h6>{invite.sender_username}</h6>\n                                </div>\n                              </div>\n                              {invite.is_friend === \"Yes\" && (\n                                <Link\n                                  to={`/receivedchatmessage/${invite.sender_slug}`}\n                                  className=\"send_messsage\"\n                                >\n                                  <FaFacebookMessenger />\n                                  <p>{t(\"Message\")}</p>\n                                </Link>\n                              )}\n\n                              {invite.is_friend === null && (\n                                <Link\n                                  to=\"#\"\n                                  onClick={() =>\n                                    handleAddFriend(invite.sent_id)\n                                  }\n                                  className=\"send_messsage\"\n                                >\n                                  <IconUserPlus stroke={2} />\n                                  <p>{t(\"AddFriend\")}</p>\n                                </Link>\n                              )}\n\n                              {invite.is_friend === \"No\" && (\n                                <Link\n                                  to=\"#\"\n                                  onClick={() =>\n                                    handleCancelRequest(invite.frd_id)\n                                  }\n                                  className=\"send_messsage\"\n                                >\n                                  <p>{t(\"CancelRequest\")}</p>\n                                </Link>\n                              )}\n                            </div>\n                          </li>\n                        ))\n                      )}\n                    </ul>\n                  </div>\n                </div>\n              </Tab>\n              <Tab\n                eventKey=\"Invite\"\n                title={`${t(\"Invite\")} (${inviteGuestuser.length || 0})`}\n              >\n                <div className=\"d-flex flex-column gap-4\">\n                  <div className=\"d-flex flex-column gap-2\">\n                    <h5>\n                      {t(\"Friends\")} ({inviteGuestuser.length})\n                    </h5>\n                    <ul className=\"scroll_bar invite_people\">\n                      {inviteGuestuser.length === 0 ? (\n                        <li className=\"d-flex flex-column gap-2\">\n                          <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                            {t(\"No_result_found\")}\n                          </div>\n                        </li>\n                      ) : (\n                        inviteGuestuser.map((invite, index) => (\n                          <li className=\"d-flex flex-column gap-2\">\n                            <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                              <div className=\"d-flex align-items-center gap-3 pt-2\">\n                                <div className=\"d-block main_profile\">\n                                  <img\n                                    src={invite.sender_profile_image}\n                                    alt=\"image\"\n                                  />\n                                </div>\n                                <div className=\"d-flex flex-column gap-2\">\n                                  <h6>{invite.sender_username}</h6>\n                                </div>\n                              </div>\n                              {invite.is_friend === \"Yes\" && (\n                                <Link\n                                  to={`/receivedchatmessage/${invite.sender_slug}`}\n                                  className=\"send_messsage\"\n                                >\n                                  <FaFacebookMessenger />\n                                  <p>{t(\"Message\")}</p>\n                                </Link>\n                              )}\n\n                              {invite.is_friend === null && (\n                                <Link\n                                  to=\"#\"\n                                  onClick={() =>\n                                    handleAddFriend(invite.sent_id)\n                                  }\n                                  className=\"send_messsage\"\n                                >\n                                  <IconUserPlus stroke={2} />\n                                  <p>{t(\"AddFriend\")}</p>\n                                </Link>\n                              )}\n\n                              {invite.is_friend === \"No\" && (\n                                <Link\n                                  to=\"#\"\n                                  onClick={() =>\n                                    handleCancelRequest(invite.frd_id)\n                                  }\n                                  className=\"send_messsage\"\n                                >\n                                  <p>{t(\"CancelRequest\")}</p>\n                                </Link>\n                              )}\n                            </div>\n                          </li>\n                        ))\n                      )}\n                    </ul>\n                  </div>\n                </div>\n              </Tab>\n              <Tab\n                eventKey=\"cannot\"\n                title={`${t(\"cannot\")} (${cannotgodGuestuser.length || 0})`}\n              >\n                <div className=\"d-flex flex-column gap-4\">\n                  <div className=\"d-flex flex-column gap-2\">\n                    <h5>\n                      {t(\"Friends\")} ({cannotgodGuestuser.length})\n                    </h5>\n                    <ul className=\"scroll_bar invite_people\">\n                      {cannotgodGuestuser.length === 0 ? (\n                        <li className=\"d-flex flex-column gap-2\">\n                          <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                            {t(\"No_result_found\")}\n                          </div>\n                        </li>\n                      ) : (\n                        cannotgodGuestuser.map((invite, index) => (\n                          <li className=\"d-flex flex-column gap-2\">\n                            <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                              <div className=\"d-flex align-items-center gap-3 pt-2\">\n                                <div className=\"d-block main_profile\">\n                                  <img\n                                    src={invite.sender_profile_image}\n                                    alt=\"image\"\n                                  />\n                                </div>\n                                <div className=\"d-flex flex-column gap-2\">\n                                  <h6>{invite.sender_username}</h6>\n                                </div>\n                              </div>\n                              {invite.is_friend === \"Yes\" && (\n                                <Link\n                                  to={`/receivedchatmessage/${invite.sender_slug}`}\n                                  className=\"send_messsage\"\n                                >\n                                  <FaFacebookMessenger />\n                                  <p>{t(\"Message\")}</p>\n                                </Link>\n                              )}\n\n                              {invite.is_friend === null && (\n                                <Link\n                                  to=\"#\"\n                                  onClick={() =>\n                                    handleAddFriend(invite.sent_id)\n                                  }\n                                  className=\"send_messsage\"\n                                >\n                                  <IconUserPlus stroke={2} />\n                                  <p>{t(\"AddFriend\")}</p>\n                                </Link>\n                              )}\n\n                              {invite.is_friend === \"No\" && (\n                                <Link\n                                  to=\"#\"\n                                  onClick={() =>\n                                    handleCancelRequest(invite.frd_id)\n                                  }\n                                  className=\"send_messsage\"\n                                >\n                                  <p>{t(\"CancelRequest\")}</p>\n                                </Link>\n                              )}\n                            </div>\n                          </li>\n                        ))\n                      )}\n                    </ul>\n                  </div>\n                </div>\n              </Tab>\n\n              {/* <Tab eventKey=\"contact\" title=\"Contact\">\n                      Tab content for Contact\n                    </Tab> */}\n            </Tabs>\n          </div>\n        </>\n      )}\n    </>\n  );\n}\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'user-plus', 'IconUserPlus', [[\"path\",{\"d\":\"M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M16 19h6\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M19 16v6\",\"key\":\"svg-2\"}],[\"path\",{\"d\":\"M6 21v-2a4 4 0 0 1 4 -4h4\",\"key\":\"svg-3\"}]]);"],"names":["Createnewgrouppost","_ref","isOpen","onClose","children","groupId","LoginData","reSetPost","description","setDescription","useState","image","setImage","error","setError","showPopSuccess","setShowPopSuccess","successPopMessage","setPopsuccessMessage","spinner","setspinner","restr_message","setrestr_message","fileType","setFileType","videoUrl","setVideoUrl","t","useTranslation","useEffect","savedLanguage","localStorage","getItem","console","log","i18n","language","changeLanguage","convertToPng","file","Promise","resolve","reject","reader","FileReader","onload","e","img","Image","canvas","document","createElement","width","height","getContext","drawImage","toBlob","blob","pngFile","File","name","replace","type","lastModified","Date","now","Error","onerror","src","target","result","readAsDataURL","restrictedWords","isButtonDisabled","trim","_jsx","_Fragment","_jsxs","className","onClick","classList","contains","SuccessPop","message","style","fontSize","action","method","onSubmit","async","preventDefault","formData","FormData","append","id","res","axios","post","apiUrl","headers","Accept","status","data","setTimeout","err","response","request","rows","placeholder","value","onChange","inputValue","hasRestrictedWord","some","word","toLowerCase","includes","required","accept","event","files","isImage","startsWith","isVideo","processedFile","size","URL","createObjectURL","alt","controls","BsCloudUpload","color","role","disabled","opacity","GroupPostComment","isGrouppost","Isgroupfav","commentSectionRefresh","getpostCommentrefresh","commentRefs","useRef","inputRef","commentInputs","setCommentInputs","Array","length","fill","showPopError","setShowPopError","errorPopMessage","setPoperrorMessage","isPopupOpen_delete","setisPopupOpen_delete","deleteMessage","setdeleteMessage","postId","setpostId","modalOpen","setModalOpen","currentSlideIndex","setCurrentSlideIndex","closeModal","setimage","imagess","restrictedStates","setRestrictedStates","comments","setComments","body","overflowY","ws","WebSocket","onmessage","receivedMessage","JSON","parse","close","formateTime","dateString","postDate","isNaN","getTime","adjustedPostDate","osloPostTime","Intl","DateTimeFormat","timeZone","hour","minute","hour12","format","timeDiff","seconds","Math","floor","minutes","hours","days","weeks","months","years","handlePostComment","index","group_id","_commentInputs$index","commentText","currentWordCount","text","split","post_id","user_id","comment","prev","scrollToLastComment","showPicker","setShowPicker","handleKeyDown","key","addEventListener","removeEventListener","AlertDelete","isOpen1","onClose1","closePopup_delete","onReturnSent","handlegroupPostDelete","ErrorPop","map","_commentInputs$index3","_commentInputs$index4","Link","to","uid","profile_image","makeImagePrivate","require","username","date","title","handlegroupPostDeleteconfirm","padding","textAlign","minWidth","background","borderRadius","xmlns","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","MediaRenderer","url","chat","postid","handleChangeHeart","fav","FaHeart","FaRegHeart","fav_count","comm","ref","el","current","comt_uid","comment_user_profile_image","comment_makeImagePrivate","comment_user_username","comment_date","toggleEmojiPicker","EmojiPicker","onEmojiClick","emojiObject","handleEmojiClick","inputEl","currentValue","startPos","selectionStart","endPos","selectionEnd","newValue","substring","emoji","focus","handleCommentChange","onKeyDown","_commentInputs$index2","position","top","left","backgroundColor","display","justifyContent","alignItems","zIndex","maxWidth","maxHeight","objectFit","GroupInviteFriend","friends","groupdetail","onInvitesSent","selectedFriends","setSelectedFriends","invMessage","setinvMessage","friendIds","friend","handleCheckboxChange","userId","prevSelected","filter","checked","Editgroup","setName","makeImageUse","setMakeImageUse","errorMessage","setErrorMessage","selectedFile","setSelectedFile","previewImage","setPreviewImage","makePrivateUse","setmakePrivateUse","GroupData","setGroupData","window","location","slug","reload","GroupMediaLikeComment","GroupPostDataPopup","GrouppostCommentGet","getrefreshComment","favSectionRefresh","gotoNext","gotoprev","validPosts","input","setInput","chatEndRef","isparamVl","setparamVl","storedUsername","userLogin","UserPhotoCommets","setUserPhotoCommets","UserPopupData","setUserPopupData","PopupData","setPopupData","handlePostSubmit","scrollIntoView","behavior","deletePost","FaChevronRight","FaChevronLeft","handleChangeHeartPopup","total_favorite","total_comments","prevMessage","Singlegroup","setKey","navigate","useNavigate","apiUrl2","AllfriendId","setAllfriendId","Allcheckgroupmember","setAllcheckgroupmember","isPopupOpen_newpost","setIsPopupOpen_newpost","isPopupOpen","setIsPopupOpen","isPopupOpen1","setIsPopupOpen1","setLoginData","setgroupId","setgroupdetail","showhide","setshowhide","groupView","setgroupView","groupAcceptorNo","setgroupAcceptorNo","groupAccepted","setgroupAccepted","groupAcceptorNoCheck","setgroupAcceptorNoCheck","isInterested","setIsInterested","GroupDetailIntersted","setGroupDetailIntersted","GroupDetailInterstedTotal","setGroupDetailInterstedTotal","setGrouppost","allyourgroupsUser","setallyourgroupsUser","Isslug","setSlug","editPage","seteditPage","useParams","GroupCommentpopupPostId","setGroupCommentpopupPostId","inviteGuestuser","setinviteGuestuser","confirmgodGuestuser","setconfirmgodGuestuser","cannotgodGuestuser","setcannotgodGuestuser","intersetddGuestuser","setintersetddGuestuser","UsercheckAccept","undefined","getDetails","getinviteusers","getintesusers","getcannotattend","getconfirmgodGuestuser","results","get_GroupdetailallIntersted","get_GroupdetailallInterstedTotal","getpostComment","getuserGroupIntersted","getAllfriends","friendUserIds","respo","showInvite","setshowInvite","group","getuserGroupView","checkfrd","group_status","invite_status","userIdsWithSelf","user_ids","getallYourgroupsUser","groups","openPopup","openPopup1","isPopupOpen_delete2","setisPopupOpen_delete2","deleteMessage2","setdeleteMessage2","leavegroup","deleteev","deleteGroup","idd","showSlide","isPopupOpen11","setIsPopupOpen11","setGroupPostDataPopup","setGrouppostCommentGet","popupgroupindex","setpopupgroupindex","currentIndexPopup","setCurrentIndexPopup","openPopupCommentBox","GrouppostComment","openGuest","setopenGuest","handleCancelRequest","handleAddFriend","sent_id","Headertwo","cursor","iconphoto","handleAccept","Number","handledeleteSentto","member","closePopup1","refreshFriendsList","closePopup","refreshPostComment","editPageClose","match","closePopup11","prevIndex","newIndex","guestClose","IoMdCloseCircleOutline","Tabs","activeKey","onSelect","k","Tab","eventKey","invite","sender_profile_image","sender_username","is_friend","sender_slug","FaFacebookMessenger","IconUserPlus","frd_id","createReactComponent"],"sourceRoot":""}