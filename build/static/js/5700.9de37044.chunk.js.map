{"version":3,"file":"static/js/5700.9de37044.chunk.js","mappings":"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","sources":["components/Headertwo.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport ColorToggle from \"../components/ColorToggle\";\nimport { UpgradeMembership } from \"../components/UpgradeMembership\";\nimport Notification from \"../components/Notification\";\nimport axios from \"axios\";\nimport logo from \"../assets/images/logo.png\";\nimport icon1 from \"../assets/images/menuicon.png\";\nimport icon2 from \"../assets/images/bell.png\";\nimport icon3 from \"../assets/images/chat.png\";\nimport me1 from \"../assets/images/me1.png\";\nimport me2 from \"../assets/images/me2.png\";\nimport me3 from \"../assets/images/me3.png\";\nimport me4 from \"../assets/images/me4.png\";\nimport me5 from \"../assets/images/me5.png\";\nimport me6 from \"../assets/images/me6.png\";\nimport me7 from \"../assets/images/me7.png\";\nimport pe1 from \"../assets/images/pic.png\";\nimport se1 from \"../assets/images/se1.png\";\nimport se2 from \"../assets/images/se2.png\";\nimport se3 from \"../assets/images/se3.png\";\nimport { useNavigate } from \"react-router-dom\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\"; // Make sure i18n is imported properly\nimport GDPRPopup from \"./GDPRPopup\";\n\nimport { useLocation } from \"react-router-dom\";\nfunction Headertwo({ refreshNotifications }) {\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  const initialSearchQuery = queryParams.get(\"q\") || \"\"; // Get `q` from URL or default to empty string\n  const [searchQuery, setSearchQuery] = useState(initialSearchQuery);\n  var apiUrl2 = \"https://backend.amourette.no/api/profile/\";\n  var apiUrl3 = \"https://backend.amourette.no/api/members/\";\n  const linksRef = useRef(null);\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = JSON.parse(storedUsername);\n  // State to toggle menubox visibility\n  const [pathname, setpathname] = useState(\"\");\n  const [showsearch, setshowsearch] = useState(false);\n  const [isReceivedMessage, setReceivedMessage] = useState([]);\n  const [isReceivedMessagetotal, setReceivedMessagetotal] = useState([]);\n  const [searchInbox, setSearchInbox] = useState(\"\");\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const [isshowOnline, setshowOnline] = useState(\"\");\n  const [showPopErrorr, setShowPopErrorr] = useState(false);\n  const [errorPopMessagee, setPoperrorMessagee] = useState(\"\");\n  const [usersearch, setusersearch] = useState(\"\");\n  const [AllfriendId, setAllfriendId] = useState([]);\n  const [userdataa, setuserdataa] = useState(\"\");\n\n  const [refreshNotificationsnew, setrefreshNotificationsnew] = useState(false);\n  // Function to toggle menu visibility\n  const toggleMenu = (menuId) => {\n    setActiveMenu(activeMenu === menuId ? null : menuId);\n    getReceivedMessage();\n    getReceivedMessagetotal();\n  };\n\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n\n  const openPopup = () => {\n    setIsPopupOpen(true);\n    // Disable body scroll when popup is open\n    document.body.style.overflowY = \"hidden\";\n  };\n\n  const closePopup = () => {\n    setIsPopupOpen(false);\n    // Re-enable body scroll when popup is closed\n    document.body.style.overflowY = \"auto\";\n  };\n  const [UserData, setUserData] = useState(\"\");\n  const [activeMenu, setActiveMenu] = useState(null);\n\n  const [isSticky, setIsSticky] = useState(false);\n\n  const handleScroll = () => {\n    if (window.scrollY > 0) {\n      setIsSticky(true); // Set sticky if scrolled down\n    } else {\n      setIsSticky(false); // Remove sticky if at the top\n    }\n  };\n  const navigate = useNavigate();\n  var apiUrl = \"https://backend.amourette.no/api/\";\n  const handlelogout = () => {\n    document.cookie =\n      \"gdprConsent=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/;\";\n\n    // Optionally, if you want to remove other cookies, do the same for them\n    // document.cookie = \"anotherCookie=; expires=Thu, 01 Jan 1970 00:00:00 GMT; path=/;\";\n\n    // Redirect to a logout page or home page after clearing the cookie\n    window.location.href = \"/logout\";\n  };\n  const [getallNoread, setgetallNoread] = useState(\"0\");\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getmessageNoRead();\n    }, 3000); // Runs every 2 seconds\n\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []);\n\n  const getmessageNoRead = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    if (storedUsername) {\n      const userLogin = JSON.parse(storedUsername);\n      const formData = { user_id: userLogin.id };\n      try {\n        const res = await axios.post(apiUrl3 + \"getmessageNoRead\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        console.log(res.data.results);\n        setgetallNoread(res.data.results.length);\n      } catch (err) {\n        console.error(\n          \"Error setting user online:\",\n          err.response ? err.response.data : err.message\n        );\n      }\n    }\n  };\n  useEffect(() => {\n    checkmembership();\n  }, []);\n  const checkmembership = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    if (storedUsername) {\n      const userLogin = JSON.parse(storedUsername);\n      const formData = { user_id: userLogin.id };\n      // console.log(\"klkl\");\n      try {\n        const res = await axios.post(apiUrl3 + \"checkmembership\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        var maincheck = res.data.result[0];\n\n        if (res.data.result.length > 0) {\n          //console.log(\"ex\");\n          // console.log(res.data);\n          if (res.data.status === true) {\n            navigate(\"/dashboard\");\n            //setShowPopErrorr(true);\n            //setPoperrorMessagee(\"Please choose the membership\");\n            setIsPopupOpen(true);\n            setTimeout(() => {\n              //setShowPopErrorr(false);\n              setPoperrorMessagee(\"\");\n            }, 3000);\n          }\n          if (\n            maincheck.status === \"Inactive\" ||\n            maincheck.status === \"Banned\"\n          ) {\n            localStorage.removeItem(\"userLogin\");\n            localStorage.removeItem(\"userSearch\");\n            window.location.reload(\"/login\");\n            //window.location.reload = \"/login\";\n          }\n        } else {\n          localStorage.removeItem(\"userLogin\");\n          localStorage.removeItem(\"userSearch\");\n          window.location.reload(\"/login\");\n          //window.location.reload = \"/login\";\n        }\n      } catch (err) {\n        console.error(\n          \"Error setting user online:\",\n          err.response ? err.response.data : err.message\n        );\n      }\n    }\n  };\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\");\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        const storedUsername = localStorage.getItem(\"userLogin\");\n        const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n        if (receivedMessage.event === \"sendfriendRequest\") {\n          if (receivedMessage.user_id === userLogin.id) {\n            // Trigger refresh notifications function\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"Deletegallery\") {\n          refreshNotifications();\n        }\n        if (receivedMessage.event === \"friendrequestacceptnotification\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.some((user) => user.id === userLogin.id)\n          ) {\n            // Trigger notification on new message\n            setrefreshNotificationsnew(true);\n            // Trigger refresh notifications function\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"adminNotification\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.includes(userLogin.id) // Check if current user ID is in the array\n          ) {\n            // console.log(\n            //   \"New notification received for this user:\",\n            //   receivedMessage.message\n            // );\n            setrefreshNotificationsnew(true);\n            // Trigger notification on new message\n            // Example: Show a toast notification or update the UI\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"adminEventupdate\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.includes(userLogin.id) // Check if current user ID is in the array\n          ) {\n            // console.log(\n            //   \"New notification received for this user update event:\",\n            //   receivedMessage.message\n            // );\n            setrefreshNotificationsnew(true);\n            // Trigger notification on new message\n            // Example: Show a toast notification or update the UI\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"adminEventdelete\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.includes(userLogin.id) // Check if current user ID is in the array\n          ) {\n            console.log(\n              \"New notification delete event:\",\n              receivedMessage.message\n            );\n            setrefreshNotificationsnew(true);\n            // Trigger notification on new message\n            // Example: Show a toast notification or update the UI\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"adminEventPostdelete\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.includes(userLogin.id) // Check if current user ID is in the array\n          ) {\n            // console.log(\n            //   \"New notification delete event:\",\n            //   receivedMessage.message\n            // );\n            setrefreshNotificationsnew(true);\n            // Trigger notification on new message\n            // Example: Show a toast notification or update the UI\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"adminEventPostCommentEdit\") {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.includes(userLogin.id) // Check if current user ID is in the array\n          ) {\n            // console.log(\n            //   \"New notification delete event:\",\n            //   receivedMessage.message\n            // );\n            setrefreshNotificationsnew(true);\n            // Trigger notification on new message\n            // Example: Show a toast notification or update the UI\n            refreshNotifications();\n          }\n        }\n        if (\n          receivedMessage.event === \"adminGroupedit\" ||\n          receivedMessage.event === \"adminGroupdelete\" ||\n          receivedMessage.event === \"adminGroupPostCommentEdit\" ||\n          receivedMessage.event === \"adminGroupPostdelete\" ||\n          receivedMessage.event === \"adminGalleryPostdelete\" ||\n          receivedMessage.event === \"adminGallerydelete\" ||\n          receivedMessage.event === \"adminForumPostdelete\" ||\n          receivedMessage.event === \"adminGalleryPostUpdate\" ||\n          receivedMessage.event === \"adminForumPostupdate\"\n        ) {\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.includes(userLogin.id) // Check if current user ID is in the array\n          ) {\n            setrefreshNotificationsnew(true);\n            // Trigger notification on new message\n            // Example: Show a toast notification or update the UI\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"gallerynotification\") {\n          // Check if user_id is an array and contains a matching userLogin.id\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.some((user) => user.id === userLogin.id)\n          ) {\n            setrefreshNotificationsnew(true);\n            // If a match is found, trigger the notification\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"grouprequest_acceptnotification\") {\n          // Check if user_id is an array and contains a matching userLogin.id\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.some((user) => user.id === userLogin.id)\n          ) {\n            setrefreshNotificationsnew(true);\n            // If a match is found, trigger the notification\n            refreshNotifications();\n          }\n        }\n        if (receivedMessage.event === \"eventrequest_acceptnotification\") {\n          // Check if user_id is an array and contains a matching userLogin.id\n          if (\n            Array.isArray(receivedMessage.user_id) &&\n            receivedMessage.user_id.some((user) => user.id === userLogin.id)\n          ) {\n            setrefreshNotificationsnew(true);\n            // If a match is found, trigger the notification\n            refreshNotifications();\n          }\n        }\n        // if (receivedMessage.event === \"eventrequest_acceptnotification\") {\n        //   // Check if user_id is an array and contains a matching userLogin.id\n        //   if (\n        //     Array.isArray(receivedMessage.user_id) &&\n        //     receivedMessage.user_id.some((user) => user.id === userLogin.id)\n        //   ) {\n        //     // If a match is found, trigger the notification\n        //     refreshNotifications();\n        //   }\n        // }\n        if (receivedMessage.event === \"otherusercheckonline\") {\n          // Check if user_id is an array and contains a matching userLogin.id\n          //console.log('checkuser');\n        }\n      } catch (error) {\n        // console.error(\"Failed to parse WebSocket message:\", error);\n        // console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    ws.onopen = () => {\n      console.log(\"WebSocket connection established\");\n    };\n\n    ws.onerror = (error) => {\n      console.error(\"WebSocket error:\", error);\n    };\n\n    return () => {\n      ws.close();\n      console.log(\"WebSocket connection closed\");\n    };\n  }, [refreshNotifications]);\n  useEffect(() => {\n    const getAllfriends = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        user_id: userLogin.id,\n      };\n      try {\n        const res = await axios.post(apiUrlmember + \"getAllfriends\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        var respo = res.data.results;\n        const friendUserIds = respo.map((friend) => friend.id);\n\n        setAllfriendId(friendUserIds);\n        const check = await checkfriends(friendUserIds);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n  }, []);\n  useEffect(() => {\n    const intervalId = setInterval(async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n      if (!userLogin || !userLogin.id) {\n        console.error(\"User login information is not available.\");\n        return;\n      }\n\n      let formData = {\n        user_id: userLogin.id,\n      };\n\n      try {\n        const res = await axios.post(apiUrlmember + \"useractivity\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n\n        const respo = res.data.results; // Process your results here\n        //console.log(res.data);\n        //console.log(\"Activity updated successfully:\", respo);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n          console.error(\"Server responded with an error:\", err.response.data);\n        } else if (err.request) {\n          console.error(\n            \"No response from server. Request details:\",\n            err.request\n          );\n        } else {\n          console.error(\"Error occurred:\", err.message);\n        }\n      }\n    }, 1000); // Run every 60 seconds\n\n    // Cleanup the interval when the component unmounts\n    return () => clearInterval(intervalId);\n  }, []);\n  var apiUrlmember = \"https://backend.amourette.no/api/members/\";\n\n  const checkfriends = async (friendUserIds) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    const userIdsWithSelf = [...friendUserIds]; // e.g., [3, 1, 5]\n    const userIdsString = userIdsWithSelf.join(\", \");\n    let formData = {\n      user_ids: friendUserIds, // Sending as a string for the query\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrlmember + \"getonlineuser\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    console.log(\"dff\");\n    console.log(userLogin);\n\n    if (userLogin === null || userLogin === \"null\") {\n      localStorage.removeItem(\"userLogin\");\n      navigate(\"/login\");\n      return;\n    }\n    const checkuser = async () => {\n      if (!userLogin || userLogin === \"null\") {\n        localStorage.removeItem(\"userLogin\");\n        navigate(\"/login\");\n        return; // Return early to prevent further execution if userLogin is null\n      }\n      let formData = {\n        id: userLogin.id,\n        email: userLogin.email,\n      };\n      try {\n        const res = await axios.post(apiUrl + \"getUserDetail\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        console.log(\"sd\");\n        console.log(res.data.result);\n        if (res.data.result === \"\") {\n          localStorage.removeItem(\"userLogin\");\n          navigate(\"/login\");\n        }\n        console.log(res.data);\n        setUserData(res.data.result);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    checkuser();\n    getReceivedMessage();\n    window.addEventListener(\"scroll\", handleScroll);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  const refreshpage = async () => {};\n  const setOnlineStatus = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    if (storedUsername) {\n      const userLogin = JSON.parse(storedUsername);\n      const formData = { user_id: userLogin.id };\n\n      try {\n        const res = await axios.post(apiUrl2 + \"/setonline\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        setshowOnline(res.data.onlineCount);\n      } catch (err) {\n        console.error(\n          \"Error setting user online:\",\n          err.response ? err.response.data : err.message\n        );\n      }\n    }\n  };\n\n  // Function to call API when user goes offline\n  const setOfflineStatus = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    if (storedUsername) {\n      const userLogin = JSON.parse(storedUsername);\n      const formData = { user_id: userLogin.id };\n\n      try {\n        await axios.post(apiUrl2 + \"/setoffline\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n      } catch (err) {\n        console.error(\n          \"Error setting user offline:\",\n          err.response ? err.response.data : err.message\n        );\n      }\n    }\n  };\n\n  useEffect(() => {\n    // Set the initial online status when the component mounts\n    if (isOnline) {\n      setOnlineStatus();\n    } else {\n      setOfflineStatus();\n    }\n\n    const handleOnline = () => {\n      setIsOnline(true);\n    };\n\n    const handleOffline = () => {\n      setIsOnline(false);\n    };\n\n    window.addEventListener(\"online\", handleOnline);\n    window.addEventListener(\"offline\", handleOffline);\n\n    return () => {\n      window.removeEventListener(\"online\", handleOnline);\n      window.removeEventListener(\"offline\", handleOffline);\n    };\n  }, []); // Empty dependency array to run only on mount\n\n  useEffect(() => {\n    // Call the respective status function when online status changes\n    if (isOnline) {\n      setOnlineStatus();\n    } else {\n      setOfflineStatus();\n    }\n  }, [isOnline]);\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userSearch\");\n    const userSearch = storedUsername ? JSON.parse(storedUsername) : null;\n    if (userSearch !== null) {\n      var ss = userSearch.search;\n    } else {\n      var ss = \"\";\n    }\n    setusersearch(ss);\n  }, [isOnline]);\n  const [page, setPage] = useState(1);\n  const getReceivedMessage = async (pageNumber = 1) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n      pageNumber: pageNumber,\n    };\n    console.log(pageNumber);\n    try {\n      const res = await axios.post(\n        apiUrl2 + \"getReceivedMessageheader\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      var respo = res.data.results;\n      if (pageNumber === 1) {\n        setReceivedMessage(respo); // First page, replace notifications\n      } else {\n        setReceivedMessage((prev) => [...prev, ...respo]); // Append next 20 notifications\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getReceivedMessagetotal = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(\n        apiUrl2 + \"getReceivedMessageheaderTotal\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      var respo = res.data.results;\n      setReceivedMessagetotal(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        //console.error(\"Request data:\", err.request);\n      } else {\n        // console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleclicknotification = () => {\n    const nextPage = page + 1; // Increase the page number\n    setPage(nextPage); // Update the state\n    getReceivedMessage(nextPage); // Fetch next 20 notifications\n  };\n  const handleChangeInbox = async (event) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    setSearchInbox(event.target.value);\n    if (event.target.value === \"\") {\n      getReceivedMessage();\n    } else {\n      let formData = {\n        search: event.target.value,\n        user_id: userLogin.id,\n      };\n      try {\n        const res = await axios.post(\n          apiUrl2 + \"getReceivedMessageheaderSearch\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n            },\n          }\n        );\n        var respo = res.data.results;\n        setReceivedMessage(respo);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          //console.error(\"Request data:\", err.request);\n        } else {\n          // console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Create a Date object using the provided date string\n    const postDate = new Date(dateString);\n\n    // Create an instance of Intl.DateTimeFormat for the \"Europe/Oslo\" timezone\n    const options = {\n      timeZone: \"Europe/Oslo\",\n      year: \"numeric\",\n      month: \"numeric\",\n      day: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      second: \"2-digit\",\n      hour12: false,\n    };\n\n    // Get the date and time in the specified timezone\n    const localDate = new Intl.DateTimeFormat(\"en-US\", options).format(\n      postDate\n    );\n\n    // Get the current date in the same timezone\n    const now = new Date();\n    const localNow = new Intl.DateTimeFormat(\"en-US\", options).format(now);\n\n    // Parse the formatted dates back into Date objects\n    const postDateLocal = new Date(localDate);\n    const nowLocal = new Date(localNow);\n\n    // Calculate the difference in seconds\n    const secondsDiff = Math.floor((nowLocal - postDateLocal) / 1000);\n\n    // Define time intervals\n    const intervals = [\n      { label: \"year\", seconds: 31536000 }, // 365 days\n      { label: \"month\", seconds: 2592000 }, // 30 days\n      { label: \"day\", seconds: 86400 }, // 1 day\n      { label: \"hour\", seconds: 3600 }, // 1 hour\n      { label: \"minute\", seconds: 60 }, // 1 minute\n      { label: \"second\", seconds: 1 }, // 1 second\n    ];\n\n    for (const interval of intervals) {\n      const count = Math.floor(secondsDiff / interval.seconds);\n      if (count >= 1) {\n        return `${count} ${interval.label}${count > 1 ? \"s\" : \"\"} ago`;\n      }\n    }\n\n    return \"Just now\";\n  };\n  const formateTimeDiff = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n  const changeLanguage = (event) => {\n    i18n.changeLanguage(event);\n    localStorage.setItem(\"language\", event);\n  };\n\n  const { t } = useTranslation();\n\n  const handleInput = (e) => {\n    const search = e.target.value;\n    let userse = {\n      search: search,\n    };\n    setSearchQuery(search);\n    setusersearch(search);\n    //localStorage.setItem(\"userSearch\", JSON.stringify(userse));\n    setshowsearch(true);\n    const validPaths = [\n      \"/searchpeople\",\n      \"/searchpost\",\n      \"/searchgroup\",\n      \"/searchevent\",\n      \"/searchforum\",\n      \"/searchmember\",\n      \"/searchspeeddate\",\n    ];\n\n    if (search !== \"\") {\n      setshowsearch(true);\n    } else {\n      //console.log(location.pathname);\n      if (validPaths.includes(location.pathname)) {\n        //navigate(location.pathname);\n        window.location.href = location.pathname;\n      }\n      setshowsearch(false);\n    }\n  };\n  useEffect(() => {\n    let validPaths = [\n      \"/searchpeople\",\n      \"/searchpost\",\n      \"/searchgroup\",\n      \"/searchevent\",\n      \"/searchforum\",\n      \"/searchmember\",\n      \"/searchspeeddate\",\n    ];\n\n    let p = validPaths.includes(location.pathname)\n      ? location.pathname\n      : \"/searchtop?q=\" + usersearch;\n\n    setTimeout(() => {\n      setpathname(p);\n    }, 100);\n  }, [location.pathname, usersearch]);\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n\n  const openAllLinks = () => {\n    if (linksRef.current) {\n      const links = linksRef.current.querySelectorAll(\".chat-link\");\n      let delay = 100; // Initial delay for the first link\n\n      links.forEach((link, index) => {\n        const url = link.getAttribute(\"data-url\");\n        console.log(url, delay);\n        if (url) {\n          setTimeout(() => {\n            window.open(url, \"_blank\");\n          }, delay);\n\n          delay *= 2; // Double the delay for the next link\n        }\n      });\n    }\n  };\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      console.log(pathname);\n\n      if (pathname !== \"\" && usersearch.trim() !== \"\") {\n        if (event.key === \"Enter\") {\n          event.preventDefault(); // Prevent form submission\n\n          // Check if pathname already contains `?q=`\n          let newPath = pathname.includes(\"?q=\")\n            ? pathname // Keep it unchanged if `?q=` is already there\n            : `${pathname}?q=${encodeURIComponent(usersearch)}`;\n\n          window.location.href = newPath; // Redirect to the search result page\n        }\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, [pathname, usersearch]);\n  // Add `usersearch` as a dependency\n\n  return (\n    <>\n      {showPopErrorr && <ErrorPop message={errorPopMessagee} />}\n      <header className={`header ${isSticky ? \"sticky\" : \"\"}`}>\n        <div className=\"container-lg\">\n          <div className=\"row gy-3 align-items-center\">\n            <div className=\"col-8 col-md-3\">\n              <Link to=\"/\" className=\"toplogo d-inline-block fulw\">\n                <img src={logo} alt=\"Logo\" />\n              </Link>\n            </div>\n            <div className=\"col-md-3\">\n              <div className=\"d-block topsearch\">\n                <form action=\"javascript:void(0)\">\n                  <input\n                    type=\"text\"\n                    value={searchQuery}\n                    placeholder={t(\"headerSearch\")}\n                    onInput={handleInput}\n                  />\n\n                  {showsearch && (\n                    <ul className=\"similar_search\">\n                      <li>\n                        <a href={pathname}>\n                          <div className=\"block search_icon\">\n                            <img\n                              className=\"w-100 h-100 object-fit-cover\"\n                              src={require(\"../assets/images/search.png\")}\n                              alt=\"Profile\"\n                            />\n                          </div>\n                          <span>{usersearch}</span>\n                        </a>\n                      </li>\n                    </ul>\n                  )}\n                </form>\n              </div>\n            </div>\n\n            <div className=\" col-md-6\">\n              <div className=\"d-flex flex-column flex-md-row  justify-content-md-end\">\n                <div className=\"d-flex flex-column flex-md-row \">\n                  <div className=\"d-flex gap-md-3 gap-1 flex-wrap rel align-items-md-center justify-content-between justify-content-md-end\">\n                    <div className=\"\">\n                      <button\n                        type=\"button\"\n                        className={`topmenu ${\n                          activeMenu === \"menu1\" ? \"active\" : \"\"\n                        }`}\n                        onClick={() => toggleMenu(\"menu1\")}\n                      >\n                        <img\n                          className=\"object-contain\"\n                          src={icon1}\n                          alt=\"userp\"\n                        />\n                      </button>\n                      <div\n                        className=\"menubox menu_scroll\"\n                        style={{\n                          display: activeMenu === \"menu1\" ? \"block\" : \"none\",\n                        }}\n                      >\n                        <div className=\"d-flex flex-column gap-4 \">\n                          <h3>{t(\"Menu\")}</h3>\n                          <div className=\"d-flex flex-column gap-3\">\n                            <Link to=\"/friendsearch\" className=\"d-flex gap-3\">\n                              <div className=\"flex-shrink-0\">\n                                <div className=\"iconmenu fulw\">\n                                  <img src={me1} alt=\"userpic\" />\n                                </div>\n                              </div>\n                              <div className=\"flex-grow-1\">\n                                <h4>{t(\"LeftMenu_Members\")}</h4>\n                                <p>{t(\"view_and_browser\")}</p>\n                              </div>\n                            </Link>\n                            <Link\n                              to=\"/receivedmessages\"\n                              className=\"d-flex gap-3\"\n                            >\n                              <div className=\"flex-shrink-0\">\n                                <div className=\"iconmenu fulw\">\n                                  <img src={me2} alt=\"userpic\" />\n                                </div>\n                              </div>\n                              <div className=\"flex-grow-1\">\n                                <h4>{t(\"Messages\")}</h4>\n                                <p>{t(\"view_received_and_sent\")}</p>\n                              </div>\n                            </Link>\n                            <Link to=\"/allgallery\" className=\"d-flex gap-3\">\n                              <div className=\"flex-shrink-0\">\n                                <div className=\"iconmenu fulw\">\n                                  <img src={me3} alt=\"userpic\" />\n                                </div>\n                              </div>\n                              <div className=\"flex-grow-1\">\n                                <h4>{t(\"Gallery\")}</h4>\n                                <p>{t(\"view_and_upload_images\")}</p>\n                              </div>\n                            </Link>\n                            <Link to=\"/allgroup\" className=\"d-flex gap-3\">\n                              <div className=\"flex-shrink-0\">\n                                <div className=\"iconmenu fulw\">\n                                  <img src={me4} alt=\"userpic\" />\n                                </div>\n                              </div>\n                              <div className=\"flex-grow-1\">\n                                <h4>{t(\"Groups\")}</h4>\n                                <p>{t(\"Browse_and_create_groups\")}</p>\n                              </div>\n                            </Link>\n                            <Link to=\"/allevents\" className=\"d-flex gap-3\">\n                              <div className=\"flex-shrink-0\">\n                                <div className=\"iconmenu fulw\">\n                                  <img src={me5} alt=\"userpic\" />\n                                </div>\n                              </div>\n                              <div className=\"flex-grow-1\">\n                                <h4>{t(\"LeftMenu_Events\")}</h4>\n                                <p>{t(\"Browse_and_create_events\")}</p>\n                              </div>\n                            </Link>\n                            <Link to=\"/speeddate\" className=\"d-flex gap-3\">\n                              <div className=\"flex-shrink-0\">\n                                <div className=\"iconmenu fulw\">\n                                  <img src={me6} alt=\"userpic\" />\n                                </div>\n                              </div>\n                              <div className=\"flex-grow-1\">\n                                <h4>{t(\"LeftMenu_Speedating\")}</h4>\n                                <p>{t(\"Meet_new_people\")}</p>\n                              </div>\n                            </Link>\n                            <Link to=\"/allforums\" className=\"d-flex gap-3\">\n                              <div className=\"flex-shrink-0\">\n                                <div className=\"iconmenu fulw\">\n                                  <img src={me7} alt=\"userpic\" />\n                                </div>\n                              </div>\n                              <div className=\"flex-grow-1\">\n                                <h4>{t(\"Forum\")}</h4>\n                                <p>{t(\"Browse_and_create_forum_threads\")}</p>\n                              </div>\n                            </Link>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <Notification\n                      activeMenu={activeMenu}\n                      toggleMenu={toggleMenu}\n                      refresh={refreshNotificationsnew}\n                    />\n                    <div className=\"\">\n                      <button\n                        type=\"button\"\n                        className={`topmenu ${\n                          activeMenu === \"menu3\" ? \"active\" : \"\"\n                        }`}\n                        onClick={() => toggleMenu(\"menu3\")}\n                      >\n                        {getallNoread > 0 && (\n                          <span className=\"notinum\">\n                            {getallNoread > 99 ? \"99+\" : getallNoread}\n                          </span>\n                        )}\n\n                        <img\n                          className=\"object-fit-contain\"\n                          src={icon3}\n                          alt=\"userp\"\n                        />\n                      </button>\n                      <div\n                        className=\"menubox\"\n                        style={{\n                          display: activeMenu === \"menu3\" ? \"block\" : \"none\",\n                        }}\n                      >\n                        <div className=\"d-flex flex-column gap-4 \">\n                          <h3>{t(\"Inbox\")}</h3>\n                          <div className=\"d-block inboxser\">\n                            <form action=\"\">\n                              <input\n                                type=\"text\"\n                                value={searchInbox}\n                                onChange={handleChangeInbox}\n                                placeholder={t(\"searchinbox\")}\n                              />\n                            </form>\n                          </div>\n                          {isReceivedMessagetotal.length > 1 && (\n                            <div className=\"d-block inboxser morebtnnotification\">\n                              <button\n                                type=\"button\"\n                                onClick={openAllLinks}\n                                className=\"float-end\"\n                              >\n                                {t(\"All_message\")}\n                              </button>\n                            </div>\n                          )}\n                          <div className=\"d-flex flex-column gap-3\">\n                            <div\n                              className=\"d-flex flex-column gap-3 scroll_bar scrollyover\"\n                              ref={linksRef}\n                            >\n                              {isReceivedMessage.length === 0 ? (\n                                <p>{t(\"No_inbox_found\")}</p>\n                              ) : (\n                                isReceivedMessage.map((message) => {\n                                  // Determine if the message is sent by the current user or received from another user\n                                  const isSentByUser =\n                                    message.user_id === userLogin.id;\n                                  const profileImage = isSentByUser\n                                    ? message.recipient_profile\n                                    : message.sender_profile; // Use the sender or recipient profile image\n                                  const username = isSentByUser\n                                    ? message.recipient_username\n                                    : message.sender_username; // Use the sender or recipient username\n                                  const slug = isSentByUser\n                                    ? message.recipient_slug\n                                    : message.sender_slug; // Use the sender or recipient slug\n                                  const chatUrl = `/receivedchatmessage/${slug}`; // Construct URL for the message\n\n                                  return (\n                                    <Link\n                                      to={chatUrl}\n                                      className=\"d-flex gap-3 chat-link\"\n                                      key={message.id}\n                                      data-url={chatUrl}\n                                    >\n                                      <div className=\"flex-shrink-0\">\n                                        <div className=\"iconmenu ofit rounded-circle overflow-hidden\">\n                                          {profileImage ? (\n                                            <img\n                                              src={profileImage}\n                                              alt=\"userpic\"\n                                            />\n                                          ) : (\n                                            <img\n                                              src={require(\"../assets/images/thumb.jpg\")}\n                                              alt=\"userpic\"\n                                            />\n                                          )}\n                                        </div>\n                                      </div>\n                                      <div className=\"flex-grow-1\">\n                                        <div className=\"d-flex justify-content-between\">\n                                          <h4>{username}</h4>{\" \"}\n                                          {/* Display sender or recipient username */}\n                                          <p>{formateTimeDiff(message.date)}</p>{\" \"}\n                                          {/* Display time difference */}\n                                        </div>\n                                        <h6 className=\"minimsg\">\n                                          {message.message}{\" \"}\n                                          {/* Display the message */}\n                                        </h6>\n                                      </div>\n                                    </Link>\n                                  );\n                                })\n                              )}\n                              {isReceivedMessagetotal.length > 10 && (\n                                <div className=\"d-block morebtnnotification\">\n                                  <button\n                                    type=\"button\"\n                                    onClick={handleclicknotification}\n                                  >\n                                    {t(\"seeprevious\")}\n                                  </button>\n                                </div>\n                              )}\n                            </div>\n\n                            {/* <div className=\"d-block morebtn\">\n                              <Link to=\"/\">View more</Link>\n                            </div> */}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"\">\n                      <button\n                        type=\"button\"\n                        className={`topmenu rounded-circle overflow-hidden p-0 ${\n                          activeMenu === \"menu4\" ? \"active\" : \"\"\n                        }`}\n                        onClick={() => toggleMenu(\"menu4\")}\n                      >\n                        {UserData.makeImagePrivate === 1 ? (\n                          // Show default thumbnail image if makeImagePrivate === 1\n                          <img\n                            src={require(\"../assets/images/thumb.jpg\")} // Replace with actual path to your image\n                            alt=\"userpic\"\n                            className=\"rounded-circle overflow-hidden\"\n                          />\n                        ) : (\n                          // Show user profile image\n                          <img\n                            src={UserData.profile_image}\n                            alt=\"userpic\"\n                            className=\"rounded-circle overflow-hidden\"\n                          />\n                        )}\n                      </button>\n                      <div\n                        className=\"menubox\"\n                        style={{\n                          display: activeMenu === \"menu4\" ? \"block\" : \"none\",\n                        }}\n                      >\n                        <div className=\"d-flex flex-column gap-4 \">\n                          <h3>{t(\"Profile_and_settings\")}</h3>\n                          <div className=\"d-flex flex-column gap-3\">\n                            <Link\n                              to=\"/editprofile\"\n                              className=\"d-flex align-items-center gap-3\"\n                            >\n                              <div className=\"flex-shrink-0\">\n                                <div className=\"iconmenu ofit rounded-circle overflow-hidden\">\n                                  {UserData.profile_image &&\n                                  UserData.makeImagePrivate === 0 ? ( // Display the image URL if available\n                                    <img\n                                      src={UserData.profile_image} // Use the URL created from the file\n                                      alt=\"userpic\"\n                                    />\n                                  ) : (\n                                    <img\n                                      src={require(\"../assets/images/thumb.jpg\")} // If it's an image URL from the profile\n                                      alt=\"userpic\"\n                                    />\n                                  )}\n                                </div>\n                              </div>\n                              <div className=\"flex-grow-1\">\n                                <h4>{UserData.username}</h4>\n                                <p>{t(\"Edit_your_profile\")}</p>\n                              </div>\n                            </Link>\n\n                            <div className=\"d-block morebtn\">\n                              <button type=\"button\" onClick={openPopup}>\n                                {t(\"UPGRADE_MEMBERSHIP\")}\n                              </button>\n                            </div>\n                            <div className=\"d-flex flex-column gap-3 helpset pt-3\">\n                              <Link to=\"/setting\" className=\"d-flex gap-3\">\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"iconmenu fulw\">\n                                    <img src={se1} alt=\"userpic\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Settings\")}</h4>\n                                  <p>{t(\"Site_and_profile_settings\")}</p>\n                                </div>\n                              </Link>\n                              <Link to=\"/helpsupport\" className=\"d-flex gap-3\">\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"iconmenu fulw\">\n                                    <img src={se3} alt=\"userpic\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Help_and_support\")}</h4>\n                                  <p>{t(\"Contact_us_FAQ_and_more\")}</p>\n                                </div>\n                              </Link>\n                              <Link\n                                to=\"#\"\n                                onClick={handlelogout}\n                                className=\"d-flex gap-3\"\n                              >\n                                <div className=\"flex-shrink-0\">\n                                  <div className=\"iconmenu fulw\">\n                                    <img src={se2} alt=\"userpic\" />\n                                  </div>\n                                </div>\n                                <div className=\"flex-grow-1\">\n                                  <h4>{t(\"Log_out\")}</h4>\n                                  <p>{t(\"See_you_later\")}</p>\n                                </div>\n                              </Link>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"d-flex align-items-center gap-1 lang_chnage\">\n                      <button\n                        className={`flex-shrink-0 ${\n                          i18n.language === \"en\" ? \"active\" : \"\"\n                        }`}\n                        type=\"button\"\n                        onClick={() => changeLanguage(\"en\")}\n                      >\n                        EN\n                      </button>\n                      <h6 className=\"flex-shrink-0\">-</h6>\n                      <button\n                        className={`flex-shrink-0 ${\n                          i18n.language === \"no\" ? \"active\" : \"\"\n                        }`}\n                        type=\"button\"\n                        onClick={() => changeLanguage(\"no\")}\n                      >\n                        NO\n                      </button>\n                      {/* <select\n                        onClick={changeLanguage}\n                        defaultValue={i18n.language}\n                      >\n                        <option value=\"en\">EN</option>\n                        <option value=\"no\">NO</option>\n                      </select> */}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </header>\n      <UpgradeMembership\n        isOpen={isPopupOpen}\n        onClose={closePopup}\n      ></UpgradeMembership>\n      <ColorToggle />\n      <GDPRPopup />\n    </>\n  );\n}\n\nexport default Headertwo;\n"],"names":["_ref","refreshNotifications","location","useLocation","initialSearchQuery","URLSearchParams","search","get","searchQuery","setSearchQuery","useState","apiUrl2","apiUrl3","linksRef","useRef","storedUsername","localStorage","getItem","userLogin","JSON","parse","pathname","setpathname","showsearch","setshowsearch","isReceivedMessage","setReceivedMessage","isReceivedMessagetotal","setReceivedMessagetotal","searchInbox","setSearchInbox","isOnline","setIsOnline","navigator","onLine","isshowOnline","setshowOnline","showPopErrorr","setShowPopErrorr","errorPopMessagee","setPoperrorMessagee","usersearch","setusersearch","AllfriendId","setAllfriendId","userdataa","setuserdataa","refreshNotificationsnew","setrefreshNotificationsnew","toggleMenu","menuId","setActiveMenu","activeMenu","getReceivedMessage","getReceivedMessagetotal","isPopupOpen","setIsPopupOpen","UserData","setUserData","isSticky","setIsSticky","handleScroll","window","scrollY","navigate","useNavigate","getallNoread","setgetallNoread","useEffect","interval","setInterval","getmessageNoRead","clearInterval","async","formData","user_id","id","res","axios","post","headers","Accept","console","log","data","results","length","err","error","response","message","checkmembership","maincheck","result","status","setTimeout","removeItem","reload","ws","WebSocket","onmessage","event","receivedMessage","Array","isArray","some","user","includes","onopen","onerror","close","intervalId","apiUrlmember","request","email","apiUrl","checkuser","addEventListener","removeEventListener","setOnlineStatus","onlineCount","setOfflineStatus","handleOnline","handleOffline","userSearch","ss","page","setPage","pageNumber","arguments","undefined","respo","prev","formateTimeDiff","dateString","postDate","Date","isNaN","getTime","now","adjustedPostDate","osloPostTime","Intl","DateTimeFormat","timeZone","hour","minute","hour12","format","timeDiff","seconds","Math","floor","minutes","hours","days","weeks","months","years","changeLanguage","i18n","setItem","t","useTranslation","p","savedLanguage","language","handleKeyPress","trim","key","preventDefault","newPath","encodeURIComponent","href","document","_jsxs","_Fragment","children","_jsx","ErrorPop","className","Link","to","src","logo","alt","action","type","value","placeholder","onInput","e","target","validPaths","require","onClick","icon1","style","display","me1","me2","me3","me4","me5","me6","me7","Notification","refresh","icon3","onChange","openAllLinks","current","links","querySelectorAll","delay","forEach","link","index","url","getAttribute","open","ref","map","isSentByUser","profileImage","recipient_profile","sender_profile","username","recipient_username","sender_username","chatUrl","recipient_slug","sender_slug","date","handleclicknotification","nextPage","makeImagePrivate","profile_image","openPopup","body","overflowY","se1","se3","handlelogout","cookie","se2","UpgradeMembership","isOpen","onClose","closePopup","ColorToggle","GDPRPopup"],"sourceRoot":""}