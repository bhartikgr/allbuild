{"version":3,"file":"static/js/6127.720af187.chunk.js","mappings":"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","sources":["components/Createnewgallery.jsx","components/Footer.jsx","components/UploadprivatealbumForGallery.jsx","components/Usergallery.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\n\nimport SuccessPop from \"../components/SuccessPop\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport { FFmpeg } from \"@ffmpeg/ffmpeg\";\nexport const Createnewgallery = ({\n  isOpen,\n  onClose,\n  children,\n  LoginData,\n  notification,\n  visibleAlbums,\n}) => {\n  console.log(visibleAlbums);\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n  const [image, setImage] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [UserData, setUserData] = useState(\"\");\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [showPopError, setShowPopError] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\"); // State for error message\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [makeImageUse, setmakeImageUse] = useState(false);\n  const [spinner, setspinner] = useState(false);\n  const [videoUrl, setVideoUrl] = useState(\"\"); // for resized video\n  const [fileType, setFileType] = useState(\"\");\n  const [restr_message, setrestr_message] = useState(\"\");\n  //const [getallAlbum, setgetallAlbum] = useState(visibleAlbums);\n  const [selectedId, setSelectedId] = useState(\"\");\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose(); // Close the popup if the overlay is clicked\n    }\n  };\n  var apiUrll = \"https://backend.amourette.no/api/\";\n  // Empty dependency array to run this effect only once when the component mounts\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n\n    const checkuser = async () => {\n      let formData = {\n        id: userLogin.id,\n        email: userLogin.email,\n      };\n\n      try {\n        const res = await axios.post(apiUrll + \"getUserDetail\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n\n        //console.log(res.data);\n        setUserData(res.data.result);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    checkuser();\n  }, []);\n\n  useEffect(() => {\n    getalbum();\n  }, []);\n  const getalbum = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      user_id: userLogin.id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"getGalleryallAlbum\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      //setgetallAlbum(res.data.results);\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Server Response Error:\", err.response.data);\n      } else if (err.request) {\n        console.error(\"No Response Received:\", err.request);\n      } else {\n        console.error(\"Request Error:\", err.message);\n      }\n    }\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault(); // Prevent the default form submission\n    setspinner(true);\n    try {\n      const formData = new FormData();\n      console.log(selectedFile);\n      // Append checkbox value to formData\n      formData.append(\"name\", name);\n      formData.append(\"description\", description);\n      formData.append(\"makeImageUse\", makeImageUse);\n      formData.append(\"user_id\", LoginData.id);\n      formData.append(\"fileType\", \"gallery\");\n      formData.append(\"album_id\", selectedId);\n      if (makeImageUse === true) {\n        formData.append(\"image\", selectedFile);\n      } else {\n        formData.append(\"image\", selectedFile);\n      }\n\n      const response = await axios.post(apiUrl + \"gallerysave\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      setspinner(false);\n      setShowPopSuccess(true);\n      setPopsuccessMessage(response.data.message);\n      setTimeout(() => {\n        setShowPopError(false);\n        setShowPopSuccess(false);\n        window.location.reload();\n        onClose();\n      }, 1000);\n      //console.log(\"Event created:\", response.data);\n      setImage(null);\n      setName(\"\");\n      setDescription(\"\");\n      setmakeImageUse(false);\n      setSelectedFile(null);\n      // Close the popup after submission\n    } catch (error) {\n      setspinner(false);\n      setShowPopError(true);\n      setTimeout(() => {\n        setShowPopError(false);\n        onClose();\n      }, 800);\n      setPoperrorMessage(\"Error creating esssvent:\", error);\n    }\n  };\n  const MAX_FILE_SIZE = 25 * 1024 * 1024; // 2 MB\n  const handleFileChange = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const isImage = file.type.startsWith(\"image/\");\n    const isVideo = file.type.startsWith(\"video/\");\n\n    if (!isImage && !isVideo) {\n      setErrorMessage(\"Please upload a valid image or video file.\");\n      setSelectedFile(null);\n      return;\n    }\n\n    if (file.size > MAX_FILE_SIZE) {\n      setErrorMessage(\"File size must be less than 5 MB.\");\n      setSelectedFile(null);\n      return;\n    }\n\n    setErrorMessage(\"\");\n\n    if (isImage) {\n      const supportedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n      if (!supportedTypes.includes(file.type)) {\n        try {\n          const convertedFile = await convertToPng(file);\n          setSelectedFile(convertedFile);\n          setFileType(\"image\");\n          return;\n        } catch (err) {\n          console.error(\"Image conversion error:\", err);\n          setErrorMessage(\"Failed to convert image.\");\n          setSelectedFile(null);\n          return;\n        }\n      }\n\n      setSelectedFile(file);\n      setFileType(\"image\");\n    }\n\n    if (isVideo) {\n      setSelectedFile(file);\n      setFileType(\"video\");\n    }\n  };\n  const convertToPng = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = function (event) {\n        const img = new Image();\n        img.onload = function () {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = img.width;\n          canvas.height = img.height;\n\n          const ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(img, 0, 0);\n\n          canvas.toBlob(\n            (blob) => {\n              if (blob) {\n                const pngFile = new File(\n                  [blob],\n                  file.name.replace(/\\.\\w+$/, \".png\"),\n                  {\n                    type: \"image/png\",\n                    lastModified: new Date().getTime(),\n                  }\n                );\n                resolve(pngFile);\n              } else {\n                reject(new Error(\"Failed to convert image.\"));\n              }\n            },\n            \"image/png\",\n            1\n          );\n        };\n        img.onerror = reject;\n        img.src = event.target.result;\n      };\n\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const resizeVideo = async (file) => {\n    const ffmpeg = new FFmpeg({ log: true });\n\n    // Load the ffmpeg library\n    await ffmpeg.load();\n\n    // Write the video to the ffmpeg virtual file system\n    const videoFilePath = URL.createObjectURL(file);\n    ffmpeg.FS(\n      \"writeFile\",\n      \"input.mp4\",\n      await fetch(videoFilePath).then((res) => res.arrayBuffer())\n    );\n\n    // Resize video (you can adjust the width/height as per your requirement)\n    await ffmpeg.run(\"-i\", \"input.mp4\", \"-vf\", \"scale=640:360\", \"output.mp4\");\n\n    // Read the output file from the virtual file system\n    const data = ffmpeg.FS(\"readFile\", \"output.mp4\");\n    const videoBlob = new Blob([data.buffer], { type: \"video/mp4\" });\n    const videoUrl = URL.createObjectURL(videoBlob);\n\n    return videoUrl;\n  };\n  const handleInputChange = (e) => {\n    const inputValue = e.target.value;\n    setName(inputValue);\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    if (hasRestrictedWord) {\n      setrestr_message(true);\n    } else {\n      setrestr_message(false);\n    }\n  };\n  const handleInputChangedescription = (e) => {\n    const inputValue = e.target.value;\n    setDescription(inputValue);\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    if (hasRestrictedWord) {\n      setrestr_message(true);\n    } else {\n      setrestr_message(false);\n    }\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const setmakeImageUsechoose = (e) => {\n    setmakeImageUse(e);\n  };\n  const handlechooseId = (event) => {\n    setSelectedId(event.target.value); // Update state with selected ID\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        {showPopError && <ErrorPop message={errorPopMessage} />}\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"gallery_pop  d-flex flex-column gap-4\">\n            <h3>{t(\"Upload_new_images\")}</h3>\n            <form\n              onSubmit={handleSubmit}\n              action=\"javascript:void(0)\"\n              method=\"post\"\n            >\n              <div className=\"row gy-3 align-items-end\">\n                <div className=\"col-md-6\">\n                  <div className=\"uploadfile rel bgload\">\n                    <input\n                      type=\"file\"\n                      required\n                      name=\"file\"\n                      onChange={handleFileChange}\n                      className=\"fileload\"\n                      disabled={false}\n                      accept=\"image/*,video/mp4,video/webm,video/ogg\" // Accept only images and videos\n                    />\n\n                    <div className=\"upload_image\">\n                      {/* Show image preview */}\n                      {fileType === \"image\" && selectedFile && (\n                        <img\n                          className=\"w-100 h-100\"\n                          src={URL.createObjectURL(selectedFile)}\n                          alt=\"Selected Image\"\n                        />\n                      )}\n\n                      {/* Show video preview */}\n                      {fileType === \"video\" && selectedFile && (\n                        <video className=\"w-100 h-100\" controls>\n                          <source\n                            src={videoUrl || URL.createObjectURL(selectedFile)}\n                            type=\"video/mp4\"\n                          />\n                          {t(\"Your_browser_does\")}\n                        </video>\n                      )}\n                    </div>\n                    <div className=\"inload\" style={{ height: \"100px\" }}>\n                      <div>\n                        <BsCloudUpload style={{ fontSize: \"24px\" }} />\n                        <h3 style={{ fontSize: \"14px\" }}>\n                          {t(\"UPLOADIMAGE_Video\")} *\n                        </h3>\n                      </div>\n                    </div>\n                    {errorMessage && (\n                      <p className=\"text-danger\">{errorMessage}</p>\n                    )}\n                  </div>\n                </div>\n                {fileType === \"image\" && selectedFile && (\n                  <div className=\"col-md-6\">\n                    <div className=\"listbox\">\n                      <label className=\"cbox\">\n                        {t(\"Use_profile_picture\")}\n                        <input\n                          type=\"checkbox\"\n                          checked={makeImageUse}\n                          onChange={(e) =>\n                            setmakeImageUsechoose(e.target.checked)\n                          }\n                          name=\"makeImagePrivate\"\n                        />\n                        <span className=\"checkmark\"></span>\n                      </label>\n                    </div>\n                  </div>\n                )}\n                <div className=\"col-12\">\n                  <input\n                    type=\"text\"\n                    name=\"name\"\n                    required\n                    onChange={handleInputChange}\n                    placeholder={`${t(\"image_name\")} *`}\n                    value={name}\n                  />\n                </div>\n                <div className=\"col-12\">\n                  <textarea\n                    required\n                    name=\"description\"\n                    rows=\"8\"\n                    placeholder={`${t(\"image_description\")} *`}\n                    value={description}\n                    onChange={handleInputChangedescription}\n                  ></textarea>\n                </div>\n                <div className=\"col-12\">\n                  <select\n                    className=\"form-control\"\n                    onChange={handlechooseId}\n                    name=\"album_id\"\n                  >\n                    <option value=\"\">{t(\"ChooseAlbum\")}</option>\n                    {visibleAlbums.map((album, index) => (\n                      <option key={index} value={album.id}>\n                        {album.name}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n                {restr_message && (\n                  <span className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                    {t(\"Your_message_contain\")}\n                  </span>\n                )}\n                <div className=\"col-12\">\n                  {spinner && (\n                    <div\n                      className=\"spinner-border text-success date-load\"\n                      role=\"status\"\n                    >\n                      <span className=\"visually-hidden\">{t(\"Loading\")}...</span>\n                    </div>\n                  )}\n                  <button type=\"submit\">{t(\"upload_images\")}</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport GDPRPopup from \"./GDPRPopup\";\n\nexport const Footer = () => {\n  const { t } = useTranslation();\n  const [signedup, setsignedup] = useState(false);\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const currentYear = new Date().getFullYear();\n\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    if (userLogin !== null) {\n      setsignedup(true);\n    }\n  }, []);\n  return (\n    <>\n      <footer className=\"d-block\">\n        <div className=\"ftblocks py-5\">\n          <div className=\"container-lg\">\n            <div className=\"row gy-4\">\n              <div className=\"col-md-6\">\n                <div className=\"d-flex flex-column gap-3 ftlogoblock\">\n                  <h4>{t(\"WELCOMETOAMOURETTE\")}</h4>\n                  <div className=\"d-flex flex-column gap-1\">\n                    <h6>{t(\"Yourenow\")}</h6>\n                    <Link to=\"/helpsupport\" className=\"needsign\">\n                      <span\n                        dangerouslySetInnerHTML={{ __html: t(\"Needhelp\") }}\n                      />\n                    </Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-3\">\n                <div className=\"d-flex flex-column gap-3 ftblock ps-md-5\">\n                  <h3>{t(\"About\")}</h3>\n                  <div className=\"d-flex flex-column gap-2 ftlink\">\n                    <Link to=\"/setting\">{t(\"Membership\")}</Link>\n                    <Link to=\"/helpsupport\">{t(\"Help_and_support\")}</Link>\n                    <Link to=\"/setting\">{t(\"Contact_us\")}</Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-md-3\">\n                <div className=\"d-flex flex-column gap-3 ftblock ps-md-5\">\n                  <h3>{t(\"Resources\")}</h3>\n                  <div className=\"d-flex flex-column gap-2 ftlink\">\n                    <Link to=\"/securitypage\">{t(\"Security\")}</Link>\n                    <Link to=\"/setting\">{t(\"privacy\")}</Link>\n                    <Link to=\"/helpsupport\">{t(\"Terms_and_conditions\")}</Link>\n                  </div>\n                </div>\n              </div>\n              <div className=\"col-12\">\n                <div className=\"d-block ftlogoblock\">\n                  <p className=\"copyrighttext\">\n                    &copy; {t(\"Copyright_2024_all_rights_reserved\")}{\" \"}\n                    {currentYear}, {t(\"all_rights_reserved\")}\n                  </p>\n                </div>\n              </div>\n            </div>\n            <GDPRPopup />\n          </div>\n        </div>\n      </footer>\n    </>\n  );\n};\n","import React, { useState, useEffect, useRef } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nexport const UploadprivatealbumForGallery = ({\n  isOpen,\n  onClose,\n  children,\n  closepopup11,\n}) => {\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose(); // Close the popup if the overlay is clicked\n    }\n  };\n  const [spinner, setspinner] = useState(false);\n  const [images, setImages] = useState(null);\n  const [visibility, setVisibility] = useState(\"\");\n  const [addToAlbum, setAddToAlbum] = useState(\"No\");\n  const [addToAlbumPass, setAddToAlbumpass] = useState(\"No\");\n  const [Password, setPassword] = useState(\"\");\n  const [albumName, setAlbumName] = useState(\"\");\n  const [rightsConfirmed, setRightsConfirmed] = useState(\"Yes\");\n  const [error, setError] = useState(\"\");\n  const [successmsg, setsuccessmsg] = useState(\"\");\n  const [preebtn, setpreebtn] = useState(false);\n  const { t } = useTranslation();\n  const fileInputRef = useRef(null);\n\n  useEffect(() => {\n    if (visibility === \"Private_visible\") {\n      setAddToAlbumpass(\"Yes\");\n      setAddToAlbum(\"Yes\");\n    } else {\n      setAddToAlbumpass(\"No\");\n    }\n  }, [visibility]);\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n  const handleFileChange = async (e) => {\n    const selectedFiles = e.target.files;\n    const maxFileSize = 10 * 1024 * 1024; // 10 MB in bytes\n    const maxFileCount = 10; // Maximum of 10 files\n    let validFiles = [];\n    let fileError = \"\";\n\n    const supportedImageTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n\n    if (selectedFiles.length > maxFileCount) {\n      fileError = `You can only upload a maximum of ${maxFileCount} files.`;\n    } else {\n      for (const file of Array.from(selectedFiles)) {\n        const fileType = file.type;\n\n        if (!fileType.startsWith(\"image/\") && !fileType.startsWith(\"video/\")) {\n          fileError = `File \"${file.name}\" is not an image or video.`;\n          break;\n        } else if (file.size > maxFileSize) {\n          fileError = `File \"${file.name}\" exceeds the 10 MB limit.`;\n          break;\n        } else if (\n          fileType.startsWith(\"image/\") &&\n          !supportedImageTypes.includes(fileType)\n        ) {\n          // Convert unsupported image to PNG\n          try {\n            const converted = await convertToPng(file);\n            validFiles.push(converted);\n          } catch (err) {\n            fileError = `Failed to convert image \"${file.name}\" to PNG.`;\n            break;\n          }\n        } else {\n          validFiles.push(file);\n        }\n      }\n    }\n\n    if (fileError) {\n      setError(fileError);\n    } else {\n      setError(\"\");\n      setImages(validFiles);\n    }\n  };\n  const convertToPng = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = function (event) {\n        const img = new Image();\n        img.onload = function () {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = img.width;\n          canvas.height = img.height;\n\n          const ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(img, 0, 0);\n\n          canvas.toBlob(\n            (blob) => {\n              if (blob) {\n                const pngFile = new File(\n                  [blob],\n                  file.name.replace(/\\.\\w+$/, \".png\"),\n                  {\n                    type: \"image/png\",\n                    lastModified: new Date().getTime(),\n                  }\n                );\n                resolve(pngFile);\n              } else {\n                reject(new Error(\"Failed to convert image.\"));\n              }\n            },\n            \"image/png\",\n            1\n          );\n        };\n        img.onerror = reject;\n        img.src = event.target.result;\n      };\n\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const [yesNoerror, setYesNoError] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!images) {\n      alert(\"Please select images to upload.\");\n      return;\n    }\n\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    const formData = new FormData();\n\n    images.forEach((file) => {\n      formData.append(\"images\", file); // Use the key 'files' for your backend to handle multiple files\n    });\n    formData.append(\"visibility\", visibility);\n    formData.append(\"addToAlbum\", \"Yes\");\n    formData.append(\"albumName\", albumName);\n    formData.append(\"password\", Password);\n    formData.append(\"rightsConfirmed\", rightsConfirmed);\n    formData.append(\"user_id\", userLogin.id);\n    formData.append(\"fileType\", \"\");\n    if (rightsConfirmed === \"No\") {\n      setYesNoError(true);\n      return;\n    } else {\n      setYesNoError(false);\n    }\n    setspinner(true);\n    setpreebtn(true);\n    try {\n      const res = await axios.post(\n        apiUrl + \"saveprivateAlbumGallery\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"multipart/form-data\",\n          },\n        }\n      );\n      var respo = res.data;\n      setpreebtn(false);\n      setsuccessmsg(respo.message);\n      setTimeout(() => {\n        window.location.reload();\n        setspinner(false);\n        setsuccessmsg(\"\");\n        closepopup11();\n        setVisibility(\"\");\n        setAlbumName(\"\");\n        setPassword(\"\");\n        setAddToAlbum(\"No\");\n        setRightsConfirmed(\"Yes\");\n        setImages(null);\n      }, 3500);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const removeFile = (index) => {\n    setImages((prev) => {\n      const updatedImages = prev.filter((_, i) => i !== index);\n      // If no files left, reset the input value\n      if (updatedImages.length === 0 && fileInputRef.current) {\n        fileInputRef.current.value = \"\";\n      }\n      return updatedImages;\n    });\n  };\n\n  const handlecheck = () => {};\n  if (!isOpen) return null;\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"gallery_pop  d-flex flex-column gap-4\">\n            <h3> {t(\"upload_album\")}</h3>\n            <form\n              action=\"javascript:void(0)\"\n              method=\"post\"\n              onSubmit={handleSubmit}\n            >\n              <div className=\"row gy-3 align-items-end\">\n                <div className=\"col-md-12\">\n                  <div className=\"uploadfile rel bgload\">\n                    <p className=\"pb-2\">{t(\"select_one_more\")}</p>\n                    <input\n                      type=\"file\"\n                      name=\"file\"\n                      required\n                      accept=\"image/*,video/mp4,video/webm,video/ogg\"\n                      multiple\n                      onChange={handleFileChange}\n                      className=\"fileload\"\n                      ref={fileInputRef}\n                    />\n                    {error && <p style={{ color: \"red\" }}>{error}</p>}\n                    <div className=\"inload\" style={{ height: \"50px\" }}>\n                      <div className=\"d-flex gap-3 align-items-center\">\n                        {images !== null && (\n                          <>\n                            {images.map((file, index) => (\n                              <div className=\"upimage rel\" key={index}>\n                                <button\n                                  type=\"button\"\n                                  onClick={() => removeFile(index)}\n                                >\n                                  X\n                                </button>\n                                <div className=\"inimag ofit\">\n                                  {file.type.startsWith(\"image/\") ? (\n                                    <img\n                                      src={URL.createObjectURL(file)}\n                                      alt={file.name}\n                                    />\n                                  ) : (\n                                    <video width=\"160\" height=\"120\" controls>\n                                      <source\n                                        src={URL.createObjectURL(file)}\n                                        type={file.type}\n                                      />\n                                    </video>\n                                  )}\n                                </div>\n                              </div>\n                            ))}\n                          </>\n                        )}\n\n                        <div className=\"d-flex align-items-center gap-2\">\n                          <BsCloudUpload style={{ fontSize: \"24px\" }} />\n                          <h3 className=\"m-0\" style={{ fontSize: \"14px\" }}>\n                            {t(\"upload_image\")}/{t(\"Videos\")}\n                          </h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-12\">\n                  <div className=\"d-flex flex-column gap-2\">\n                    <p>{t(\"how_private\")}</p>\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <div className=\"icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"2\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          class=\"icon icon-tabler icons-tabler-outline icon-tabler-lock\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M5 13a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v6a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-6z\" />\n                          <path d=\"M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0\" />\n                          <path d=\"M8 11v-4a4 4 0 1 1 8 0v4\" />\n                        </svg>\n                      </div>\n                      <select\n                        value={visibility}\n                        onChange={(e) => setVisibility(e.target.value)}\n                        className=\"\"\n                        required\n                        name=\"visibility\"\n                      >\n                        <option value=\"\">--{t(\"Select\")}--</option>\n                        <option value=\"Public_visible\">{t(\"All\")}</option>\n                        <option value=\"Friends_visible\">\n                          {t(\"Friends_visible\")}\n                        </option>\n                        {/* <option value=\"Private_visible\">\n                          {t(\"Private_visible\")}\n                        </option> */}\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                {addToAlbumPass === \"Yes\" && (\n                  <div className=\"col-12\">\n                    <div className=\"d-flex flex-column gap-2\">\n                      <p>{t(\"Password\")}</p>\n                      <div className=\"d-flex align-items-center gap-2\">\n                        <div className=\"icon\">\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"24\"\n                            height=\"24\"\n                            viewBox=\"0 0 24 24\"\n                            fill=\"none\"\n                            stroke=\"currentColor\"\n                            stroke-width=\"2\"\n                            stroke-linecap=\"round\"\n                            stroke-linejoin=\"round\"\n                            class=\"icon icon-tabler icons-tabler-outline icon-tabler-lock\"\n                          >\n                            <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                            <path d=\"M5 13a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2v6a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-6z\" />\n                            <path d=\"M11 16a1 1 0 1 0 2 0a1 1 0 0 0 -2 0\" />\n                            <path d=\"M8 11v-4a4 4 0 1 1 8 0v4\" />\n                          </svg>\n                        </div>\n                        <input\n                          type=\"password\"\n                          name=\"password\"\n                          placeholder={t(\"Enterprotectedpasswordhere\")}\n                          value={Password}\n                          onChange={(e) => setPassword(e.target.value)}\n                        />\n                      </div>\n                    </div>\n                  </div>\n                )}\n\n                <div className=\"col-12\">\n                  <div className=\"d-flex flex-column gap-2\">\n                    <p>{t(\"Add_the_album\")}</p>\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <div className=\"icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth=\"2\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"icon icon-tabler icons-tabler-outline icon-tabler-library-photo\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M7 3m0 2.667a2.667 2.667 0 0 1 2.667 -2.667h8.666a2.667 2.667 0 0 1 2.667 2.667v8.666a2.667 2.667 0 0 1 -2.667 2.667h-8.666a2.667 2.667 0 0 1 -2.667 -2.667z\" />\n                          <path d=\"M4.012 7.26a2.005 2.005 0 0 0 -1.012 1.737v10c0 1.1 .9 2 2 2h10c.75 0 1.158 -.385 1.5 -1\" />\n                          <path d=\"M17 7h.01\" />\n                          <path d=\"M7 13l3.644 -3.644a1.21 1.21 0 0 1 1.712 0l3.644 3.644\" />\n                          <path d=\"M15 12l1.644 -1.644a1.21 1.21 0 0 1 1.712 0l2.644 2.644\" />\n                        </svg>\n                      </div>\n                      <input\n                        type=\"text\"\n                        name=\"album_name\"\n                        placeholder={t(\"Enteralbumname\")}\n                        value={albumName}\n                        onChange={(e) => setAlbumName(e.target.value)}\n                        required // Required only if \"Yes\" is selected\n                      />\n                    </div>\n                  </div>\n                </div>\n\n                <div className=\"col-12\">\n                  {yesNoerror && (\n                    <span style={{ color: \"red\", fontSize: \"12px\" }}>\n                      {t(\"Pleaseconfirm\")}\n                    </span>\n                  )}\n                  <div className=\"d-flex flex-column gap-2\">\n                    <p>{t(\"Do_you_have_the\")}</p>\n                    <div className=\"d-flex align-items-center gap-2\">\n                      <div className=\"icon\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"24\"\n                          height=\"24\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          stroke-width=\"2\"\n                          stroke-linecap=\"round\"\n                          stroke-linejoin=\"round\"\n                          class=\"icon icon-tabler icons-tabler-outline icon-tabler-copyright\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0\" />\n                          <path d=\"M14 9.75a3.016 3.016 0 0 0 -4.163 .173a2.993 2.993 0 0 0 0 4.154a3.016 3.016 0 0 0 4.163 .173\" />\n                        </svg>\n                      </div>\n\n                      <select\n                        value={rightsConfirmed}\n                        onChange={(e) => setRightsConfirmed(e.target.value)}\n                        name=\"rightsConfirmed\"\n                      >\n                        <option value=\"Yes\">{t(\"Yes\")}</option>\n                        <option value=\"No\">{t(\"No\")}</option>\n                      </select>\n                    </div>\n                  </div>\n                </div>\n                <span className=\"text-success\">{successmsg}</span>\n                <div className=\"col-12\">\n                  {spinner && (\n                    <div\n                      className=\"spinner-border text-success send_load\"\n                      role=\"status\"\n                    >\n                      <span className=\"visually-hidden\">{t(\"loading\")}...</span>\n                    </div>\n                  )}\n                  <button\n                    type=\"submit\"\n                    style={{\n                      pointerEvents: preebtn ? \"none\" : \"auto\", // Disable button when preebtn is true\n                      opacity: preebtn ? 0.1 : 1, // Reduce opacity when disabled\n                    }}\n                  >\n                    {t(\"upload\")}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useRef, useEffect } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport { FaChevronLeft } from \"react-icons/fa\";\nimport { FaChevronRight } from \"react-icons/fa\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nexport const Usergallery = ({\n  isOpen1,\n  onClose1,\n  children,\n  seperateGallerydetail,\n  UserDetail,\n  LoginData,\n  getUserfav,\n  GalleryCommets,\n  getCommentPost,\n  GalleryIdDetailGet,\n  galleryData,\n  previousId,\n  nextId,\n  getgallerydetialnext,\n  getgallerydetialprev,\n}) => {\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const chatEndRef = useRef(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isparamVl, setparamVl] = useState(seperateGallerydetail);\n  const [isgallid, setgallid] = useState(GalleryIdDetailGet);\n  const [restr_message, setrestr_message] = useState(false);\n  const [GalleryCommetss, setGalleryCommetss] = useState(GalleryCommets);\n  const { t } = useTranslation();\n  const [input, setInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  useEffect(() => {\n    setGalleryCommetss(GalleryCommets);\n    setparamVl(seperateGallerydetail);\n    setgallid(GalleryIdDetailGet);\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView();\n    }\n  }, [GalleryCommets, seperateGallerydetail, GalleryIdDetailGet]);\n\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\"); // Adjust port if needed\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n\n        const gid = String(receivedMessage.gallery_id); // Convert to string\n        const galleryIdDetail = String(GalleryIdDetailGet); // Convert to string as well\n\n        const log = LoginData.id;\n\n        // Check if gid matches the expected GalleryIdDetailGet\n        if (galleryIdDetail === gid) {\n          if (receivedMessage.event === \"GalleryLike\") {\n            console.log(receivedMessage);\n            // Update the local state based on the received message\n            setparamVl((prev) => {\n              if (prev.id === receivedMessage.gallery_id) {\n                return {\n                  ...prev,\n                  total_favourites: receivedMessage.total_favourites,\n                  user_favourited:\n                    log === receivedMessage.user_id\n                      ? receivedMessage.user_favourited // Update user_favourited only if IDs match\n                      : prev.user_favourited, // Toggle the favourited state\n                };\n              }\n              return prev;\n            });\n          }\n          if (receivedMessage.event === \"GalleryPost\") {\n            // Update state with the new comment\n            setGalleryCommetss((prevComments) => [\n              ...prevComments,\n              {\n                user_id: receivedMessage.user_id,\n                username: receivedMessage.username,\n                description: receivedMessage.message,\n                profile_image: receivedMessage.profile_image,\n                makeImagePrivate: receivedMessage.makeImagePrivate,\n                date: receivedMessage.date,\n                lastInsertId: receivedMessage.lastInsertId,\n              },\n            ]);\n          }\n        } else {\n        }\n      } catch (error) {\n        console.error(\"Failed to parse WebSocket message:\", error);\n        console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [LoginData, GalleryIdDetailGet]);\n  //console.log(GalleryCommets);\n  // Ref to the chat container\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n\n  const [comments, setComments] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const onEmojiClick = (event, emojiObject) => {\n    setInput((prevInput) => prevInput + emojiObject.emoji);\n  };\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"ArrowRight\") {\n        nextImage(previousId); // Move to next image when Right Arrow is pressed\n      } else if (event.key === \"ArrowLeft\") {\n        prevImage(nextId); // Move to previous image when Left Arrow is pressed\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [previousId, nextId]);\n  // Example usage\n\n  const isButtonDisabled = !comments.trim() || restr_message;\n  const handleCommentChange = (e) => {\n    const inputValue = e.target.value;\n\n    // Update the state with the new text (including emojis)\n    setComments(inputValue);\n\n    // If input is completely empty, remove all text and emojis\n    if (inputValue.trim() === \"\") {\n      setComments(\"\");\n    }\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    setrestr_message(hasRestrictedWord);\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const handlePostSubmit = async (e) => {\n    if (e.preventDefault) e.preventDefault(); // Prevent default only if `e` is an actual event\n\n    setspinner(true);\n\n    let formData = {\n      description: e.description || e.target.description.value,\n      gallery_id: e.gallery_id || e.target.gallery_id.value,\n      user_id: LoginData.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"GalleryPostSave\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      console.log(res.data);\n      setspinner(false);\n      setComments(\"\");\n      getCommentPost();\n      chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const galleryPostLike = async (id) => {\n    let formData = {\n      user_id: LoginData.id,\n      id: id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"galleryPostLike\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      getUserfav(\"\");\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  // Function to handle next image\n  // Function to handle next image\n  const nextImage = (id_id) => {\n    getgallerydetialnext(id_id);\n  };\n\n  // Function to handle previous image\n  const prevImage = (id_id) => {\n    getgallerydetialprev(id_id);\n  };\n  const [showPicker, setShowPicker] = useState(false);\n\n  const handleEmojiClick = (emojiObject) => {\n    // Append emoji to the existing text\n    setComments((prevMessage) => prevMessage + emojiObject.emoji);\n    setShowPicker(false);\n\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  // Update `isparamVl` when `currentIndex` changes\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        onClose1(); // Close the popup when Escape is pressed\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [onClose1]);\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\" && comments.trim() !== \"\") {\n      e.preventDefault();\n\n      handlePostSubmit({\n        description: comments,\n        gallery_id: seperateGallerydetail.id,\n      });\n    }\n  };\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n  const handledeletebtn = () => {\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want to delete this post\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const refreshpopup = async () => {\n    deletePost();\n  };\n  const deletePost = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let deleteev = {\n      user_id: userLogin.id,\n      id: seperateGallerydetail.id,\n      post_type: \"gallery\",\n    };\n    try {\n      const res = await axios.post(apiUrl + \"deletePostDashboard\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      setShowPopSuccess(true);\n      setPopsuccessMessage(\"Post deleted successfully\");\n\n      setisPopupOpen_delete(false);\n\n      setTimeout(() => {\n        onClose1();\n        setShowPopSuccess(false);\n        window.location.reload();\n      }, 1000);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <AlertDelete\n          isOpen1={isPopupOpen_delete}\n          onClose1={closePopup_delete}\n          message={deleteMessage}\n          onReturnSent={refreshpopup}\n        ></AlertDelete>\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        <div className=\"popup-content col-md-10\">\n          <button\n            className=\"close-button\"\n            style={{ zIndex: \"999\" }}\n            onClick={onClose1}\n          >\n            &times; {/* Close button */}\n          </button>\n\n          <div className=\"usergallery_pop  d-flex flex-column gap-1 h-100\">\n            <button\n              className=\"arrow right\"\n              type=\"button\"\n              onClick={() => nextImage(previousId)}\n            >\n              <FaChevronRight />\n            </button>\n            <button\n              className=\"arrow left\"\n              type=\"button\"\n              onClick={() => prevImage(nextId)}\n            >\n              <FaChevronLeft />\n            </button>\n            <div className=\"row p-2 p-md-4\">\n              <div className=\"col-lg-7\">\n                <div className=\"position-relative\">\n                  <div className=\"d-block gallery_im1g \">\n                    {isparamVl.image && typeof isparamVl.image === \"string\" ? (\n                      // Check if the URL ends with a valid image extension\n                      <MediaRenderer\n                        className=\"w-100 h-100\"\n                        url={isparamVl.image}\n                      />\n                    ) : (\n                      // Fallback when `item.image` is undefined or invalid\n                      <p>{t(\"No_avalibale_media\")}</p>\n                    )}\n                  </div>\n                  {userLogin.id === isparamVl.user_id && (\n                    <div className=\"flex-shrink-0 posttopbtns\">\n                      <button\n                        title=\"Delete\"\n                        onClick={handledeletebtn}\n                        type=\"button\"\n                        className=\"btn redbtn\"\n                        style={{\n                          padding: \"0px 0px\",\n                          textAlign: \"center\",\n                          minWidth: \"0px\",\n                          background: \"red\",\n                          width: \"40px\",\n                          height: \"40px\",\n                          borderRadius: \"50px\",\n                          position: \"absolute\",\n                          top: \"10px\",\n                          right: \"15px\",\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"icon icon-tabler textcolor icons-tabler-outline icon-tabler-trash\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M4 7l16 0\" />\n                          <path d=\"M10 11l0 6\" />\n                          <path d=\"M14 11l0 6\" />\n                          <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                          <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n                        </svg>\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-lg-5\">\n                <div className=\"d-flex h-100 flex-column justify-content-between gap-1\">\n                  <div className=\"d-flex flex-column gap-1 py-3 bordr-bt\">\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <Link to={`/friend/${isparamVl.uid}`}>\n                        {isparamVl.username}\n                      </Link>\n\n                      <h6>{formateTime(isparamVl.date)}</h6>\n                    </div>\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <p>\n                        {isparamVl &&\n                        isparamVl.description &&\n                        isparamVl.description.length > 150\n                          ? isparamVl.description.substring(0, 150) + \"...\"\n                          : isparamVl?.description ||\n                            \"No description available\"}\n                      </p>\n\n                      <div className=\"d-flex align-items-center gap-3 flex-shrink-0\">\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <button\n                            type=\"button\"\n                            onClick={() => galleryPostLike(isparamVl.id)}\n                            className=\"liked  fulw\"\n                          >\n                            {isparamVl.user_favourited ? (\n                              <FaHeart />\n                            ) : (\n                              <FaRegHeart />\n                            )}\n                          </button>\n                          <p className=\"likecount\">\n                            {isparamVl.total_favourites}\n                          </p>\n                        </div>\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <div className=\"d-block like_icon\">\n                            <img\n                              className=\"w-100 h-100\"\n                              src={require(\"../assets/images/comment.png\")}\n                              alt=\"img\"\n                            />\n                          </div>\n                          <p className=\"likecount\">{GalleryCommetss.length}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"d-flex flex-column gap-1\">\n                    <ul className=\"usergallery_msg scroll_bar\">\n                      {GalleryCommetss.length === 0 ? (\n                        <li>{t(\"Nocommentsavailable\")}</li>\n                      ) : (\n                        GalleryCommetss.map((comment, index) => (\n                          <li className=\"gap-3\" key={index}>\n                            <div className=\"profile_img\">\n                              <img\n                                className=\"w-100 h-100\"\n                                src={\n                                  comment.makeImagePrivate === 1\n                                    ? require(\"../assets/images/thumb.jpg\") // Default image if the profile image is private\n                                    : comment.profile_image // Use user's profile image if available\n                                    ? comment.profile_image\n                                    : require(\"../assets/images/image3.png\") // Default image if no profile image\n                                }\n                                alt=\"img\"\n                              />\n                            </div>\n                            <div className=\"comment_text d-flex flex-column gap-1\">\n                              <h6>{comment.username}</h6>{\" \"}\n                              {/* Display the commenter's username */}\n                              <p>{comment.description}</p>{\" \"}\n                              {/* Display the comment text */}\n                            </div>\n                            <p>{formateTime(comment.date)}</p>{\" \"}\n                          </li>\n                        ))\n                      )}\n                      <li ref={chatEndRef} />\n                    </ul>\n                    <form\n                      action=\"javascript:void(0)\"\n                      method=\"post\"\n                      onSubmit={handlePostSubmit}\n                    >\n                      {restr_message && (\n                        <span\n                          className=\"text-danger\"\n                          style={{ fontSize: \"14px\" }}\n                        >\n                          {t(\"Your_message_contain\")}\n                        </span>\n                      )}\n                      <div className=\"d-flex align-items-center gap-3 w-100 usergallery_from\">\n                        <div className=\"comment_input w-100 d-flex align-items-center gap-1\">\n                          {spinner && (\n                            <div\n                              className=\"spinner-border text-success postloader\"\n                              role=\"status\"\n                            >\n                              <span className=\"visually-hidden\">\n                                Loading...\n                              </span>\n                            </div>\n                          )}\n                          <input\n                            type=\"hidden\"\n                            value={seperateGallerydetail.id}\n                            name=\"gallery_id\"\n                          />\n                          <div className=\"emoji-container\">\n                            <button\n                              type=\"button\"\n                              className=\"emoji-button\"\n                              onClick={() => setShowPicker(!showPicker)}\n                            >\n                              😀\n                            </button>\n\n                            {showPicker && (\n                              <div\n                                className=\"emoji-picker\"\n                                style={{ position: \"absolute\", top: \"64px\" }}\n                              >\n                                <EmojiPicker onEmojiClick={handleEmojiClick} />\n                              </div>\n                            )}\n                          </div>\n                          <input\n                            type=\"text\"\n                            required\n                            ref={inputRef}\n                            name=\"description\"\n                            value={comments} // Controlled input\n                            onChange={handleCommentChange} // Simplified\n                            onKeyDown={handleKeyDown} // Send on Enter Key\n                            placeholder={`${t(\"write_a_comment\")}`}\n                          />\n\n                          <button\n                            type=\"submit\"\n                            disabled={isButtonDisabled} // Disable button if comment is empty\n                            style={{ opacity: isButtonDisabled ? 0.5 : 1 }}\n                            className=\"comment_postbtn\"\n                          >\n                            {t(\"Post\")}\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n"],"names":["Createnewgallery","_ref","isOpen","onClose","children","LoginData","notification","visibleAlbums","console","log","apiUrl","image","setImage","useState","comments","setComments","UserData","setUserData","showPopSuccess","setShowPopSuccess","showPopError","setShowPopError","successPopMessage","setPopsuccessMessage","errorPopMessage","setPoperrorMessage","errorMessage","setErrorMessage","selectedFile","setSelectedFile","name","setName","description","setDescription","makeImageUse","setmakeImageUse","spinner","setspinner","videoUrl","setVideoUrl","fileType","setFileType","restr_message","setrestr_message","selectedId","setSelectedId","useEffect","storedUsername","localStorage","getItem","userLogin","JSON","parse","async","formData","id","email","res","axios","post","apiUrll","headers","Accept","data","result","err","response","request","error","message","checkuser","getalbum","user_id","convertToPng","file","Promise","resolve","reject","reader","FileReader","onload","event","img","Image","canvas","document","createElement","width","height","getContext","drawImage","toBlob","blob","pngFile","File","replace","type","lastModified","Date","getTime","Error","onerror","src","target","readAsDataURL","restrictedWords","t","useTranslation","savedLanguage","i18n","language","changeLanguage","_jsx","_Fragment","_jsxs","className","onClick","e","classList","contains","SuccessPop","ErrorPop","onSubmit","preventDefault","FormData","append","setTimeout","window","location","reload","action","method","required","onChange","files","isImage","startsWith","isVideo","size","includes","convertedFile","disabled","accept","URL","createObjectURL","alt","controls","style","BsCloudUpload","fontSize","checked","setmakeImageUsechoose","inputValue","value","hasRestrictedWord","some","word","toLowerCase","placeholder","rows","map","album","index","role","Footer","signedup","setsignedup","currentYear","getFullYear","Link","to","dangerouslySetInnerHTML","__html","GDPRPopup","UploadprivatealbumForGallery","closepopup11","images","setImages","visibility","setVisibility","addToAlbum","setAddToAlbum","addToAlbumPass","setAddToAlbumpass","Password","setPassword","albumName","setAlbumName","rightsConfirmed","setRightsConfirmed","setError","successmsg","setsuccessmsg","preebtn","setpreebtn","fileInputRef","useRef","yesNoerror","setYesNoError","alert","forEach","respo","multiple","selectedFiles","validFiles","fileError","supportedImageTypes","length","Array","from","converted","push","ref","color","prev","updatedImages","filter","_","i","current","removeFile","xmlns","viewBox","fill","stroke","class","d","strokeWidth","strokeLinecap","strokeLinejoin","pointerEvents","opacity","Usergallery","isOpen1","onClose1","seperateGallerydetail","UserDetail","getUserfav","GalleryCommets","getCommentPost","GalleryIdDetailGet","galleryData","previousId","nextId","getgallerydetialnext","getgallerydetialprev","isPopupOpen_delete","setisPopupOpen_delete","deleteMessage","setdeleteMessage","chatEndRef","currentIndex","setCurrentIndex","isparamVl","setparamVl","isgallid","setgallid","GalleryCommetss","setGalleryCommetss","input","setInput","inputRef","scrollIntoView","ws","WebSocket","onmessage","receivedMessage","gid","String","gallery_id","galleryIdDetail","total_favourites","user_favourited","prevComments","username","profile_image","makeImagePrivate","date","lastInsertId","close","formateTime","dateString","postDate","isNaN","now","adjustedPostDate","osloPostTime","Intl","DateTimeFormat","timeZone","hour","minute","hour12","format","timeDiff","seconds","Math","floor","minutes","hours","days","weeks","months","years","handleKeyDown","key","nextImage","prevImage","addEventListener","removeEventListener","isButtonDisabled","trim","handlePostSubmit","behavior","id_id","showPicker","setShowPicker","deletePost","deleteev","post_type","AlertDelete","closePopup_delete","onReturnSent","zIndex","FaChevronRight","FaChevronLeft","MediaRenderer","url","title","handledeletebtn","padding","textAlign","minWidth","background","borderRadius","position","top","right","uid","substring","galleryPostLike","FaHeart","FaRegHeart","require","comment","EmojiPicker","onEmojiClick","emojiObject","prevMessage","emoji","focus","onKeyDown"],"sourceRoot":""}