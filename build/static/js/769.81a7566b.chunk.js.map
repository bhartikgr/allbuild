{"version":3,"file":"static/js/769.81a7566b.chunk.js","mappings":"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","sources":["components/Styles/MainHeadStyles.js","components/Users/ModuleSideNav.jsx","components/Users/MainHeader.js","components/Styles/DataRoomStyle.js","components/Users/popup/UploadModal.jsx","pages/User/DataroomDiligence.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\nexport const Wrapper = styled.div`\r\n  input,\r\n  textarea,\r\n  select,\r\n  a,\r\n  p,\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    margin: 0;\r\n    text-decoration: none;\r\n    outline: none;\r\n    word-break: break-word;\r\n    overflow-wrap: break-word;\r\n  }\r\n\r\n  input:focus,\r\n  textarea:focus,\r\n  select:focus {\r\n    outline: none;\r\n    box-shadow: none;\r\n    border-color: inherit;\r\n  }\r\n`;\r\n\r\nexport const SectionWrapper = styled.div`\r\n  display: block;\r\n  padding: 3rem 0; /* py-5 is 3rem top & bottom */\r\n  background-color: #f3f5f7;\r\n  min-height: 100vh;\r\n`;\r\nexport const Tophead = styled.div`\r\n  margin-bottom: auto;\r\n  padding: 15px 0;\r\n  background: var(--primary-color);\r\n  .logo {\r\n    display: inline-block;\r\n    width: 140px;\r\n    img {\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Slan = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  align-items: center;\r\n  margin-left: auto;\r\n  svg {\r\n    stroke: #fff;\r\n    stroke-width: 1.2; /* thinner stroke if needed */\r\n  }\r\n  a {\r\n    display: inline-block;\r\n    color: #fff;\r\n    text-decoration: none;\r\n    flex-shrink: 0;\r\n    font-size: 13px;\r\n    padding: 0px 10px 6px 10px;\r\n    text-transform: capitalize;\r\n\r\n    &:hover {\r\n      background: var(--secondary);\r\n    }\r\n  }\r\n  ,\r\n  select {\r\n    background: #fff;\r\n    color: #111;\r\n    border: none;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n\r\nexport const CenterNav = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: rgb(255, 255, 255);\r\n  height: 100%;\r\n  flex: 1;\r\n  @media (max-width: 991px) {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    position: absolute;\r\n    background: var(--primary-color);\r\n    left: -15px;\r\n    right: -15px;\r\n    top: 65px;\r\n    z-index: 33;\r\n    display: ${({ isOpen }) => (isOpen ? \"flex\" : \"none\")};\r\n  }\r\n`;\r\n\r\nexport const MenuButtonWrapper = styled.div`\r\n  // gap: 15px;\r\n  // button {\r\n  //   margin-left: auto;\r\n  //   background: none;\r\n  //   border: none;\r\n  //   cursor: pointer;\r\n  //   color: #fff;\r\n  //   background: rgb(158, 9, 9);\r\n  display: none;\r\n  //   @media (max-width: 991px) {\r\n  //     display: block;\r\n  //   }\r\n  // }\r\n`;\r\n\r\nexport const NavList = styled.ul`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 1px;\r\n  list-style: none;\r\n  margin: 0;\r\n  padding: 0;\r\n\r\n  @media (max-width: 991px) {\r\n    flex-direction: column;\r\n    gap: 0rem;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const NavItem = styled.li`\r\n  position: relative;\r\n  a {\r\n    color: #fff;\r\n    width: 100%;\r\n    font-size: 13px;\r\n    line-height: 20px;\r\n    text-decoration: none;\r\n    padding: 10px 10px;\r\n    display: block;\r\n    text-transform: capitalize;\r\n    background: #000000;\r\n    &:hover {\r\n      background: var(--primary-color);\r\n      color: #fff;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const NavContainer = styled.nav`\r\n  // display: ${({ isOpen }) => (isOpen ? \"flex\" : \"none\")};\r\n  background: #fff;\r\n  height: 635px;\r\n  overflow-y: auto;\r\n`;\r\n\r\nexport const DropdownToggle = styled.button`\r\n  border: none;\r\n  cursor: pointer;\r\n  color: #fff;\r\n  width: 100%;\r\n  font-size: 13px;\r\n  line-height: 20px;\r\n  text-decoration: none;\r\n  padding: 10px 10px;\r\n  display: block;\r\n  text-transform: capitalize;\r\n  background: #000000;\r\n  text-align: left;\r\n  &:hover {\r\n    background: var(--primary-color);\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nexport const DropdownMenu = styled.ul`\r\n  position: relative;\r\n  top: 100%;\r\n  left: 0;\r\n  // background: rgb(240, 240, 240);\r\n  list-style: none;\r\n  padding: 0;\r\n  // box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);\r\n  z-index: 100;\r\n  flex-direction: column;\r\n  gap: 0px;\r\n  a {\r\n    background: rgb(240, 240, 240);\r\n    color: #000;\r\n    border-bottom: 1px solid rgb(223, 223, 223);\r\n    &:hover {\r\n      background: var(--primary-color);\r\n      color: #fff;\r\n    }\r\n  }\r\n`;\r\nexport const Arrow = styled.span`\r\n  display: inline-block;\r\n  transition: transform 0.3s ease;\r\n  flex-shrink: 0;\r\n  font-size: 20px;\r\n  transform: ${({ isOpen }) => (isOpen ? \"rotate(0deg)\" : \"rotate(-90deg)\")};\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  Tophead,\r\n  Slan,\r\n  CenterNav,\r\n  MenuButtonWrapper,\r\n  NavItem,\r\n  NavList,\r\n  NavContainer,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  Arrow,\r\n} from \"../../components/Styles/MainHeadStyles\";\r\nimport { Globe, Menu } from \"lucide-react\";\r\nimport axios from \"axios\";\r\n\r\nconst menuItems = [\r\n  {\r\n    label: \"Subscription Plan\",\r\n    href: \"/subscription\",\r\n  },\r\n  {\r\n    label: \"Modules\",\r\n    dynamicDropdownKey: \"modules\",\r\n  },\r\n\r\n  {\r\n    label: \"Investor Presentation Structure - Expert Advice Video\",\r\n    href: \"/advicevideos\",\r\n  },\r\n  {\r\n    label: \"Settings\",\r\n    dropdown: [\r\n      {\r\n        label: \"Profile Settings\",\r\n        href: \"/settings/profile\",\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\nexport default function ModuleSideNav({ isOpen }) {\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n  const [userdataa, setuserdataa] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [openDropdown, setOpenDropdown] = useState(null);\r\n  const [getdatamodule, setgetdatamodule] = useState([]);\r\n  const apiURL = \"https://blueprintcatalyst.com/api/api/user/\";\r\n\r\n  useEffect(() => {\r\n    // Check if the username key exists in session storage\r\n    const storedUsername = localStorage.getItem(\"UserLoginData\");\r\n    const userLogin = JSON.parse(storedUsername);\r\n    setuserdataa(userLogin);\r\n\r\n    if (userLogin === null) {\r\n      localStorage.removeItem(\"UserLoginData\");\r\n      navigate(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getModules();\r\n    // Check if there's a previously selected dropdown in storage\r\n    const selectedDropdown = localStorage.getItem(\"selectedDropdown\");\r\n    if (selectedDropdown) {\r\n      setOpenDropdown(Number(selectedDropdown)); // Use Number to parse as integer\r\n    }\r\n  }, []);\r\n\r\n  const getModules = async () => {\r\n    let formData = {\r\n      id: \"\",\r\n    };\r\n    try {\r\n      const res = await axios.post(apiURL + \"getModules\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      setgetdatamodule(res.data.results);\r\n    } catch (err) {\r\n      console.error(\"Error fetching modules:\", err);\r\n    }\r\n  };\r\n\r\n  const toggleDropdown = (index) => {\r\n    const newIndex = openDropdown === index ? null : index;\r\n    setOpenDropdown(newIndex);\r\n\r\n    // Store the selected dropdown in localStorage to keep it after page refresh\r\n    localStorage.setItem(\"selectedDropdown\", newIndex !== null ? newIndex : \"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MenuButtonWrapper>\r\n        <button type=\"button\" onClick={() => setMenuOpen(!menuOpen)}>\r\n          <Menu strokeWidth={2} />\r\n        </button>\r\n      </MenuButtonWrapper>\r\n\r\n      <NavContainer isOpen={isOpen}>\r\n        <NavList>\r\n          {menuItems.map((item, index) => (\r\n            <NavItem key={index}>\r\n              {item.dropdown || item.dynamicDropdownKey ? (\r\n                <>\r\n                  <DropdownToggle onClick={() => toggleDropdown(index)}>\r\n                    <div className=\"d-flex gap-2 align-items-start\">\r\n                      <Arrow isOpen={openDropdown === index}>▾</Arrow>\r\n                      {item.label}\r\n                    </div>\r\n                  </DropdownToggle>\r\n\r\n                  {openDropdown === index && (\r\n                    <DropdownMenu>\r\n                      {/* Static dropdown items */}\r\n                      {item.dropdown &&\r\n                        item.dropdown.map((sub, subIndex) => (\r\n                          <li key={subIndex}>\r\n                            <Link to={sub.href}>{sub.label}</Link>\r\n                          </li>\r\n                        ))}\r\n\r\n                      {/* Dynamic dropdown items */}\r\n                      {item.dynamicDropdownKey === \"modules\" &&\r\n                        getdatamodule.map((modItem, modIndex) => (\r\n                          <li key={modIndex}>\r\n                            {modItem.name === \"DATAROOM AND DUE DILIGENCE\" ? (\r\n                              <Link to=\"/dataroom-Duediligence\">\r\n                                {modItem.name}\r\n                              </Link>\r\n                            ) : (\r\n                              <Link to={`/moduleone/${modItem.id}`}>\r\n                                {modItem.name}\r\n                              </Link>\r\n                            )}\r\n                          </li>\r\n                        ))}\r\n                    </DropdownMenu>\r\n                  )}\r\n                </>\r\n              ) : (\r\n                <Link to={item.href}>{item.label}</Link>\r\n              )}\r\n            </NavItem>\r\n          ))}\r\n        </NavList>\r\n      </NavContainer>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport {\r\n  Tophead,\r\n  Slan,\r\n  CenterNav,\r\n  MenuButtonWrapper,\r\n  NavItem,\r\n  NavList,\r\n} from \"../../components/Styles/MainHeadStyles\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Globe, Menu } from \"lucide-react\";\r\nimport axios from \"axios\";\r\nexport default function MainHeader() {\r\n  const [userdataa, setuserdataa] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [getdatamodule, setgetdatamodule] = useState([]);\r\n  var apiURL = \"https://blueprintcatalyst.com/api/api/user/\";\r\n  useEffect(() => {\r\n    // Check if the username key exists in session storage\r\n    const storedUsername = localStorage.getItem(\"UserLoginData\");\r\n    const userLogin = JSON.parse(storedUsername);\r\n\r\n    setuserdataa(userLogin);\r\n    if (userLogin === null) {\r\n      localStorage.removeItem(\"UserLoginData\");\r\n\r\n      navigate(\"/login\");\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getModules();\r\n  }, []);\r\n\r\n  const getModules = async () => {\r\n    let formData = {\r\n      id: \"\",\r\n    };\r\n    try {\r\n      const res = await axios.post(apiURL + \"getModules\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      });\r\n      setgetdatamodule(res.data.results);\r\n    } catch (err) {}\r\n  };\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  const toggleMenu = () => {\r\n    setMenuOpen(!menuOpen);\r\n  };\r\n  return (\r\n    <>\r\n      <Tophead>\r\n        <div className=\"container-lg\">\r\n          <div className=\"d-flex gap-4 position-relative\">\r\n            <Link href=\"/\" className=\"logo\">\r\n              <img src=\"/assets/user/images/logo.png\" alt=\"logo\" />\r\n            </Link>\r\n            <MenuButtonWrapper>\r\n              <button type=\"button\" onClick={toggleMenu}>\r\n                <Menu strokeWidth={2} />\r\n              </button>\r\n            </MenuButtonWrapper>\r\n\r\n            <Slan>\r\n              <Globe strokeWidth={1.5} />\r\n              <select name=\"\" id=\"\" className=\"form-control\">\r\n                <option value=\"\">Select Language</option>\r\n                <option value=\"\">Mandarin</option>\r\n                <option value=\"\">English</option>\r\n              </select>\r\n              <Link to=\"/logout\" className=\"btn bg-dark py-2 hoverbge\">\r\n                Logout\r\n              </Link>\r\n            </Slan>\r\n          </div>\r\n        </div>\r\n      </Tophead>\r\n    </>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.div`\r\n  input,\r\n  textarea,\r\n  select,\r\n  a,\r\n  p,\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    margin: 0;\r\n    text-decoration: none;\r\n    outline: none;\r\n    word-break: break-word;\r\n    overflow-wrap: break-word;\r\n  }\r\n\r\n  input:focus,\r\n  textarea:focus,\r\n  select:focus {\r\n    outline: none;\r\n    box-shadow: none;\r\n    border-color: inherit;\r\n  }\r\n`;\r\n\r\nexport const DataRoomSection = styled.div`\r\n  background-color: #fff;\r\n  padding: 3rem 1rem;\r\n  color: #000;\r\n`;\r\n\r\n// Title\r\nexport const Title = styled.h2`\r\n  color: #0086bf;\r\n  font-weight: 700;\r\n  font-size: 2rem;\r\n  text-transform: uppercase;\r\n  letter-spacing: 1px;\r\n  margin-bottom: 1rem;\r\n`;\r\n\r\n// Table header cells\r\nexport const TableHeader = styled.th`\r\n  background-color: #000 !important;\r\n  color: #ffff !important;\r\n  text-align: center;\r\n  vertical-align: middle;\r\n  font-size: 13px;\r\n  text-transform: capitalize;\r\n\r\n  &:first-child {\r\n    text-align: start;\r\n  }\r\n`;\r\n\r\n// Table data cells\r\nexport const TableData = styled.td`\r\n  vertical-align: middle;\r\n  text-align: center;\r\n\r\n  h6 {\r\n    font-size: 13px;\r\n    font-weight: 600;\r\n    text-transform: capitalize;\r\n    text-align: start;\r\n    color: #000;\r\n  }\r\n\r\n  h5 {\r\n    font-size: 13px;\r\n    font-weight: 400;\r\n    color: #0086bf;\r\n    text-transform: capitalize;\r\n  }\r\n\r\n  p {\r\n    font-size: 13px;\r\n    color: #000;\r\n    margin: 0;\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\n\r\n// Upload Button\r\nexport const UploadButton = styled.button`\r\n  background-color: #0086bf;\r\n  color: #fff;\r\n  border: none;\r\n  padding: 4px 10px;\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n  text-transform: capitalize;\r\n  cursor: pointer;\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: #000;\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.6);\r\n  z-index: 999;\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n  background: #fff;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  margin: auto;\r\n  border-radius: 8px;\r\n  padding: 2rem;\r\n  position: relative;\r\n`;\r\n\r\nexport const ModalTitle = styled.h3`\r\n  margin-bottom: 1rem;\r\n  color: #0086bf;\r\n  font-weight: bold;\r\n  font-size: 16px;\r\n`;\r\n\r\nexport const CloseButton = styled.button`\r\n  position: absolute;\r\n  top: -30px;\r\n  right: -30px;\r\n  border: none;\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  color: #000;\r\n  cursor: pointer;\r\n  background: #fff;\r\n  height: 40px;\r\n  width: 40px;\r\n  padding: 0 0 5px 0;\r\n  line-height: 0;\r\n  border-radius: 100px;\r\n`;\r\n\r\nexport const DropArea = styled.label`\r\n  border: 2px dashed #0086bf;\r\n  border-radius: 6px;\r\n  padding: 2rem;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  color: #000;\r\n  margin-bottom: 1.5rem;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  input[type=\"file\"] {\r\n    opacity: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const ButtonGroup = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 1rem;\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const ModalBtn = styled.button`\r\n  font-size: 14px;\r\n  padding: 0.6rem 1.2rem;\r\n  font-weight: 600;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: #fff;\r\n  background-color: ${({ variant }) =>\r\n    variant === \"upload\" ? \"#0086bf\" : \"#999\"};\r\n  cursor: pointer;\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: ${({ variant }) =>\r\n      variant === \"upload\" ? \"#a00000\" : \"#777\"};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Overlay,\r\n  ModalContainer,\r\n  ModalTitle,\r\n  CloseButton,\r\n  DropArea,\r\n  ModalBtn,\r\n  ButtonGroup,\r\n} from \"../../Styles/DataRoomStyle.js\";\r\n\r\nconst UploadModal = ({ onClose }) => {\r\n  var apiURL = \"https://blueprintcatalyst.com/api/api/user/\";\r\n\r\n  const handleUpload = async (event) => {\r\n    const file = event.target.files[0]; // just one for now\r\n\r\n    if (!file) return;\r\n\r\n    // send to backend or extract in browser (basic types only like .txt/.doc)\r\n    const formData = new FormData();\r\n    formData.append(\"documents\", file);\r\n\r\n    try {\r\n      const response = await fetch(apiURL + \"uploadDocuments\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      console.log(response);\r\n      const { summary } = await response.json();\r\n      console.log(summary);\r\n      // alert(\"AI Summary:\\n\" + summary);\r\n      onClose();\r\n    } catch (err) {\r\n      alert(\"Failed to upload or process document\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Overlay>\r\n      <ModalContainer>\r\n        <CloseButton onClick={onClose}>×</CloseButton>\r\n        <ModalTitle>Upload documents (POF, PPT, JPG, PNG, EXCEL)</ModalTitle>\r\n        <DropArea>\r\n          <h6>\r\n            <b>Click to select files</b>\r\n          </h6>\r\n          <p>or drag it here.</p>\r\n          <input\r\n            type=\"file\"\r\n            name=\"documents\"\r\n            multiple\r\n            onChange={handleUpload}\r\n          />\r\n        </DropArea>\r\n        <ButtonGroup>\r\n          <ModalBtn onClick={onClose}>Close</ModalBtn>\r\n          <ModalBtn variant=\"upload\">Submit</ModalBtn>\r\n        </ButtonGroup>\r\n      </ModalContainer>\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nexport default UploadModal;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport MainHeader from \"../../components/Users/MainHeader\";\r\nimport ModuleSideNav from \"../../components/Users/ModuleSideNav\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport {\r\n  SectionWrapper,\r\n  Wrapper,\r\n} from \"../../components/Styles/MainHeadStyles.js\";\r\nimport {\r\n  DataRoomSection,\r\n  Title,\r\n  TableHeader,\r\n  TableData,\r\n  UploadButton,\r\n} from \"../../components/Styles/DataRoomStyle.js\";\r\nimport moment from \"moment\";\r\nimport { momentLocalizer } from \"react-big-calendar\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\nimport axios from \"axios\";\r\nimport UploadModal from \"../../components/Users/popup/UploadModal.jsx\";\r\nexport default function DataroomDiligence() {\r\n  const localizer = momentLocalizer(moment);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n\r\n  const [categories, setCategories] = useState([]);\r\n  var apiURL = \"https://blueprintcatalyst.com/api/api/user/\";\r\n  document.title = \"Due diligence Data Room\";\r\n  useEffect(() => {\r\n    const getcategories = async () => {\r\n      let formdata = {\r\n        id: \"\",\r\n      };\r\n      try {\r\n        const res = await axios.post(apiURL + \"getcategories\", formdata, {\r\n          headers: {\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        });\r\n        console.log(res.data.results);\r\n        setCategories(res.data.results);\r\n      } catch (err) {}\r\n    };\r\n    getcategories();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <div className=\"fullpage d-block\">\r\n          <MainHeader />\r\n\r\n          <SectionWrapper className=\"d-block py-5\">\r\n            <div className=\"container-lg\">\r\n              <div className=\"row\">\r\n                <div className=\"col-md-3\">\r\n                  <ModuleSideNav />\r\n                </div>\r\n\r\n                <div className=\"col-md-9\">\r\n                  <DataRoomSection className=\"d-flex flex-column gap-4\">\r\n                    <div className=\"d-block text-center titleroom\">\r\n                      <Title>Due diligence data room</Title>\r\n                    </div>\r\n                    <div className=\"table-responsive\">\r\n                      {categories.map((category) => (\r\n                        <table key={category.id} className=\"table dataroomtab\">\r\n                          <thead>\r\n                            <tr>\r\n                              <TableHeader>{category.name}</TableHeader>\r\n                              <TableHeader>Upload Documents</TableHeader>\r\n                              <TableHeader>Does NOT Exist (N/A)</TableHeader>\r\n                              <TableHeader>\r\n                                Exists but NOT Available\r\n                              </TableHeader>\r\n                              <TableHeader>Provided</TableHeader>\r\n                            </tr>\r\n                          </thead>\r\n                          {category.subcategories &&\r\n                          category.subcategories.length > 0 ? (\r\n                            <tbody>\r\n                              {category.subcategories.map((sub) => (\r\n                                <tr key={sub.id}>\r\n                                  <TableData>\r\n                                    <h6>{sub.name}</h6>\r\n                                  </TableData>\r\n                                  <TableData>\r\n                                    <UploadButton\r\n                                      type=\"button\"\r\n                                      onClick={() => setIsModalOpen(true)}\r\n                                    >\r\n                                      Click to upload\r\n                                    </UploadButton>\r\n                                  </TableData>\r\n                                  <TableData>\r\n                                    <h5>--</h5>\r\n                                  </TableData>\r\n                                  <TableData>\r\n                                    <h5>--</h5>\r\n                                  </TableData>\r\n                                  <TableData>\r\n                                    <p>No</p>\r\n                                  </TableData>\r\n                                </tr>\r\n                              ))}\r\n                            </tbody>\r\n                          ) : (\r\n                            <p>No subcategories</p>\r\n                          )}\r\n                        </table>\r\n                      ))}\r\n                    </div>\r\n                  </DataRoomSection>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </SectionWrapper>\r\n        </div>\r\n      </Wrapper>\r\n      {/* pop up */}\r\n      {isModalOpen && <UploadModal onClose={() => setIsModalOpen(false)} />}\r\n    </>\r\n  );\r\n}\r\n"],"names":["Wrapper","styled","div","SectionWrapper","Tophead","Slan","MenuButtonWrapper","_ref","isOpen","NavList","ul","NavItem","li","NavContainer","nav","_ref2","DropdownToggle","button","DropdownMenu","Arrow","span","_ref3","menuItems","label","href","dynamicDropdownKey","dropdown","ModuleSideNav","menuOpen","setMenuOpen","useState","userdataa","setuserdataa","navigate","useNavigate","openDropdown","setOpenDropdown","getdatamodule","setgetdatamodule","useEffect","storedUsername","localStorage","getItem","userLogin","JSON","parse","removeItem","getModules","selectedDropdown","Number","async","formData","id","res","axios","post","apiURL","headers","Accept","data","results","err","console","error","_jsxs","_Fragment","children","_jsx","type","onClick","Menu","strokeWidth","map","item","index","newIndex","setItem","toggleDropdown","className","sub","subIndex","Link","to","modItem","modIndex","name","MainHeader","src","alt","toggleMenu","Globe","value","DataRoomSection","Title","h2","TableHeader","th","TableData","td","UploadButton","Overlay","ModalContainer","ModalTitle","h3","CloseButton","DropArea","ButtonGroup","ModalBtn","variant","onClose","multiple","onChange","file","event","target","files","FormData","append","response","fetch","method","body","log","summary","json","alert","DataroomDiligence","momentLocalizer","moment","isModalOpen","setIsModalOpen","categories","setCategories","document","title","formdata","getcategories","category","subcategories","length","UploadModal"],"sourceRoot":""}