{"version":3,"file":"static/js/7354.847aabc3.chunk.js","mappings":"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","sources":["components/AlertDelete.jsx","components/MediaRenderer.jsx","components/Notification.jsx","components/SuccessPop.jsx","components/Usergallerynotification.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\n\nexport const AlertDelete = ({ isOpen1, onClose1, message, onReturnSent }) => {\n  const [selectedFriends, setSelectedFriends] = useState([]);\n  const [invMessage, setinvMessage] = useState(\"\");\n  var apiUrl = \"https://backend.amourette.no/\";\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n\n  const handleCheckboxChange = (userId) => {\n    setSelectedFriends((prevSelected) => {\n      if (prevSelected.includes(userId)) {\n        // If already selected, remove from selectedFriends\n        return prevSelected.filter((id) => id !== userId);\n      } else {\n        // If not selected, add to selectedFriends\n        return [...prevSelected, userId];\n      }\n    });\n  };\n\n  const handleDelete = async () => {\n    onReturnSent();\n  };\n\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose1}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"invite_pop delete_pop gallery_pop d-flex flex-column gap-4\">\n            <div className=\"d-flex flex-column gap-2\">\n              <h3>{message}</h3>\n            </div>\n            <form action=\"javascript:void(0)\" method=\"post\">\n              <div className=\"row gy-3 align-items-end\">\n                <div className=\"col-12\">\n                  <div className=\"d-flex align-items-center  justify-content-center gap-4\">\n                    <button\n                      className=\"yes-btn delete_btn\"\n                      type=\"button\"\n                      onClick={handleDelete}\n                    >\n                      Yes\n                    </button>\n                    <button\n                      className=\"no-btn delete_btn\"\n                      type=\"button\"\n                      onClick={onClose1}\n                    >\n                      No\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\r\n\r\nconst MediaRenderer = ({ url, onClick, className }) => {\r\n  const [isImage, setIsImage] = useState(null); // null = loading, true = image, false = video\r\n  const [isIphone, setIsIphone] = useState(false);\r\n  const [base64Image, setBase64Image] = useState(null);\r\n\r\n  // Detect if device is an iPhone\r\n  useEffect(() => {\r\n    const userAgent = navigator.userAgent || \"\";\r\n    if (/iPhone|iPad|iPod/i.test(userAgent)) {\r\n      setIsIphone(true);\r\n    }\r\n  }, []);\r\n\r\n  // Handle image or video loading and optional AVIF to base64 for iPhone\r\n  useEffect(() => {\r\n    if (!url) return;\r\n\r\n    const isAvif = url.endsWith(\".avif\");\r\n\r\n    if (isIphone && isAvif) {\r\n      // Convert AVIF to base64 for iPhone\r\n      fetch(url)\r\n        .then((res) => res.blob())\r\n        .then((blob) => {\r\n          const reader = new FileReader();\r\n          reader.onloadend = () => {\r\n            setBase64Image(reader.result); // base64 string\r\n            setIsImage(true);\r\n          };\r\n          reader.onerror = () => setIsImage(false);\r\n          reader.readAsDataURL(blob);\r\n        })\r\n        .catch(() => setIsImage(false));\r\n    } else {\r\n      const img = new Image();\r\n      img.onload = () => setIsImage(true);\r\n      img.onerror = () => setIsImage(false);\r\n      img.src = url;\r\n    }\r\n  }, [url, isIphone]);\r\n\r\n  if (isImage === null) return <p></p>;\r\n\r\n  return (\r\n    <>\r\n      {isImage ? (\r\n        isIphone && url?.endsWith(\".avif\") ? (\r\n          <img\r\n            src={base64Image || \"\"}\r\n            alt=\"media\"\r\n            className={className}\r\n            style={{ maxWidth: \"100%\" }}\r\n            onClick={onClick}\r\n          />\r\n        ) : (\r\n          <picture>\r\n            {url?.endsWith(\".avif\") && (\r\n              <source srcSet={url} type=\"image/avif\" />\r\n            )}\r\n            <img\r\n              src={\r\n                url?.endsWith(\".avif\")\r\n                  ? url.replace(\".avif\", \".jpg\")\r\n                  : url || \"\"\r\n              }\r\n              alt=\"media\"\r\n              className={className}\r\n              style={{ maxWidth: \"100%\" }}\r\n              onClick={onClick}\r\n            />\r\n          </picture>\r\n        )\r\n      ) : (\r\n        <video controls style={{ maxWidth: \"100%\" }} onClick={onClick}>\r\n          <source src={url || \"\"} />\r\n        </video>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MediaRenderer;\r\n","import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport pe1 from \"../assets/images/pic.png\";\nimport axios from \"axios\";\nimport icon2 from \"../assets/images/bell.png\";\nimport { Usergallerynotification } from \"../components/Usergallerynotification\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\"; // Make sure i18n is imported properly\nfunction Notification({ activeMenu, toggleMenu, refresh }) {\n  var apiUrlnoti = \"https://backend.amourette.no/api/notifications/\";\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n  const [AllfriendId, setAllfriendId] = useState([]);\n  const [totalcount, settotalcount] = useState(\"\");\n  const [notificationsdetail, setnotificationsdetail] = useState([]);\n  const [notificationsdetailtotal, setnotificationsdetailtotal] = useState([]);\n  const [notificationsdetailtest, setnotificationsdetailtest] = useState([]);\n  const [LoginData, setLoginData] = useState(\"\");\n\n  const [page, setPage] = useState(1);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getAllfriends();\n    }, 2000); // Runs every 2 seconds\n\n    return () => clearInterval(interval); // Cleanup on unmount\n  }, []);\n  const getAllfriends = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getAllfriends\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      const friendUserIds = respo.map((friend) => friend.id);\n      setAllfriendId(friendUserIds);\n\n      //const galleries = await getnotifications(friendUserIds);\n      await getnotificationsall(friendUserIds);\n      await getnotificationstotal(friendUserIds);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const [pagenu, setpagenu] = useState(\"1\");\n  const getnotifications = async (userIds, pageNumber = 1) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    const userIdsWithSelf = [...userIds, userLogin.id]; // e.g., [3, 1, 5]\n    const userIdsString = userIdsWithSelf.join(\", \");\n    let formData = {\n      user_ids: userIdsString, // Sending as a string for the query\n      user_id: userLogin.id,\n      pageNumber: pageNumber,\n    };\n    setpagenu(pageNumber);\n    try {\n      const res = await axios.post(apiUrlnoti + \"getnotifications\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      console.log(respo);\n      if (pageNumber === 1) {\n        setnotificationsdetail(respo); // First page, replace notifications\n      } else {\n        setnotificationsdetail((prev) => [...prev, ...respo]); // Append next 20 notifications\n      }\n\n      // Count unread notifications\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getnotificationstotal = async (userIds) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    const userIdsWithSelf = [...userIds, userLogin.id]; // e.g., [3, 1, 5]\n    const userIdsString = userIdsWithSelf.join(\", \");\n    let formData = {\n      user_ids: userIdsString, // Sending as a string for the query\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(\n        apiUrlnoti + \"getnotificationstotal\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      var respo = res.data.results;\n\n      setnotificationsdetailtotal(respo);\n\n      // Count unread notifications\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const getnotificationsall = async (friendUserIds) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    const userIdsWithSelf = [...friendUserIds, userLogin.id]; // e.g., [3, 1, 5]\n    const userIdsString = userIdsWithSelf.join(\", \");\n    let formData = {\n      user_ids: userIdsString, // Sending as a string for the query\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrlnoti + \"getnotificationsall\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      var respo = res.data.results;\n\n      var respocount = res.data.resultcount;\n      setnotificationsdetailtest(respo);\n\n      settotalcount(respocount);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getnotificationsallMessages = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrlnoti + \"getnotificationsallMessages\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      var respo = res.data.results;\n      console.log(respo);\n      //settotalcount(respo.length);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleclicknotification = () => {\n    const nextPage = page + 1; // Increase the page number\n    setPage(nextPage); // Update the state\n    getnotifications(AllfriendId, nextPage); // Fetch next 20 notifications\n  };\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n  //const [activeMenu, setActiveMenu] = useState(null);\n  const handleNotificationToggle = async (menuId) => {\n    //setActiveMenu(activeMenu === menuId ? null : menuId);\n    getnotifications(AllfriendId);\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    const userIdsWithSelf = [...AllfriendId, userLogin.id]; // e.g., [3, 1, 5]\n    const userIdsString = userIdsWithSelf.join(\", \");\n    let formData = {\n      user_ids: userIdsString, // Sending as a string for the query\n      user_id: userLogin.id,\n    };\n    //console.log(formData);\n    try {\n      const res = await axios.post(\n        apiUrlnoti + \"updatenotifications\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      var respo = res.data.results;\n\n      getAllfriends();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n    toggleMenu(menuId);\n  };\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  //Gallery popup\n  const [isPopupOpen1, setIsPopupOpen1] = useState(false);\n  const [seperateGallerydetail, setseperateGallerydetail] = useState(\"\");\n  const [UserDetail, setUserDetail] = useState(\"\");\n  const [GalleryCommets, setGalleryCommets] = useState([]);\n  const [GalleryIdDetailGet, setGalleryIdDetailGet] = useState(\"\");\n  const [nextId, setnextId] = useState(\"\");\n  const [previousId, setpreviousId] = useState(\"\");\n  const closePopup1 = () => {\n    setIsPopupOpen1(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  var apiUrlMember = \"https://backend.amourette.no/api/members/\";\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    setLoginData(userLogin);\n    getUserDetail();\n  }, []);\n  const getUserDetail = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrlMember + \"getUserDetail\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      if (res.data.row.length > 0) {\n        var respo = res.data.row[0];\n        setUserDetail(respo);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getGalleryDetail = async (galleryId) => {\n    console.log(\";ll\");\n    setGalleryIdDetailGet(galleryId);\n    getGalleryComments(galleryId);\n    getGalleryDetailnextprevious(galleryId);\n    let formData = {\n      id: galleryId,\n      user_id: LoginData.id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrlMember + \"getGalleryDetail\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      if (res.data.row.length > 0) {\n        var respo = res.data.row[0];\n        openPopup1();\n        setseperateGallerydetail(respo);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getGalleryDetailnextprevious = async (galleryId) => {\n    let formData = {\n      id: galleryId,\n      user_id: LoginData.id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrlMember + \"getGalleryDetailnextprevious\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n\n      if (res.data.next_gallery_id !== null) {\n        setpreviousId(res.data.next_gallery_id);\n      }\n      if (res.data.previous_gallery_id !== null) {\n        setnextId(res.data.previous_gallery_id);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getUserfav = async () => {\n    getGalleryDetail(GalleryIdDetailGet);\n  };\n  const getCommentPost = async () => {\n    getGalleryDetail(GalleryIdDetailGet);\n  };\n  const getgallerydetialnext = () => {\n    getGalleryDetail(nextId);\n  };\n  const getgallerydetialprev = () => {\n    getGalleryDetail(previousId);\n  };\n  const getGalleryComments = async (g_id) => {\n    let formData = {\n      id: g_id,\n      user_id: LoginData.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getGalleryComments\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      var respo = res.data.results;\n\n      setGalleryCommets(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const openPopup1 = () => {\n    setIsPopupOpen1(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n  var apiUrlp = \"https://backend.amourette.no/api/profile/\";\n  const handleAcceptRequest = async (idd, nid) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    let formData = {\n      id: idd,\n      nid: nid,\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(\n        apiUrlp + \"AcceptRequestnotification\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      getnotifications(AllfriendId, pagenu);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleCancelRequest = async (idd, nid) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      id: idd,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"handlerequestcancel\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      getnotifications(AllfriendId, pagenu);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  //Gallery popup\n  return (\n    <>\n      <div className=\"\">\n        <button\n          type=\"button\"\n          className={`topmenu ${activeMenu === \"menu2\" ? \"active\" : \"\"}`}\n          onClick={() => handleNotificationToggle(\"menu2\")}\n        >\n          {totalcount > 0 && (\n            <span className=\"notinum\">\n              {totalcount > 99 ? \"99+\" : totalcount}\n            </span>\n          )}\n\n          <img src={icon2} alt=\"userp\" />\n        </button>\n        <div\n          className=\"menubox  menuboxnotification\"\n          style={{\n            display: activeMenu === \"menu2\" ? \"block\" : \"none\",\n          }}\n        >\n          <div className=\"d-flex flex-column gap-4\">\n            <h3>{t(\"Notification\")}</h3>\n            {(Array.isArray(notificationsdetail) &&\n              notificationsdetail.length === 2) ||\n            notificationsdetail.length === 1 ||\n            notificationsdetail.length === 3 ? (\n              <div\n                className=\"d-flex flex-column gap-3\"\n                style={{\n                  maxHeight: \"200px\", // Fix height for 4 or more notifications\n                  overflowY: \"auto\", // Enable scrolling\n                }}\n              >\n                {notificationsdetail.length === 0 ? (\n                  <p>{t(\"No_result_found\")}</p>\n                ) : (\n                  <div className=\"d-flex flex-column gap-3 scroll_bar scrollyover\">\n                    {notificationsdetail.map((notification, index) => (\n                      <>\n                        <Link\n                          to={\n                            notification.link_href?.trim() ===\n                              \"/previewimages\" &&\n                            notification.post_id &&\n                            notification.image_url\n                              ? `/previewimages/${\n                                  notification.post_id\n                                }/${encodeURIComponent(notification.image_url)}`\n                              : notification.link_href?.trim() || \"#\"\n                          }\n                          onClick={(e) => {\n                            const trimmedHref = notification.link_href?.trim();\n\n                            // Handle /allgallery\n                            if (\n                              trimmedHref === \"/allgallery\" &&\n                              notification.post_id\n                            ) {\n                              e.preventDefault();\n                              getGalleryDetail(notification.post_id);\n                            }\n\n                            // Handle /editprofile/viewrequest with redirect\n                            if (trimmedHref === \"/editprofile/viewrequest\") {\n                              e.preventDefault();\n                              window.location.href = \"/editprofile/viewrequest\"; // or use navigate(\"/editprofile/viewrequest\") if using useNavigate from react-router\n                            }\n                          }}\n                          className=\"d-flex gap-3\"\n                          key={index}\n                        >\n                          <div className=\"flex-shrink-0\">\n                            <div className=\"iconmenu ofit rounded-circle overflow-hidden\">\n                              <img\n                                src={\n                                  notification.status === \"Admin\"\n                                    ? require(\"../assets/images/thumb.jpg\")\n                                    : notification.recipient_profile_image ||\n                                      pe1\n                                }\n                                alt=\"userpic\"\n                              />\n                            </div>\n                          </div>\n                          <div className=\"flex-grow-1\">\n                            <p>\n                              {notification.status === \"User\" && (\n                                <strong>{notification.recipient_name} </strong>\n                              )}\n                              {notification.status === \"Admin\" && (\n                                <strong>Admin </strong>\n                              )}\n                              {notification.message}\n                            </p>\n                            <p className=\"timeago\">\n                              {formateTime(notification.date)}\n                            </p>\n                          </div>\n                        </Link>\n\n                        {notification.link_href === \"/friends\" &&\n                          notification.request_status === \"No\" && (\n                            <div className=\"d-flex align-items-center gap-2 globe_btn bg-transprent \">\n                              <button\n                                className=\"accept_btn\"\n                                onClick={() =>\n                                  handleAcceptRequest(\n                                    notification.post_id,\n                                    notification.id\n                                  )\n                                }\n                                type=\"button\"\n                              >\n                                {t(\"Accept\")}\n                              </button>\n                              <button\n                                className=\"reject_btn\"\n                                onClick={() =>\n                                  handleCancelRequest(\n                                    notification.post_id,\n                                    notification.id\n                                  )\n                                }\n                                type=\"button\"\n                              >\n                                {t(\"DECLINE_REQUEST\")}\n                              </button>\n                            </div>\n                          )}\n                      </>\n                    ))}\n                  </div>\n                )}\n                {notificationsdetailtotal.length > 5 && (\n                  <div className=\"d-block morebtnnotification\">\n                    <button type=\"button\" onClick={handleclicknotification}>\n                      {t(\"seeprevious\")}\n                    </button>\n                  </div>\n                )}\n              </div>\n            ) : (\n              <div\n                className=\"d-flex flex-column gap-3\"\n                style={{\n                  maxHeight: \"auto\", // Auto height for 3 or fewer notifications\n                  overflowY: \"visible\", // No scrolling needed\n                }}\n              >\n                {notificationsdetail.length === 0 ? (\n                  <p>{t(\"No_result_found\")}</p>\n                ) : (\n                  <div className=\"d-flex flex-column gap-3 scroll_bar scrollyover\">\n                    {notificationsdetail.map((notification, index) => (\n                      <>\n                        <Link\n                          to={\n                            notification.link_href?.trim() ===\n                              \"/previewimages\" &&\n                            notification.post_id &&\n                            notification.image_url\n                              ? `/previewimages/${\n                                  notification.post_id\n                                }/${encodeURIComponent(notification.image_url)}`\n                              : notification.link_href?.trim() || \"#\"\n                          }\n                          onClick={(e) => {\n                            const trimmedHref = notification.link_href?.trim();\n\n                            // Handle /allgallery\n                            if (\n                              trimmedHref === \"/allgallery\" &&\n                              notification.post_id\n                            ) {\n                              e.preventDefault();\n                              getGalleryDetail(notification.post_id);\n                            }\n\n                            // Handle /editprofile/viewrequest with redirect\n                            if (trimmedHref === \"/editprofile/viewrequest\") {\n                              e.preventDefault();\n                              window.location.href = \"/editprofile/viewrequest\"; // or use navigate(\"/editprofile/viewrequest\") if using useNavigate from react-router\n                            }\n                          }}\n                          className=\"d-flex gap-3\"\n                          key={index}\n                        >\n                          <div className=\"flex-shrink-0\">\n                            <div className=\"iconmenu ofit rounded-circle overflow-hidden\">\n                              <img\n                                src={\n                                  notification.status === \"Admin\"\n                                    ? require(\"../assets/images/thumb.jpg\")\n                                    : notification.recipient_profile_image ||\n                                      pe1\n                                }\n                                alt=\"userpic\"\n                              />\n                            </div>\n                          </div>\n                          <div className=\"flex-grow-1\">\n                            <p>\n                              {notification.status === \"User\" && (\n                                <strong>{notification.recipient_name} </strong>\n                              )}\n                              {notification.status === \"Admin\" && (\n                                <strong>Admin </strong>\n                              )}\n                              {notification.message}\n                            </p>\n                            <p className=\"timeago\">\n                              {formateTime(notification.date)}\n                            </p>\n                          </div>\n                        </Link>\n                        {notification.link_href === \"/friends\" &&\n                          notification.request_status === \"No\" && (\n                            <div className=\"d-flex align-items-center gap-2 globe_btn bg-transprent \">\n                              <button\n                                className=\"accept_btn\"\n                                onClick={() =>\n                                  handleAcceptRequest(\n                                    notification.post_id,\n                                    notification.id\n                                  )\n                                }\n                                type=\"button\"\n                              >\n                                {t(\"ACCEPT_REQUEST\")}\n                              </button>\n                              <button\n                                className=\"reject_btn\"\n                                onClick={() =>\n                                  handleCancelRequest(\n                                    notification.post_id,\n                                    notification.id\n                                  )\n                                }\n                                type=\"button\"\n                              >\n                                {t(\"DECLINE_REQUEST\")}\n                              </button>\n                            </div>\n                          )}\n                      </>\n                    ))}\n                  </div>\n                )}\n                {notificationsdetailtotal.length > 5 && (\n                  <div className=\"d-block morebtnnotification\">\n                    <button type=\"button\" onClick={handleclicknotification}>\n                      {t(\"seeprevious\")}\n                    </button>\n                  </div>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <Usergallerynotification\n        isOpen1={isPopupOpen1}\n        onClose1={closePopup1}\n        seperateGallerydetail={seperateGallerydetail}\n        UserDetail={UserDetail}\n        LoginData={LoginData}\n        getUserfav={getUserfav}\n        GalleryCommets={GalleryCommets}\n        getCommentPost={getCommentPost}\n        GalleryIdDetailGet={GalleryIdDetailGet}\n        previousId={previousId}\n        nextId={nextId}\n        getgallerydetialnext={getgallerydetialnext}\n        getgallerydetialprev={getgallerydetialprev}\n      ></Usergallerynotification>\n    </>\n  );\n}\n\nexport default Notification;\n","import React from \"react\";\n\nexport default function SuccessPop({ message }) {\n  return (\n    <>\n      <div className=\"popup-overlay sucess_alert\">\n        <div className=\"popup-content col-md-4\">\n          <div className=\"sucess_meess d-flex flex-column gap-4\">\n            <div className=\"d-block sucess_notification\">\n              <p>{message}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport { FaChevronLeft } from \"react-icons/fa\";\nimport { FaChevronRight } from \"react-icons/fa\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nexport const Usergallerynotification = ({\n  isOpen1,\n  onClose1,\n  children,\n  seperateGallerydetail,\n  UserDetail,\n  LoginData,\n  getUserfav,\n  GalleryCommets,\n  getCommentPost,\n  GalleryIdDetailGet,\n  galleryData,\n  previousId,\n  nextId,\n  getgallerydetialnext,\n  getgallerydetialprev,\n}) => {\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const chatEndRef = useRef(null);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [isparamVl, setparamVl] = useState(seperateGallerydetail);\n  const [isgallid, setgallid] = useState(GalleryIdDetailGet);\n  const [restr_message, setrestr_message] = useState(false);\n  const [GalleryCommetss, setGalleryCommetss] = useState(GalleryCommets);\n  const { t } = useTranslation();\n  const [input, setInput] = useState(\"\");\n  const inputRef = useRef(null);\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  useEffect(() => {\n    setGalleryCommetss(GalleryCommets);\n    setparamVl(seperateGallerydetail);\n    setgallid(GalleryIdDetailGet);\n    if (chatEndRef.current) {\n      chatEndRef.current.scrollIntoView();\n    }\n  }, [GalleryCommets, seperateGallerydetail, GalleryIdDetailGet]);\n\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\"); // Adjust port if needed\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n\n        const gid = String(receivedMessage.gallery_id); // Convert to string\n        const galleryIdDetail = String(GalleryIdDetailGet); // Convert to string as well\n\n        const log = LoginData.id;\n\n        // Check if gid matches the expected GalleryIdDetailGet\n        if (galleryIdDetail === gid) {\n          if (receivedMessage.event === \"GalleryLike\") {\n            console.log(receivedMessage);\n            // Update the local state based on the received message\n            setparamVl((prev) => {\n              if (prev.id === receivedMessage.gallery_id) {\n                return {\n                  ...prev,\n                  total_favourites: receivedMessage.total_favourites,\n                  user_favourited:\n                    log === receivedMessage.user_id\n                      ? receivedMessage.user_favourited // Update user_favourited only if IDs match\n                      : prev.user_favourited, // Toggle the favourited state\n                };\n              }\n              return prev;\n            });\n          }\n          if (receivedMessage.event === \"GalleryPost\") {\n            // Update state with the new comment\n            setGalleryCommetss((prevComments) => [\n              ...prevComments,\n              {\n                user_id: receivedMessage.user_id,\n                username: receivedMessage.username,\n                description: receivedMessage.message,\n                profile_image: receivedMessage.profile_image,\n                makeImagePrivate: receivedMessage.makeImagePrivate,\n                date: receivedMessage.date,\n                lastInsertId: receivedMessage.lastInsertId,\n              },\n            ]);\n          }\n        } else {\n        }\n      } catch (error) {\n        console.error(\"Failed to parse WebSocket message:\", error);\n        console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [LoginData, GalleryIdDetailGet]);\n  //console.log(GalleryCommets);\n  // Ref to the chat container\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n\n  const [comments, setComments] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const onEmojiClick = (event, emojiObject) => {\n    setInput((prevInput) => prevInput + emojiObject.emoji);\n  };\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n  // useEffect(() => {\n  //   if (isOpen1 === true) {\n  //     const handleKeyDown = (event) => {\n  //       if (event.key === \"ArrowRight\") {\n  //         nextImage(previousId); // Move to next image when Right Arrow is pressed\n  //       } else if (event.key === \"ArrowLeft\") {\n  //         prevImage(nextId); // Move to previous image when Left Arrow is pressed\n  //       }\n  //     };\n  //   }\n\n  //   window.addEventListener(\"keydown\", handleKeyDown);\n\n  //   return () => {\n  //     window.removeEventListener(\"keydown\", handleKeyDown);\n  //   };\n  // }, [previousId, nextId]);\n  // Example usage\n\n  const isButtonDisabled = !comments.trim() || restr_message;\n  const handleCommentChange = (e) => {\n    const inputValue = e.target.value;\n\n    // Update the state with the new text (including emojis)\n    setComments(inputValue);\n\n    // If input is completely empty, remove all text and emojis\n    if (inputValue.trim() === \"\") {\n      setComments(\"\");\n    }\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    setrestr_message(hasRestrictedWord);\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const handlePostSubmit = async (e) => {\n    if (e.preventDefault) e.preventDefault(); // Prevent default only if `e` is an actual event\n\n    setspinner(true);\n\n    let formData = {\n      description: e.description || e.target.description.value,\n      gallery_id: e.gallery_id || e.target.gallery_id.value,\n      user_id: LoginData.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"GalleryPostSave\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      //console.log(res.data);\n      setspinner(false);\n      setComments(\"\");\n      getCommentPost();\n      chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const galleryPostLike = async (id) => {\n    let formData = {\n      user_id: LoginData.id,\n      id: id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"galleryPostLike\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      getUserfav(\"\");\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  // Function to handle next image\n  // Function to handle next image\n  const nextImage = (id_id) => {\n    getgallerydetialnext(id_id);\n  };\n\n  // Function to handle previous image\n  const prevImage = (id_id) => {\n    getgallerydetialprev(id_id);\n  };\n  const [showPicker, setShowPicker] = useState(false);\n\n  const handleEmojiClick = (emojiObject) => {\n    // Append emoji to the existing text\n    setComments((prevMessage) => prevMessage + emojiObject.emoji);\n    setShowPicker(false);\n\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  // Update `isparamVl` when `currentIndex` changes\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        onClose1(); // Close the popup when Escape is pressed\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [onClose1]);\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\" && comments.trim() !== \"\") {\n      e.preventDefault();\n\n      handlePostSubmit({\n        description: comments,\n        gallery_id: seperateGallerydetail.id,\n      });\n    }\n  };\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n  const handledeletebtn = () => {\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want to delete this post\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const refreshpopup = async () => {\n    deletePost();\n  };\n  const deletePost = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let deleteev = {\n      user_id: userLogin.id,\n      id: seperateGallerydetail.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"deletePostDashboard\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      setShowPopSuccess(true);\n      setPopsuccessMessage(\"Post deleted successfully\");\n\n      setisPopupOpen_delete(false);\n\n      setTimeout(() => {\n        onClose1();\n        setShowPopSuccess(false);\n      }, 1000);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <AlertDelete\n          isOpen1={isPopupOpen_delete}\n          onClose1={closePopup_delete}\n          message={deleteMessage}\n          onReturnSent={refreshpopup}\n        ></AlertDelete>\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        <div className=\"popup-content col-md-10\">\n          <button\n            className=\"close-button\"\n            style={{ zIndex: \"999\" }}\n            onClick={onClose1}\n          >\n            &times; {/* Close button */}\n          </button>\n\n          <div className=\"usergallery_pop  d-flex flex-column gap-1 h-100\">\n            <div className=\"row p-2 p-md-4\">\n              <div className=\"col-lg-7\">\n                <div className=\"position-relative\">\n                  <div className=\"d-block gallery_im1g \">\n                    {isparamVl.image && typeof isparamVl.image === \"string\" ? (\n                      // Check if the URL ends with a valid image extension\n                      <MediaRenderer\n                        className=\"w-100 h-100\"\n                        url={isparamVl.image}\n                      />\n                    ) : (\n                      // Fallback when `item.image` is undefined or invalid\n                      <p>{t(\"No_avalibale_media\")}</p>\n                    )}\n                  </div>\n                  {userLogin.id === isparamVl.user_id && (\n                    <div className=\"flex-shrink-0 posttopbtns\">\n                      <button\n                        title=\"Delete\"\n                        onClick={handledeletebtn}\n                        type=\"button\"\n                        className=\"btn redbtn\"\n                        style={{\n                          padding: \"0px 0px\",\n                          textAlign: \"center\",\n                          minWidth: \"0px\",\n                          background: \"red\",\n                          width: \"40px\",\n                          height: \"40px\",\n                          borderRadius: \"50px\",\n                          position: \"absolute\",\n                          top: \"10px\",\n                          right: \"15px\",\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"icon icon-tabler textcolor icons-tabler-outline icon-tabler-trash\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M4 7l16 0\" />\n                          <path d=\"M10 11l0 6\" />\n                          <path d=\"M14 11l0 6\" />\n                          <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                          <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n                        </svg>\n                      </button>\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-lg-5\">\n                <div className=\"d-flex h-100 flex-column justify-content-between gap-1\">\n                  <div className=\"d-flex flex-column gap-1 py-3 bordr-bt\">\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <Link to={`/friend/${isparamVl.uid}`}>\n                        {isparamVl.username}\n                      </Link>\n\n                      <h6>{formateTime(isparamVl.date)}</h6>\n                    </div>\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <p>\n                        {isparamVl &&\n                        isparamVl.description &&\n                        isparamVl.description.length > 150\n                          ? isparamVl.description.substring(0, 150) + \"...\"\n                          : isparamVl?.description ||\n                            \"No description available\"}\n                      </p>\n\n                      <div className=\"d-flex align-items-center gap-3 flex-shrink-0\">\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <button\n                            type=\"button\"\n                            onClick={() => galleryPostLike(isparamVl.id)}\n                            className=\"liked  fulw\"\n                          >\n                            {isparamVl.user_favourited ? (\n                              <FaHeart />\n                            ) : (\n                              <FaRegHeart />\n                            )}\n                          </button>\n                          <p className=\"likecount\">\n                            {isparamVl.total_favourites}\n                          </p>\n                        </div>\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <div className=\"d-block like_icon\">\n                            <img\n                              className=\"w-100 h-100\"\n                              src={require(\"../assets/images/comment.png\")}\n                              alt=\"img\"\n                            />\n                          </div>\n                          <p className=\"likecount\">{GalleryCommetss.length}</p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"d-flex flex-column gap-1\">\n                    <ul className=\"usergallery_msg scroll_bar\">\n                      {GalleryCommetss.length === 0 ? (\n                        <li>{t(\"Nocommentsavailable\")}</li>\n                      ) : (\n                        GalleryCommetss.map((comment, index) => (\n                          <li className=\"gap-3\" key={index}>\n                            <div className=\"profile_img\">\n                              <img\n                                className=\"w-100 h-100\"\n                                src={\n                                  comment.makeImagePrivate === 1\n                                    ? require(\"../assets/images/thumb.jpg\") // Default image if the profile image is private\n                                    : comment.profile_image // Use user's profile image if available\n                                    ? comment.profile_image\n                                    : require(\"../assets/images/image3.png\") // Default image if no profile image\n                                }\n                                alt=\"img\"\n                              />\n                            </div>\n                            <div className=\"comment_text d-flex flex-column gap-1\">\n                              <h6>{comment.username}</h6>{\" \"}\n                              {/* Display the commenter's username */}\n                              <p>{comment.description}</p>{\" \"}\n                              {/* Display the comment text */}\n                            </div>\n                            <p>{formateTime(comment.date)}</p>{\" \"}\n                          </li>\n                        ))\n                      )}\n                      <li ref={chatEndRef} />\n                    </ul>\n                    <form\n                      action=\"javascript:void(0)\"\n                      method=\"post\"\n                      onSubmit={handlePostSubmit}\n                    >\n                      {restr_message && (\n                        <span\n                          className=\"text-danger\"\n                          style={{ fontSize: \"14px\" }}\n                        >\n                          {t(\"Your_message_contain\")}\n                        </span>\n                      )}\n                      <div className=\"d-flex align-items-center gap-3 w-100 usergallery_from\">\n                        <div className=\"comment_input w-100 d-flex align-items-center gap-1\">\n                          {spinner && (\n                            <div\n                              className=\"spinner-border text-success postloader\"\n                              role=\"status\"\n                            >\n                              <span className=\"visually-hidden\">\n                                Loading...\n                              </span>\n                            </div>\n                          )}\n                          <input\n                            type=\"hidden\"\n                            value={seperateGallerydetail.id}\n                            name=\"gallery_id\"\n                          />\n                          <div className=\"emoji-container\">\n                            <button\n                              type=\"button\"\n                              className=\"emoji-button\"\n                              onClick={() => setShowPicker(!showPicker)}\n                            >\n                              😀\n                            </button>\n\n                            {showPicker && (\n                              <div\n                                className=\"emoji-picker\"\n                                style={{ position: \"absolute\", top: \"64px\" }}\n                              >\n                                <EmojiPicker onEmojiClick={handleEmojiClick} />\n                              </div>\n                            )}\n                          </div>\n                          <input\n                            type=\"text\"\n                            required\n                            ref={inputRef}\n                            name=\"description\"\n                            value={comments} // Controlled input\n                            onChange={handleCommentChange} // Simplified\n                            onKeyDown={handleKeyDown} // Send on Enter Key\n                            placeholder={`${t(\"write_a_comment\")}`}\n                          />\n\n                          <button\n                            type=\"submit\"\n                            disabled={isButtonDisabled} // Disable button if comment is empty\n                            style={{ opacity: isButtonDisabled ? 1 : 1 }}\n                            className=\"comment_postbtn\"\n                          >\n                            {t(\"Post\")}\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n"],"names":["AlertDelete","_ref","isOpen1","onClose1","message","onReturnSent","selectedFriends","setSelectedFriends","useState","invMessage","setinvMessage","_jsx","_Fragment","children","className","onClick","e","target","classList","contains","_jsxs","action","method","type","async","url","isImage","setIsImage","isIphone","setIsIphone","base64Image","setBase64Image","useEffect","userAgent","navigator","test","isAvif","endsWith","fetch","then","res","blob","reader","FileReader","onloadend","result","onerror","readAsDataURL","catch","img","Image","onload","src","alt","style","maxWidth","srcSet","replace","controls","activeMenu","toggleMenu","refresh","apiUrlnoti","apiUrl","AllfriendId","setAllfriendId","totalcount","settotalcount","notificationsdetail","setnotificationsdetail","notificationsdetailtotal","setnotificationsdetailtotal","notificationsdetailtest","setnotificationsdetailtest","LoginData","setLoginData","page","setPage","interval","setInterval","getAllfriends","clearInterval","storedUsername","localStorage","getItem","formData","user_id","JSON","parse","id","friendUserIds","axios","post","headers","Accept","data","results","map","friend","getnotificationsall","getnotificationstotal","err","response","request","console","error","pagenu","setpagenu","getnotifications","userIds","pageNumber","arguments","length","undefined","userLogin","user_ids","join","respo","log","prev","respocount","resultcount","handleclicknotification","nextPage","formateTime","dateString","postDate","Date","isNaN","getTime","now","adjustedPostDate","osloPostTime","Intl","DateTimeFormat","timeZone","hour","minute","hour12","format","timeDiff","seconds","Math","floor","minutes","hours","days","weeks","months","years","t","useTranslation","savedLanguage","i18n","language","changeLanguage","isPopupOpen1","setIsPopupOpen1","seperateGallerydetail","setseperateGallerydetail","UserDetail","setUserDetail","GalleryCommets","setGalleryCommets","GalleryIdDetailGet","setGalleryIdDetailGet","nextId","setnextId","previousId","setpreviousId","apiUrlMember","getUserDetail","row","getGalleryDetail","galleryId","getGalleryComments","getGalleryDetailnextprevious","openPopup1","next_gallery_id","previous_gallery_id","g_id","document","body","overflowY","handleAcceptRequest","idd","nid","apiUrlp","handleCancelRequest","menuId","handleNotificationToggle","icon2","display","Array","isArray","maxHeight","notification","index","_notification$link_hr","_notification$link_hr2","Link","to","link_href","trim","post_id","image_url","encodeURIComponent","_notification$link_hr3","trimmedHref","preventDefault","window","location","href","status","require","recipient_profile_image","pe1","recipient_name","date","request_status","_notification$link_hr4","_notification$link_hr5","_notification$link_hr6","Usergallerynotification","closePopup1","getUserfav","getCommentPost","getgallerydetialnext","getgallerydetialprev","SuccessPop","galleryData","successPopMessage","setPopsuccessMessage","showPopSuccess","setShowPopSuccess","isPopupOpen_delete","setisPopupOpen_delete","deleteMessage","setdeleteMessage","chatEndRef","useRef","currentIndex","setCurrentIndex","isparamVl","setparamVl","isgallid","setgallid","restr_message","setrestr_message","GalleryCommetss","setGalleryCommetss","input","setInput","inputRef","current","scrollIntoView","ws","WebSocket","onmessage","event","receivedMessage","gid","String","gallery_id","galleryIdDetail","total_favourites","user_favourited","prevComments","username","description","profile_image","makeImagePrivate","lastInsertId","close","comments","setComments","spinner","setspinner","isButtonDisabled","restrictedWords","handlePostSubmit","value","behavior","showPicker","setShowPicker","handleKeyDown","key","addEventListener","removeEventListener","deletePost","deleteev","setTimeout","closePopup_delete","zIndex","image","MediaRenderer","title","handledeletebtn","padding","textAlign","minWidth","background","width","height","borderRadius","position","top","right","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","uid","substring","galleryPostLike","FaHeart","FaRegHeart","comment","ref","onSubmit","fontSize","role","name","EmojiPicker","onEmojiClick","emojiObject","prevMessage","emoji","focus","required","onChange","inputValue","hasRestrictedWord","some","word","toLowerCase","includes","onKeyDown","placeholder","disabled","opacity"],"sourceRoot":""}