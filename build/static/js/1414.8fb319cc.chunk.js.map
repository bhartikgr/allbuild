{"version":3,"file":"static/js/1414.8fb319cc.chunk.js","mappings":"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","sources":["components/MediaRendererFile.jsx","components/Report.jsx","pages/ReceivedMessagesChat.jsx","../node_modules/@tabler/icons-react/src/defaultAttributes.ts","../node_modules/@tabler/icons-react/src/createReactComponent.ts","../node_modules/@tabler/icons-react/src/icons/IconHome.ts"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport fileIcon from \"../assets/images/documents.png\"; // Your default icon\r\n\r\nconst MediaRendererFile = ({ url, onClick, className }) => {\r\n  const [mediaType, setMediaType] = useState(null); // \"image\", \"video\", or \"file\"\r\n  const [isIphone, setIsIphone] = useState(false);\r\n  const [base64Image, setBase64Image] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const userAgent = navigator.userAgent || \"\";\r\n    if (/iPhone|iPad|iPod/i.test(userAgent)) {\r\n      setIsIphone(true);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!url) return;\r\n\r\n    const extension = url.split(\".\").pop().toLowerCase();\r\n    const isAvif = extension === \"avif\";\r\n    const imageTypes = [\"jpg\", \"jpeg\", \"png\", \"gif\", \"webp\", \"avif\"];\r\n    const videoTypes = [\"mp4\", \"webm\", \"ogg\", \"mov\"];\r\n\r\n    if (isIphone && isAvif) {\r\n      fetch(url)\r\n        .then((res) => res.blob())\r\n        .then((blob) => {\r\n          const reader = new FileReader();\r\n          reader.onloadend = () => {\r\n            setBase64Image(reader.result);\r\n            setMediaType(\"image\");\r\n          };\r\n          reader.onerror = () => setMediaType(\"file\");\r\n          reader.readAsDataURL(blob);\r\n        })\r\n        .catch(() => setMediaType(\"file\"));\r\n    } else if (imageTypes.includes(extension)) {\r\n      setMediaType(\"image\");\r\n    } else if (videoTypes.includes(extension)) {\r\n      setMediaType(\"video\");\r\n    } else {\r\n      setMediaType(\"file\");\r\n    }\r\n  }, [url, isIphone]);\r\n\r\n  if (!mediaType) return <></>;\r\n\r\n  return (\r\n    <>\r\n      {mediaType === \"image\" ? (\r\n        isIphone && url.endsWith(\".avif\") ? (\r\n          <img\r\n            src={base64Image || \"\"}\r\n            alt=\"media\"\r\n            className={className}\r\n            style={{ maxWidth: \"100%\" }}\r\n            onClick={onClick}\r\n          />\r\n        ) : (\r\n          <picture>\r\n            {url.endsWith(\".avif\") && <source srcSet={url} type=\"image/avif\" />}\r\n            <img\r\n              src={url.endsWith(\".avif\") ? url.replace(\".avif\", \".jpg\") : url}\r\n              alt=\"media\"\r\n              className={className}\r\n              style={{ maxWidth: \"100%\" }}\r\n              onClick={onClick}\r\n            />\r\n          </picture>\r\n        )\r\n      ) : mediaType === \"video\" ? (\r\n        <video\r\n          controls\r\n          style={{ maxWidth: \"100%\", cursor: \"pointer\" }}\r\n          className={className}\r\n          onClick={onClick}\r\n        >\r\n          <source src={url} />\r\n        </video>\r\n      ) : (\r\n        <Link\r\n          to={url}\r\n          download\r\n          target=\"_blank\"\r\n          title=\"File\"\r\n          rel=\"noopener noreferrer\"\r\n          className=\"h-100 d-inline-block chatfiles\"\r\n        >\r\n          <img src={fileIcon} alt=\"File\" style={{ maxWidth: \"100%\" }} />\r\n        </Link>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MediaRendererFile;\r\n","import React, { useState } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport ErrorPop from \"../components/ErrorPop\";\nexport const Report = ({ isOpen, onClose, children, uid }) => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [spinner, setspinner] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [showPopError, setShowPopError] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [category, setCategory] = useState(\"\"); // State for category\n  const [otherReport, setOtherReport] = useState(\"\"); // State for the 'Other' report text\n\n  var apiUrl = \"https://backend.amourette.no/api/profile/\";\n  if (!isOpen) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose(); // Close the popup if the overlay is clicked\n    }\n  };\n  const handleCategoryChange = (e) => {\n    setCategory(e.target.value);\n  };\n\n  // Handle the 'Other' input change\n  const handleOtherReportChange = (e) => {\n    setOtherReport(e.target.value);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const reportData = category === \"other\" ? otherReport : category; // Use the 'Other' text if selected\n    // Submit the report logic goes here\n    console.log(\"Report Category:\", reportData);\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      to_id: uid,\n      otherReport: otherReport,\n      reportData: reportData,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"userreport\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      console.log(\"block\");\n      console.log(res.data.result.length);\n      //onClose();\n      setShowPopSuccess(true);\n      setPopsuccessMessage(res.data.message);\n      setTimeout(() => {\n        setShowPopSuccess(false);\n        setPopsuccessMessage(\"\");\n        onClose();\n      }, 3000);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        {showPopError && <ErrorPop message={errorPopMessage} />}\n        <div className=\"popup-content col-md-4\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"cneventup  d-flex flex-column gap-4\">\n            <h3>Report</h3>\n            <form action=\"javascript:void(0)\" onSubmit={handleSubmit}>\n              <div className=\"row gy-4\">\n                <div className=\"col-12 \">\n                  <label for=\"\" className=\"mb-2\">\n                    Why are you reporting this?\n                  </label>\n                  <select\n                    name=\"category\"\n                    id=\"\"\n                    required\n                    value={category}\n                    onChange={handleCategoryChange}\n                  >\n                    <option value=\"\">--Select--</option>\n                    <option value=\"Spam\">Spam</option>\n                    <option value=\"Harassment\">Harassment</option>\n                    <option value=\"Offensive Content\">Offensive Content</option>\n                    <option value=\"Fake Account\">Fake Account</option>\n                    <option value=\"Impersonation\">Impersonation</option>\n                    <option value=\"Hate Speech\">Hate Speech</option>\n                    <option value=\"Violence or Threats\">\n                      Violence or Threats\n                    </option>\n                    <option value=\"Adult Content\">Adult Content</option>\n                    <option value=\"Fraudulent Activity\">\n                      Fraudulent Activity\n                    </option>\n                    <option value=\"Scam\">Scam</option>\n                    <option value=\"Inappropriate Username\">\n                      Inappropriate Username\n                    </option>\n                    <option value=\"Privacy Violation\">Privacy Violation</option>\n                    <option value=\"Bullying\">Bullying</option>\n                    <option value=\"other\">Other</option>\n                  </select>\n                </div>\n                {category === \"other\" && (\n                  <div className=\"col-12\">\n                    <label htmlFor=\"otherReport\" className=\"mb-2\">\n                      Please specify your report: <span>*</span>\n                    </label>\n                    <input\n                      type=\"text\"\n                      id=\"otherReport\"\n                      name=\"otherReport\"\n                      value={otherReport}\n                      required={category === \"other\"}\n                      onChange={handleOtherReportChange}\n                      placeholder=\"Enter details about your report\"\n                    />\n                  </div>\n                )}\n\n                <div className=\"col-12\">\n                  <button type=\"submit\">Submit</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Modal, Button } from \"react-bootstrap\";\nimport ev1 from \"../assets/images/in1.png\";\nimport ev2 from \"../assets/images/in2.png\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport Headertwo from \"../components/Headertwo\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport axios from \"axios\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { HiDotsVertical } from \"react-icons/hi\";\nimport { RiHome6Line } from \"react-icons/ri\";\nimport { IconHome } from \"@tabler/icons-react\";\nimport { Report } from \"../components/Report\";\nimport { FaAngleDown } from \"react-icons/fa6\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport MediaRendererFile from \"../components/MediaRendererFile\";\nimport fileIcon from \"../assets/images/documents.png\";\nfunction ReceivedMessagesChat() {\n  const navigate = useNavigate(); // Correctly define the navigate function\n  const [seenn, setSeen] = useState(false); // Track if the function has been called\n  const [arrow, setarrow] = useState(false); // Track if the function has been called\n  const [showMenu, setShowMenu] = useState(false);\n  const [isonlyallbumPublic, setisonlyallbumPublic] = useState([]);\n  const toggleMenu = (index) => {\n    setShowMenu(showMenu === index ? null : index);\n    setShowMenu_Left(false);\n  };\n  const [refreshNotifications, setRefreshNotifications] = useState(true);\n  const inputRef = useRef(null);\n  const [Totalcountmessage, setTotalcountmessage] = useState(\"\");\n  const [ImagesFriends, setImagesFriends] = useState([]);\n  const [VideosFriends, setVideosFriends] = useState([]);\n  const [ImagesFriendsOwn, setImagesFriendsOwn] = useState([]);\n  const [VideosFriendsOwn, setVideosFriendsOwn] = useState([]);\n  const [PasswordId, setPasswordId] = useState(\"\");\n  const [redirectid, setredirectid] = useState(\"\");\n  const [Openpassword, setOpenpassword] = useState(false);\n  const [chooseallId_left, setchooseallId_left] = useState([]);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const chatEndRef = useRef(null); // Ref to the chat container\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [userblock, setuserblock] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [AllFriends, setAllFriends] = useState([]);\n  const apiUrl = \"https://backend.amourette.no/api/members/\";\n  const apiUrlProfile = \"https://backend.amourette.no/api/profile/\";\n  const [message, setMessage] = useState(\"\");\n  const [userdetail, setuserdetail] = useState(\"\");\n  const [messages, setmessages] = useState([]);\n  const [allmessages, setmessagesall] = useState([]);\n  const [LoginData, setLoginData] = useState(null);\n  const [error, seterror] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const [Isfile, setFiles] = useState([]);\n  const [to_id, setto_id] = useState(\"\");\n  const { slug } = useParams();\n  const [showPopError, setShowPopError] = useState(false);\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [isCheckfriend, setCheckfriend] = useState(\"\");\n  const [restr_message, setrestr_message] = useState(false);\n  const [albumdata, setalbumdata] = useState([]);\n  const [userper, setuserper] = useState(false);\n  const [isonlyallbum, setisonlyallbum] = useState([]);\n  const [isonlyallbumfriend, setisonlyallbumfriend] = useState([]);\n  const [UserDetail, setUserDetail] = useState(\"\");\n  const [IdArray, setIdArray] = useState([]);\n  // State to track the active button\n  const [activeIndex, setActiveIndex] = useState(0); // Default to the first button\n  const [searchText, setSearchText] = useState(\"\"); // Search query\n  const [filteredMessages, setFilteredMessages] = useState([]);\n\n  const [offset, setOffset] = useState(0);\n  const [hasMore, setHasMore] = useState(true);\n  const [loadingMore, setLoadingMore] = useState(false);\n\n  const handleButtonClick = (index) => {\n    setActiveIndex(index); // Set the clicked button as active\n  };\n  const chatBoxRef = useRef(null);\n  useEffect(() => {\n    console.log(messages);\n    setFilteredMessages(messages);\n  }, [messages]);\n  const readmessageuser = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    if (to_id !== \"\") {\n      let formData = {\n        to_id: to_id,\n        user_id: userLogin.id,\n      };\n\n      try {\n        const res = await axios.post(apiUrl + \"readmessageuser\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Correct content type for file uploads\n          },\n        });\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n          console.error(\"Response error:\", err.response);\n        } else if (err.request) {\n          console.error(\"Request error:\", err.request);\n        } else {\n          console.error(\"General error:\", err.message);\n        }\n      }\n    }\n  };\n  const isScrolledToBottom = (element) => {\n    return element.scrollHeight - element.scrollTop === element.clientHeight;\n  };\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  // const handleKeyDown = (e) => {\n  //   // Prevent sending automatically when a file is added\n  //   if (e.key === \"Enter\" && !e.shiftKey) {\n  //     if (message.trim() !== \"\" || Isfile.length > 0) {\n  //       e.preventDefault();\n\n  //       // Ensure Enter key is manually pressed, not triggered by state update\n  //       if (document.activeElement === inputRef.current) {\n  //         handleSend();\n  //       }\n  //     }\n  //   }\n  // };\n  useEffect(() => {\n    if (to_id) {\n      fetchMessages(0); // or any logic requiring to_id\n    }\n  }, [to_id]);\n  useEffect(() => {\n    if (slug !== undefined) {\n      const getUserDetails = async (slug) => {\n        const storedUsername = localStorage.getItem(\"userLogin\");\n        const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n        let formData = { slug: slug, user_id: userLogin.id };\n        try {\n          const res = await axios.post(\n            apiUrlProfile + \"getUserSlug\",\n            formData,\n            {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n            }\n          );\n\n          if (res.data.row.length > 0) {\n            var respo = res.data.row[0];\n\n            setto_id(respo.id);\n\n            getUsercheckPermisson(respo.id);\n            getCheckfriend(respo.id);\n            chatsectionUser(respo.id);\n            checkuserblock(respo.id);\n\n            //getAllfriends();\n            console.log(messages);\n            setTimeout(() => {\n              if (chatEndRef.current) {\n                chatEndRef.current.scrollIntoView({\n                  behavior: \"smooth\",\n                  block: \"end\",\n                });\n                hanldeseenmessagenew();\n              }\n            }, 100);\n          } else {\n            navigate(\"/receivedmessages\");\n          }\n        } catch (err) {\n          // Enhanced error handling\n          if (err.response) {\n            console.error(\"Error response:\", err.response);\n          } else if (err.request) {\n            console.error(\"Request data:\", err.request);\n          } else {\n            console.error(\"Error message:\", err.message);\n          }\n        }\n      };\n      getUserDetails(slug);\n    }\n  }, [slug, LoginData]);\n  useEffect(() => {\n    if (to_id !== \"\") {\n      getmessageCount();\n    }\n  }, [to_id]);\n  const getmessageCount = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      to_id: to_id,\n      user_id: userLogin.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getmessageCount\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Correct content type for file uploads\n        },\n      });\n\n      var alldata = res.data.results;\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n      const unreadCount = alldata.filter((item) => item.read === \"No\").length;\n\n      setTotalcountmessage(unreadCount);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request error:\", err.request);\n      } else {\n        console.error(\"General error:\", err.message);\n      }\n    }\n  };\n  const fetchMessages = async (newOffset) => {\n    setLoadingMore(true);\n    console.log(to_id);\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    if (!to_id) {\n      setLoadingMore(false);\n      return;\n    }\n    let formdata = {\n      user_id: userLogin.id,\n      to_id: to_id,\n      offset: newOffset,\n    };\n    const chatBox = chatBoxRef.current;\n    const previousScrollHeight = chatBox?.scrollHeight || 0;\n    try {\n      const res = await axios.post(apiUrl + \"getuserChatmessage\", formdata, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      const newMessages = res.data.results;\n      // if (newMessages.length === 0) {\n      //   setHasMore(false);\n      // } else {\n      //   setmessages((prevMessages) => {\n      //     const existingIds = new Set(prevMessages.map((msg) => msg.id)); // or msg.message_id\n      //     const filteredNewMessages = newMessages.filter(\n      //       (msg) => !existingIds.has(msg.id) // or msg.message_id\n      //     );\n      //     return [...prevMessages, ...filteredNewMessages];\n      //   });\n\n      //   setmessagesall(newMessages);\n      //   setOffset((prev) => prev + newMessages.length);\n      // }\n      //const reversed = [...newMessages].reverse(); // show newest last\n\n      setmessages(newMessages);\n      setFilteredMessages(newMessages);\n      // if (newOffset === 0) {\n      //   const reversed = [...newMessages].reverse(); // show newest last\n\n      //   setmessages(reversed);\n      //   setFilteredMessages(reversed);\n      // } else {\n      //   setFilteredMessages((prevMessages) => {\n      //     const existingIds = new Set(prevMessages.map((msg) => msg.id));\n      //     const filteredNewMessages = newMessages.filter(\n      //       (msg) => !existingIds.has(msg.id)\n      //     );\n\n      //     return [...filteredNewMessages.reverse(), ...prevMessages]; // prepend older messages\n      //   });\n      // }\n      // setOffset((prev) => prev + newMessages.length);\n      setTimeout(() => {\n        //const newScrollHeight = chatBoxRef.scrollHeight;\n        //chatBoxRef.scrollTop = newScrollHeight - previousScrollHeight;\n        // chatEndRef.current?.scrollIntoView({\n        //   behavior: \"smooth\",\n        //   block: \"end\",\n        // });\n        setarrow(false);\n      }, 50);\n    } catch (error) {\n      console.error(\"Error fetching messages\", error);\n    }\n\n    setLoadingMore(false);\n  };\n  const hasScrolledRef = useRef(false); // Ensures scroll runs only once\n\n  useEffect(() => {\n    if (!hasScrolledRef.current && filteredMessages.length > 0) {\n      const chatContainer = chatBoxRef.current;\n      if (chatContainer) {\n        chatContainer.scrollTop = chatContainer.scrollHeight;\n        hasScrolledRef.current = true;\n      }\n    }\n  }, [filteredMessages]);\n\n  const handleScroll = async () => {\n    const chatBox = chatBoxRef.current;\n\n    const bottomThreshold = 50;\n    const distanceFromBottom =\n      chatBox.scrollHeight - chatBox.scrollTop - chatBox.clientHeight;\n    const isAtBottom = distanceFromBottom <= bottomThreshold;\n    // if (chatBoxRef.current && isScrolledToBottom(chatBoxRef.current)) {\n\n    // }\n    const isAtTop = chatBox.scrollTop <= 7;\n    if (isAtTop && hasMore && !loadingMore) {\n      const oldScrollHeight = chatBox.scrollHeight; // ✅ here\n\n      await fetchMessages(offset); // fetch next 10 (older) messages\n\n      // Maintain scroll position after loading more messages\n      // setTimeout(() => {\n      //   const newScrollHeight = chatBox.scrollHeight;\n      //   chatBox.scrollTop = newScrollHeight - oldScrollHeight; // ✅ now it's in scope\n      // }, 1000);\n    }\n    setarrow(isAtBottom);\n    if (isAtBottom) {\n      setarrow(true);\n      hanldeseenmessage();\n      // const storedUsername = localStorage.getItem(\"userLogin\");\n      // const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n      // if (to_id !== \"\") {\n      //   let formData = {\n      //     user_id: userLogin.id,\n      //     to_id: to_id,\n      //   };\n\n      //   try {\n      //     const res = await axios.post(apiUrl + \"messageseen\", formData, {\n      //       headers: {\n      //         Accept: \"application/json\",\n      //         \"Content-Type\": \"application/json\",\n      //       },\n      //     });\n\n      //     if (res.data.status === \"1\") {\n      //       chatsectionUser(to_id);\n      //     }\n      //     getmessageCount();\n      //   } catch (err) {\n      //     // Enhanced error handling\n      //     if (err.response) {\n      //       console.error(\"Error response:\", err.response);\n      //     } else if (err.request) {\n      //       console.error(\"Request data:\", err.request);\n      //     } else {\n      //       console.error(\"Error message:\", err.message);\n      //     }\n      //   }\n      // }\n    } else {\n    }\n  };\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        setSelectedImage(null);\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [setSelectedImage]);\n\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    var st = userLogin.id;\n    if (userLogin && to_id) {\n      // Ensure `to_id` is not empty before updating\n      setIdArray([userLogin.id, to_id]);\n    }\n  }, [to_id]);\n  const updateReadMessagesread = async () => {};\n  const updateReadMessages = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    const lastMessage = allmessages[allmessages.length - 1];\n\n    if (lastMessage !== undefined && lastMessage !== null) {\n      let formData = {\n        user_id: userLogin.id,\n\n        to_id: to_id,\n      };\n      try {\n        const res = await axios.post(apiUrl + \"messageseen\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        if (res.data.status === \"1\") {\n          chatsectionUser(to_id);\n        }\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n          console.error(\"Error response:\", err.response);\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    updateReadMessagesread();\n  }, [messages]);\n  // useEffect(() => {\n  //   const chatBox = chatBoxRef.current;\n  //   if (!chatBox) return;\n\n  //   chatBox.addEventListener(\"scroll\", handleScroll);\n\n  //   return () => {\n  //     chatBox.removeEventListener(\"scroll\", handleScroll);\n  //   };\n  // }, [arrow]);\n\n  useEffect(() => {\n    const chatBox = chatBoxRef.current;\n    if (!chatBox) return;\n\n    chatBox.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      chatBox.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, [arrow, offset, hasMore, loadingMore]);\n\n  // Scroll to the bottom when new messages arrive\n\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    setLoginData(userLogin);\n  }, []); // Remove LoginData from the dependency array to prevent unnecessary calls\n\n  useEffect(() => {\n    const ws = new WebSocket(\"ws://backend.amourette.no\"); // Adjust port if needed\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        if (!receivedMessage) {\n          console.error(\"Received invalid JSON:\", event.data);\n          return;\n        }\n        const senderId = Number(receivedMessage.user_id); // Sender's ID (e.g. 5)\n        const receiverId = Number(receivedMessage.to_id); // Receiver's ID (e.g. 1)\n        const loggedInUserId = Number(LoginData.id); // Currently logged-in user's ID (e.g. 1 or 5)\n\n        var ttt = Number(to_id);\n\n        if (\n          receivedMessage.event === \"DeleteChatMessage\" ||\n          receivedMessage.event === \"DeleteChatMessage_other\"\n        ) {\n          if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n            setMessageFormessage(receivedMessage.id);\n            chatsectionUserRefresh();\n            setRefreshNotifications(true);\n          }\n        }\n        if (receivedMessage.event === \"DeleteChatMessageMultiple\") {\n          if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n            setMessageForultiple(receivedMessage.id);\n            chatsectionUserRefresh();\n            setRefreshNotifications(true);\n          }\n        }\n        if (\n          receivedMessage.event !== \"DeleteChatMessageMultiple\" &&\n          receivedMessage.event !== \"DeleteChatMessage\"\n        ) {\n          if (receivedMessage.event === \"MessageseenScroll\") {\n            if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n              //setto_id(receiverId);\n              getSEndMessagequick(receivedMessage, senderId, receiverId);\n              setRefreshNotifications(true);\n            }\n          }\n          // Ensure message is only seen by the sender or receiver\n          if (receivedMessage.event === \"ChatMessage\") {\n            if (IdArray.includes(senderId) && IdArray.includes(receiverId)) {\n              // setto_id(receiverId);\n              getSEndMessagequick(receivedMessage, senderId, receiverId);\n              setRefreshNotifications(true);\n              //hanldeseenmessagenotscroll();\n              // If the logged-in user is the sender, auto-scroll\n\n              if (loggedInUserId === senderId) {\n                setTimeout(() => {\n                  chatEndRef.current.scrollIntoView({\n                    behavior: \"smooth\",\n                    block: \"end\",\n                  });\n                }, 350);\n              } else {\n              }\n            }\n            // if (loggedInUserId === senderId || loggedInUserId === receiverId) {\n            //   getSEndMessage(receivedMessage, senderId, receiverId);\n            //   setRefreshNotifications(true);\n            //   // If the logged-in user is the sender, auto-scroll\n\n            //   if (loggedInUserId === receiverId) {\n            //     //updateReadMessages();\n            //   }\n            //   if (loggedInUserId === senderId) {\n            //     setTimeout(() => {\n            //       chatEndRef.current.scrollIntoView({\n            //         behavior: \"smooth\",\n            //         block: \"nearest\",\n            //       });\n            //     }, 350);\n            //   } else {\n            //     console.log(\"This is a receiver's message:\", receivedMessage);\n            //   }\n            // } else {\n            //   // Ignore the message for any other users\n            //   console.log(\"Message ignored for this user:\", loggedInUserId);\n            // }\n          }\n        }\n      } catch (error) {\n        console.error(\"Failed to parse WebSocket message:\", error);\n        console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [LoginData, to_id, IdArray]);\n  const getSEndMessagequick = async (form, n, t) => {\n    let formData = {\n      data: form,\n      user_id: n,\n      to_id: t,\n    };\n    console.log(formData, \"que\");\n    try {\n      const res = await axios.post(apiUrl + \"getSEndMessagequick\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Correct content type for file uploads\n        },\n      });\n\n      var alldata = res.data.results;\n      console.log(alldata, \"check\");\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      if (t === userLogin.id) {\n        if (alldata.length > 0) {\n          const unreadCount = alldata.filter(\n            (item) => item.read === \"No\"\n          ).length;\n          console.log(unreadCount);\n          getmessageCount();\n          //setTotalcountmessage(unreadCount);\n        }\n      }\n      // Assuming res.data.results is the array of messages you want to append\n      if (res.data && Array.isArray(res.data.results)) {\n        // Update the messages state with new messages appended\n\n        setmessages((prevMessages) => [...prevMessages, ...res.data.results]);\n        setmessagesall(res.data.results);\n      } else {\n        console.error(\"No valid results found in the response:\", res.data);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request error:\", err.request);\n      } else {\n        console.error(\"General error:\", err.message);\n      }\n    }\n  };\n  const getSEndMessage = async (form, n, t) => {\n    let formData = {\n      data: form,\n      user_id: n,\n      to_id: t,\n    };\n\n    console.log(formData, \"que\");\n    try {\n      const res = await axios.post(apiUrl + \"getSEndMessage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Correct content type for file uploads\n        },\n      });\n\n      var alldata = res.data.results;\n      console.log(alldata, \"check\");\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      if (t === userLogin.id) {\n        if (alldata.length > 0) {\n          const unreadCount = alldata.filter(\n            (item) => item.read === \"No\"\n          ).length;\n\n          getmessageCount();\n        }\n      }\n\n      if (res.data && Array.isArray(res.data.results)) {\n        setTimeout(() => {\n          setmessages((prevMessages) => [...prevMessages, ...res.data.results]);\n          setmessagesall(res.data.results);\n        }, 200);\n      } else {\n        console.error(\"No valid results found in the response:\", res.data);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request error:\", err.request);\n      } else {\n        console.error(\"General error:\", err.message);\n      }\n    }\n  };\n\n  const getUsercheckPermisson = async (toid) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = { slug: slug, user_id: userLogin.id, to_id: toid };\n    console.log(\"kl\", formData);\n    try {\n      const res = await axios.post(\n        apiUrlProfile + \"getUsercheckPermisson\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      console.log(\"kl\", res.data.row);\n      if (res.data.row !== undefined) {\n        var respo = res.data.row[0];\n        setuserdetail(respo);\n      } else {\n        // navigate(\"/receivedmessages\");\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const checkuserblock = async (toidd) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      to_id: toidd,\n    };\n    console.log(formData, \"checkblock\");\n    try {\n      const res = await axios.post(apiUrl + \"checkuserblock\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Correct content type for file uploads\n        },\n      });\n\n      console.log(res.data);\n      if (res.data.result.length > 0) {\n        setuserblock(true);\n      } else {\n        setuserblock(false);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request error:\", err.request);\n      } else {\n        console.error(\"General error:\", err.message);\n      }\n    }\n  };\n  const chatsectionUser = async (id) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    // Ensure LoginData is not null\n    if (!userLogin || !userLogin.id) {\n      console.error(\"Login data is not available\");\n      return; // Exit the function if LoginData is null\n    }\n\n    let formData = {\n      user_id: userLogin.id,\n      to_id: id,\n      offset: 0,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getuserChatmessage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n\n      //setmessages(respo);\n      //setmessagesall(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const chatsectionUserRefresh = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    // Ensure LoginData is not null\n    if (!userLogin || !userLogin.id) {\n      console.error(\"Login data is not available\");\n      return; // Exit the function if LoginData is null\n    }\n\n    let formData = {\n      user_id: userLogin.id,\n      to_id: to_id,\n      offset: 0,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getuserChatmessage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n\n      // setmessages(respo);\n      // setmessagesall(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const setMessageFormessage = (recid) => {\n    setFilteredMessages((prevMessages) =>\n      prevMessages.filter((msg) => msg.id !== recid)\n    );\n  };\n  const setMessageForultiple = (recidArray) => {\n    setFilteredMessages(\n      (prevMessages) =>\n        prevMessages.filter((msg) => !recidArray.includes(msg.id)) // Remove all matching IDs\n    );\n  };\n  const calculateAge = (birthday) => {\n    const birthDate = new Date(birthday);\n    const today = new Date();\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDifference = today.getMonth() - birthDate.getMonth();\n\n    // Adjust age if the birthday hasn't occurred yet this year\n    if (\n      monthDifference < 0 ||\n      (monthDifference === 0 && today.getDate() < birthDate.getDate())\n    ) {\n      age--;\n    }\n\n    return age;\n  };\n  const MAX_FILE_SIZE_MB = 25;\n  const getFileSrc = (fileUrl) => {\n    const allowedExtensions = [\".png\", \".jpg\", \".jpeg\", \".gif\"];\n    return allowedExtensions.some((ext) => fileUrl.endsWith(ext))\n      ? fileUrl\n      : null; // Return null if not an image\n  };\n  const handleFileChange = (e) => {\n    const selectedFiles = Array.from(e.target.files);\n    const validFiles = [];\n    const errorFiles = [];\n\n    selectedFiles.forEach((file) => {\n      if (file.size / 1024 / 1024 <= MAX_FILE_SIZE_MB) {\n        validFiles.push(file);\n      } else {\n        errorFiles.push(file);\n      }\n    });\n\n    if (errorFiles.length > 0) {\n      seterror(\n        `Some files are larger than ${MAX_FILE_SIZE_MB} MB and were not added.`\n      );\n    } else {\n      seterror(\"\");\n    }\n\n    setFiles((prevFiles) => [...prevFiles, ...validFiles]);\n\n    if (inputRef.current) {\n      inputRef.current.focus(); // Focus back to input field\n\n      // Manually trigger Enter key event\n      const event = new KeyboardEvent(\"keydown\", {\n        key: \"Enter\",\n        code: \"Enter\",\n        keyCode: 13,\n        bubbles: true,\n      });\n      inputRef.current.dispatchEvent(event);\n    }\n  };\n\n  const isButtonDisabled =\n    (!message.trim() && Isfile.length === 0) || restr_message; // Enable button if either input is filled\n  const handleInputChange = (e) => {\n    const inputValue = e.target.value;\n    setMessage(inputValue);\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    if (hasRestrictedWord) {\n      setrestr_message(true);\n    } else {\n      setrestr_message(false);\n    }\n  };\n  const removeImage = (index) => {\n    setFiles((prevFiles) => prevFiles.filter((_, i) => i !== index)); // Remove image by index\n  };\n  const MAX_WORDS = 2000;\n  const countWords = (text) => {\n    return text.trim() ? text.split(/\\s+/).length : 0; // Count words by splitting on whitespace\n  };\n  const handleSend = async () => {\n    setShowMenu(false);\n    if (userblock === true) {\n      setShowPopError(true);\n      setPoperrorMessage(\"User is blocked\");\n      setTimeout(() => {\n        setShowPopError(false);\n        setPoperrorMessage(\"\");\n      }, 1500);\n    } else {\n      setarrow(true);\n      const formData = new FormData();\n      setspinner(true);\n      var commentText = message?.trim();\n      console.log(commentText);\n\n      if (commentText !== \"\") {\n        const currentWordCount = countWords(commentText);\n        if (currentWordCount < 2000) {\n          formData.append(\"message\", message);\n          formData.append(\"fileType\", \"chats\");\n          formData.append(\"user_id\", LoginData.id);\n          formData.append(\"to_id\", to_id);\n          Isfile.forEach((file) => {\n            formData.append(\"files\", file); // Use the key 'files' for your backend to handle multiple files\n          });\n\n          console.log(\"Message:\", message);\n          console.log(\"Files:\", Isfile);\n\n          try {\n            const res = await axios.post(apiUrl + \"saveUserChat\", formData, {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"multipart/form-data\", // Correct content type for file uploads\n              },\n            });\n\n            setspinner(false);\n            var respo = res.data;\n            //setMessages((prevMessages) => [...prevMessages, res.data]); // Update messages state\n\n            // Scroll to the bottom of the chat\n            if (chatEndRef.current) {\n              chatEndRef.current.scrollIntoView({\n                behavior: \"smooth\",\n                block: \"end\",\n              });\n            }\n            //await getChatAfterSave();\n            setTimeout(() => {\n              if (chatEndRef.current) {\n                chatEndRef.current.scrollIntoView({\n                  behavior: \"smooth\",\n                  block: \"end\",\n                });\n              }\n              setTimeout(() => {\n                setarrow(true);\n              }, 50);\n            }, 500);\n          } catch (err) {\n            // Enhanced error handling\n            if (err.response) {\n              console.error(\"Response error:\", err.response);\n            } else if (err.request) {\n              console.error(\"Request error:\", err.request);\n            } else {\n              console.error(\"General error:\", err.message);\n            }\n          }\n\n          // Reset message and files after sending\n          setMessage(\"\");\n          setFiles([]);\n        } else {\n          setspinner(false);\n          setShowPopError(true);\n          setPoperrorMessage(\n            `Comment cannot exceed ${MAX_WORDS} words. Currently: ${currentWordCount} words.`\n          );\n          setTimeout(() => {\n            setShowPopError(false);\n            setPoperrorMessage(\"\");\n          }, 1500);\n        }\n      } else {\n        formData.append(\"message\", message);\n        formData.append(\"fileType\", \"chats\");\n        formData.append(\"user_id\", LoginData.id);\n        formData.append(\"to_id\", to_id);\n        Isfile.forEach((file) => {\n          formData.append(\"files\", file); // Use the key 'files' for your backend to handle multiple files\n        });\n\n        console.log(\"Message:\", message);\n        console.log(\"Files:\", Isfile);\n\n        try {\n          const res = await axios.post(apiUrl + \"saveUserChat\", formData, {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"multipart/form-data\", // Correct content type for file uploads\n            },\n          });\n          setspinner(false);\n          var respo = res.data;\n          //setMessages((prevMessages) => [...prevMessages, res.data]); // Update messages state\n\n          // Scroll to the bottom of the chat\n          if (chatEndRef.current) {\n            chatEndRef.current.scrollIntoView({\n              behavior: \"smooth\",\n              block: \"nearest\",\n            });\n          }\n          //await getChatAfterSave();\n          setTimeout(() => {\n            if (chatEndRef.current) {\n              chatEndRef.current.scrollIntoView({\n                behavior: \"smooth\",\n                block: \"nearest\",\n              });\n            }\n          }, 500);\n        } catch (err) {\n          // Enhanced error handling\n          if (err.response) {\n            console.error(\"Response error:\", err.response);\n          } else if (err.request) {\n            console.error(\"Request error:\", err.request);\n          } else {\n            console.error(\"General error:\", err.message);\n          }\n        }\n\n        // Reset message and files after sending\n        setMessage(\"\");\n        setFiles([]);\n      }\n    }\n  };\n  const getCheckfriend = async (id) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      id: id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getCheck_friendUser\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      if (res.data.results.length > 0) {\n        setCheckfriend(true);\n      } else {\n        setCheckfriend(false);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const requestToview = async (albumid) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    if (userblock === true) {\n      setShowPopError(true);\n      setPoperrorMessage(\"User is blocked\");\n      setTimeout(() => {\n        setShowPopError(false);\n        setPoperrorMessage(\"\");\n      }, 1500);\n    } else {\n      let formDataa = {\n        user_id: userLogin.id,\n        to_id: to_id,\n      };\n      console.log(formDataa);\n      try {\n        const res = await axios.post(apiUrl + \"getcheckfriendss\", formDataa, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        var respoo = res.data.is_friend;\n        console.log(respoo);\n        if (respoo === true) {\n          let formData = {\n            user_id: userLogin.id,\n            to_id: to_id,\n            albumid: albumid,\n          };\n          // console.log(formData);\n\n          try {\n            const res = await axios.post(apiUrl + \"requestToview\", formData, {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\", // Correct content type for file uploads\n              },\n            });\n\n            var respo = res.data;\n            if (respo.status === \"2\") {\n              setShowPopSuccess(true);\n              setPopsuccessMessage(\"Request allready sent\");\n            }\n            if (respo.status === \"3\") {\n              // setShowPopSuccess(true);\n              //setPopsuccessMessage(\"Request confirmed.\");\n            }\n            if (respo.status === \"1\") {\n              setShowPopSuccess(true);\n              setPopsuccessMessage(\"Request successfully sent\");\n            }\n            //getUserDetails(slug);\n            //  console.log(respo);\n            setTimeout(() => {\n              setShowPopSuccess(false);\n              setPopsuccessMessage(\"\");\n            }, 1000);\n          } catch (err) {\n            // Enhanced error handling\n            if (err.response) {\n              console.error(\"Response error:\", err.response);\n            } else if (err.request) {\n              console.error(\"Request error:\", err.request);\n            } else {\n              console.error(\"General error:\", err.message);\n            }\n          }\n        } else {\n          setShowPopError(true);\n          setPoperrorMessage(\n            \"You cannot make this request because you are not friend.\"\n          );\n          setTimeout(() => {\n            setShowPopError(false);\n            setPoperrorMessage(\"\");\n          }, 1500);\n        }\n        // console.log(\"cjecl\");\n        // console.log(respo);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          // console.error(\"Request data:\", err.request);\n        } else {\n          //console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n\n  const [isPopupOpen1, setIsPopupOpen1] = useState(false);\n\n  const openPopup1 = () => {\n    setIsPopupOpen1(true);\n    // Disable body scroll when popup is open\n    document.body.style.overflowY = \"hidden\";\n  };\n\n  const closePopup1 = () => {\n    setIsPopupOpen1(false);\n    // Re-enable body scroll when popup is closed\n    document.body.style.overflowY = \"auto\";\n  };\n  const handlereport = async () => {\n    setIsPopupOpen1(true);\n    console.log(\"d\");\n  };\n  const lastMessage = messages[messages.length - 1];\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n\n    console.log(t(\"LeftMenu_yourprofile\")); // Testing translation\n  }, [i18n, t]);\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  var apiUrll = \"https://backend.amourette.no/api/members/\";\n  useEffect(() => {\n    const get_albumStatusonly = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      if (to_id !== \"\") {\n        let formData = {\n          user_id: to_id,\n        };\n\n        try {\n          const res = await axios.post(\n            apiUrll + \"getalbumStatusonly\",\n            formData,\n            {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n              },\n            }\n          );\n          console.log(res.data, \"getalbumStatusonly\");\n          //setisonlyallbum(res.data.results);\n        } catch (err) {\n          // Enhanced error handling\n          if (err.response) {\n          } else if (err.request) {\n            //console.error(\"Request data:\", err.request);\n          } else {\n            //console.error(\"Error message:\", err.message);\n          }\n        }\n      }\n    };\n    get_albumStatusonly();\n  }, [to_id]);\n  useEffect(() => {\n    const getUserDetailsfetch = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        to_id: to_id,\n        user_id: userLogin.id,\n        id: to_id,\n      };\n      //console.log(formData);\n      try {\n        const res = await axios.post(\n          apiUrl + \"getUserDetailMemberOther\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n            },\n          }\n        );\n\n        setisonlyallbum(res.data.results);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          // console.error(\"Request data:\", err.request);\n        } else {\n          // console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    getUserDetailsfetch();\n  }, [to_id]);\n  useEffect(() => {\n    const getalbumStatus = async () => {\n      let formData = {\n        user_id: userdetail.id,\n        status: userdetail.album_setting_status,\n      };\n      console.log(formData, \"fff\");\n      try {\n        const res = await axios.post(apiUrll + \"getalbumStatus\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n\n        setalbumdata(res.data.results);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    getalbumStatus();\n  }, [userdetail]);\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    console.log(\"*****************\", userdetail.id);\n    if (String(userLogin.id) === String(userdetail.id)) {\n      setuserper(true);\n    } else {\n      setuserper(false);\n    }\n  }, [userper, userdetail]);\n  useEffect(() => {\n    const getAllfriendss = async () => {\n      let formData = {\n        user_id: to_id,\n      };\n      console.log(formData);\n      try {\n        const res = await axios.post(apiUrl + \"getAllfriend_s\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        var respo = res.data.results;\n\n        setAllFriends(respo);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    if (to_id !== \"\") {\n      getAllfriendss();\n    }\n  }, [to_id]);\n  // const getAllfriends = async () => {\n  //   let formData = {\n  //     user_id: to_id,\n  //   };\n  //   console.log(formData);\n  //   try {\n  //     const res = await axios.post(apiUrl + \"getAllfriend_s\", formData, {\n  //       headers: {\n  //         Accept: \"application/json\",\n  //         \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n  //       },\n  //     });\n  //     var respo = res.data.results;\n\n  //     setAllFriends(respo);\n  //   } catch (err) {\n  //     // Enhanced error handling\n  //     if (err.response) {\n  //     } else if (err.request) {\n  //       console.error(\"Request data:\", err.request);\n  //     } else {\n  //       console.error(\"Error message:\", err.message);\n  //     }\n  //   }\n  // };\n  const [showPicker, setShowPicker] = useState(false);\n\n  const handleEmojiClick = (emojiObject) => {\n    setMessage((prevMessage) => prevMessage + emojiObject.emoji);\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n    setShowPicker(false); // Hide picker after selecting an emoji\n  };\n  const handlesearchmessage = (e) => {\n    const searchValue = e.target.value.toLowerCase();\n    setSearchText(searchValue);\n\n    if (!searchValue) {\n      setFilteredMessages(messages); // Reset to all messages when search is empty\n      return;\n    }\n\n    const filtered = messages.filter(\n      (chat) =>\n        chat && // Ensure `chat` exists\n        chat.message && // Ensure properties exist\n        chat.message.toLowerCase().includes(searchValue)\n    );\n\n    setFilteredMessages(filtered);\n  };\n  const formatTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Ensure the date string is correctly formatted\n    const postDate = new Date(dateString);\n    if (isNaN(postDate)) return \"Invalid Date\";\n\n    // Adjust time by adding 1 hour (3600000 milliseconds)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Format using Intl.DateTimeFormat with Europe/Oslo timezone\n    const options = {\n      timeZone: \"Europe/Oslo\",\n      day: \"2-digit\",\n      month: \"short\",\n      year: \"numeric\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: true, // Use AM/PM format\n    };\n\n    const formatter = new Intl.DateTimeFormat(\"en-US\", options);\n    return formatter.format(adjustedPostDate);\n  };\n  const handledeletemainpopup = async (id) => {\n    let deleteev = {\n      id: id,\n      user_id: LoginData.id,\n      to_id: to_id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"deletemessagechat\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      setShowMenu(false);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const [chooseallId, setchooseallId] = useState([]);\n  const [showdeletebutton, setshowdeletebutton] = useState(false);\n  const [selectall, setselectall] = useState(false);\n  const handlealldelete = async () => {\n    let deleteev = {\n      id: chooseallId,\n      user_id: LoginData.id,\n      to_id: to_id,\n      other_id: chooseallId_left,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"deletemultiplemessagechat\",\n        deleteev,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      setTimeout(() => {\n        setchooseallId([]);\n        setshowdeletebutton(false);\n        setselectall(false);\n        setchooseallId_left([]);\n        setshowdeletebutton(false);\n      }, 500);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const handleCloseDeletePopup = () => {\n    setShowMenu(false);\n    setShowMenu_Left(false);\n  };\n  const handleallselect = () => {\n    setselectall(!selectall);\n  };\n  const handlechooseAll = (id) => {\n    setchooseallId(\n      (prev) =>\n        prev.includes(id)\n          ? prev.filter((item) => item !== id) // Remove if already selected\n          : [...prev, id] // Add if not selected\n    );\n  };\n  useEffect(() => {\n    if (chooseallId_left.length > 0 || chooseallId.length > 0) {\n      setshowdeletebutton(true);\n    } else {\n      setshowdeletebutton(false);\n    }\n  }, [chooseallId_left, chooseallId]);\n\n  const [showMenu_Left, setShowMenu_Left] = useState(false);\n  const handlechooseAll_left = (id) => {\n    setchooseallId_left(\n      (prev) =>\n        prev.includes(id)\n          ? prev.filter((item) => item !== id) // Remove if already selected\n          : [...prev, id] // Add if not selected\n    );\n  };\n\n  const toggleMenu_Left = (index) => {\n    setShowMenu_Left(showMenu_Left === index ? null : index);\n    setShowMenu(false);\n  };\n  const handledeletemainpopup_Left = async (id) => {\n    let deleteev = {\n      id: id,\n      user_id: LoginData.id,\n      to_id: to_id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"deletemessagechat_Left\",\n        deleteev,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const confirmPassword = (useralbumid, passid) => {\n    setShowPopSuccess(false);\n    setPopsuccessMessage(\"\");\n    setPasswordId(useralbumid);\n    setredirectid(passid);\n    setOpenpassword(true);\n  };\n  useEffect(() => {\n    const getUserDetailsFriends = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n      let formData = {\n        to_id: to_id,\n        user_id: userLogin.id,\n        id: to_id,\n      };\n\n      try {\n        const res = await axios.post(\n          apiUrl + \"getUserDetailsFriends\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\",\n            },\n          }\n        );\n\n        // Extract the images/videos from the API response\n        const mediaList = res.data.results;\n\n        // Initialize empty arrays for images and videos\n        let images = [];\n        let videos = [];\n\n        // Supported image and video extensions\n        const imageExtensions = [\"jpg\", \"jpeg\", \"png\", \"gif\", \"webp\"];\n        const videoExtensions = [\"mp4\", \"mov\", \"avi\", \"mkv\", \"webm\"];\n\n        mediaList.forEach((media) => {\n          if (typeof media.images === \"string\") {\n            let mediaArray = JSON.parse(media.images);\n\n            mediaArray.forEach((file) => {\n              images.push(file);\n            });\n          }\n        });\n        console.log(images);\n        setImagesFriends(images);\n        setVideosFriends(videos);\n      } catch (err) {\n        console.error(\"Error fetching data:\", err);\n      }\n    };\n\n    getUserDetailsFriends();\n  }, [to_id]);\n\n  useEffect(() => {\n    const getUserDetailsOwn = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n      let formData = {\n        to_id: to_id,\n        user_id: userLogin.id,\n        id: to_id,\n      };\n\n      try {\n        const res = await axios.post(apiUrl + \"getUserDetailsOwn\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n\n        // Extract the images/videos from the API response\n        const mediaList = res.data.results;\n\n        // Initialize empty arrays for images and videos\n        let images = [];\n        let videos = [];\n\n        // Supported image and video extensions\n        const imageExtensions = [\"jpg\", \"jpeg\", \"png\", \"gif\", \"webp\"];\n        const videoExtensions = [\"mp4\", \"mov\", \"avi\", \"mkv\", \"webm\"];\n\n        mediaList.forEach((media) => {\n          if (typeof media.images === \"string\") {\n            let mediaArray = JSON.parse(media.images);\n\n            mediaArray.forEach((file) => {\n              images.push(file);\n            });\n          }\n        });\n        setImagesFriendsOwn(images);\n        setVideosFriendsOwn(videos);\n      } catch (err) {\n        console.error(\"Error fetching data:\", err);\n      }\n    };\n\n    getUserDetailsOwn();\n  }, [to_id]);\n  useEffect(() => {\n    const getUserDetailsfetchUserdata = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        to_id: to_id,\n        user_id: userLogin.id,\n        id: to_id,\n      };\n      //console.log(formData);\n      try {\n        const res = await axios.post(apiUrl + \"getUserDetailMember\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n\n        if (res.data.row !== undefined && res.data.row.length > 0) {\n          var respo = res.data.row[0];\n          setUserDetail(respo);\n        } else {\n        }\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          // console.error(\"Request data:\", err.request);\n        } else {\n          // console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    getUserDetailsfetchUserdata();\n  }, [to_id]);\n  const handleModalClose = async () => {\n    setOpenpassword(false);\n  };\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      password: e.target.password.value,\n      user_id: userLogin.id,\n      idd: PasswordId,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"checkprotectedpassword\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      var respo = res.data;\n      console.log(respo);\n      if (respo.status === \"2\") {\n        setShowPopError(true);\n        setPoperrorMessage(respo.message);\n        setTimeout(() => {\n          setShowPopError(\"\");\n        }, 1000);\n      } else {\n        setShowPopSuccess(true);\n        setPopsuccessMessage(respo.message);\n        setTimeout(() => {\n          navigate(`/previewimages/${redirectid}`);\n          setShowPopSuccess(false);\n          setOpenpassword(false);\n          setPopsuccessMessage(\"\");\n        }, 1500);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    const get_albumStatusonlyPublic = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        user_id: to_id,\n      };\n\n      try {\n        const res = await axios.post(\n          apiUrl + \"get_albumStatusonlyPublic\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n            },\n          }\n        );\n        // console.log(res.data.results);\n        setisonlyallbumPublic(res.data.results);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          //console.error(\"Request data:\", err.request);\n        } else {\n          //console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    if (to_id !== \"\") {\n      get_albumStatusonlyPublic();\n    }\n  }, [to_id]);\n  useEffect(() => {\n    const get_albumStatusonlyfriend = async () => {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n      let formData = {\n        user_id: to_id,\n      };\n\n      try {\n        const res = await axios.post(\n          apiUrl + \"get_albumStatusonlyfriend\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n            },\n          }\n        );\n        console.log(res.data.results);\n        setisonlyallbumfriend(res.data.results);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          //console.error(\"Request data:\", err.request);\n        } else {\n          //console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    if (to_id !== \"\") {\n      get_albumStatusonlyfriend();\n    }\n  }, [to_id]);\n\n  const hanldeseenmessage = async () => {\n    // console.log(seenn);\n    if (!to_id || arrow) return;\n    // setSeen(true);\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      to_id: to_id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      console.log(\"ll\");\n      setTimeout(() => {\n        chatEndRef.current.scrollIntoView({\n          behavior: \"smooth\",\n          block: \"end\",\n        });\n      }, 350);\n      getmessageCount();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const hanldeseenmessagenew = async () => {\n    // console.log(seenn);\n    if (!to_id || arrow) return;\n    // setSeen(true);\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      to_id: to_id,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      console.log(\"ll\");\n\n      getmessageCount();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const hanldeseenmessageAll = async () => {\n    if (!to_id) return;\n\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n\n    let formData = {\n      user_id: userLogin.id,\n      to_id: to_id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      // Smooth scroll to bottom\n      const chatContainer = chatBoxRef.current;\n      if (chatContainer) {\n        chatContainer.scrollTop = chatContainer.scrollHeight;\n      }\n\n      // Wait until the scroll animation completes (~300ms)\n      setTimeout(() => {\n        setarrow(true); // Hide the button\n        getmessageCount(); // Optionally refresh message count\n      }, 400);\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Error response:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const hanldeseenmessagenotscroll = async () => {\n    if (to_id !== \"\") {\n      let formData = {\n        user_id: userLogin.id,\n        to_id: to_id,\n      };\n      console.log(formData);\n      try {\n        const res = await axios.post(apiUrl + \"messageseenall\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        setTimeout(() => {\n          setarrow(true);\n        }, 350);\n        getmessageCount();\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n          console.error(\"Error response:\", err.response);\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    }\n  };\n  useEffect(() => {\n    console.log(filteredMessages);\n    if (filteredMessages.length <= 4) {\n      readmessageuser();\n    }\n  }, [filteredMessages]);\n  return (\n    <>\n      <Headertwo refreshNotifications={refreshNotifications} />\n      {showPopError && <ErrorPop message={errorPopMessage} />}\n      {showPopSuccess && <SuccessPop message={successPopMessage} />}\n      <section className=\"inboxblock d-block gapy\">\n        <div className=\"container-lg\">\n          <div className=\"row gy-4\">\n            <div className=\"col-md-3 sticky-md-top h-100  evleft\">\n              <div className=\"d-flex flex-column gap-3 pe-2 \">\n                <h1>Inbox</h1>\n                {/* <div className=\"filtersearch\">\n                  <form action=\"\">\n                    <input type=\"text\" placeholder=\"search groups\" />\n                  </form>\n                </div> */}\n                <div className=\"d-flex flex-column gap-2\">\n                  <Link\n                    to=\"/dashboard\"\n                    className=\"d-flex gap-3 align-items-center listoficons\"\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"userpic userpic_main ofit rounded-circle overflow-hidden ratio-unset\">\n                        <IconHome\n                          stroke={1}\n                          className=\"w-100 h-100 main_homei\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <h4>{t(\"Home\")}</h4>\n                    </div>\n                  </Link>\n                  <Link\n                    to=\"/receivedmessages\"\n                    className={`d-flex gap-2 align-items-center filterlist ${\n                      activeIndex === 1 ? \"active\" : \"\"\n                    }`}\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"eventicon fulw\">\n                        <img src={ev1} alt=\"eventicon\" />\n                      </div>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <h3>{t(\"Received_messages\")}</h3>\n                    </div>\n                  </Link>\n                  <Link\n                    to=\"/sendmessages\"\n                    className={`d-flex gap-2 align-items-center filterlist ${\n                      activeIndex === 1 ? \"\" : \"\"\n                    }`}\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"eventicon fulw\">\n                        <img src={ev2} alt=\"eventicon\" />\n                      </div>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <h3>{t(\"Sent_messages\")}</h3>\n                    </div>\n                  </Link>\n\n                  <hr className=\"linehr\" />\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-9\">\n              <div className=\"row gy-4\">\n                <div className=\"col-lg-8\">\n                  <div className=\"d-flex flex-column gap-0 chat_box\">\n                    <div className=\"d-flex align-items-sm-center gap-3 mess_head\">\n                      <Link\n                        target=\"_blank\"\n                        to={`/friend/${userdetail.id}`}\n                        className=\"d-block chat_profile\"\n                      >\n                        {userdetail.profile_image ? ( // Display the image URL if available\n                          <img\n                            className=\"w-100 h-100\"\n                            src={userdetail.profile_image} // Use the URL from the member object\n                            alt=\"userpic\"\n                          />\n                        ) : (\n                          <img\n                            className=\"w-100 h-100\"\n                            src={require(\"../assets/images/thumb.jpg\")} // Default image if profile image is not available\n                            alt=\"userpic\"\n                          />\n                        )}\n                      </Link>\n                      <div className=\"d-flex align-items-sm-center flex-sm-row flex-column justify-content-between w-100 gap-2 chat_name\">\n                        <div className=\"d-flex flex-column gap-3\">\n                          <div className=\"d-flex flex-column gap-3\">\n                            <div className=\"d-flex flex-column gap-1\">\n                              <div className=\"d-flex align-items-sm-center gap-2\">\n                                <div className=\"newclass\">\n                                  <Link\n                                    target=\"_blank\"\n                                    className=\"unamecolor\"\n                                    to={`/friend/${userdetail.id}`}\n                                  >\n                                    {userdetail.username}\n                                  </Link>\n                                </div>\n                                ,\n                                <h3>\n                                  {userdetail.birthday_date != null\n                                    ? `${calculateAge(\n                                        userdetail.birthday_date\n                                      )}`\n                                    : \"\"}\n                                </h3>\n                              </div>\n                              <h5>{userdetail.location}</h5>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"d-flex flex-column justify-content-end align-items-end gap-2\">\n                          <div className=\"search-box\">\n                            <i className=\"fas fa-search\"></i>\n                            <input\n                              type=\"search\"\n                              placeholder={t(\"search\")}\n                              onInput={(e) => handlesearchmessage(e)}\n                            />\n                          </div>\n                          <div className=\"d-flex align-items-center gap-2 message_s-btn\">\n                            {showdeletebutton && (\n                              <button\n                                className=\"deltebtn\"\n                                type=\"button\"\n                                onClick={handlealldelete}\n                              >\n                                {t(\"delete\")}\n                              </button>\n                            )}\n                            <button\n                              className={`select_btn ${\n                                selectall ? \"active\" : \"\"\n                              }`}\n                              type=\"button\"\n                              onClick={handleallselect}\n                            >\n                              {t(\"Select\")}\n                            </button>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    <div\n                      className=\"mess_box_main\"\n                      ref={chatBoxRef}\n                      style={{\n                        maxHeight: \"56vh\",\n                        overflow: \"auto\",\n                        display: \"flex\",\n                        flexWrap: \"wrap\",\n                        justifyContent: \"end\",\n                        position: \"relative\",\n                      }}\n                    >\n                      <div className=\"mess_box d-flex flex-column gap-3 justify-content-end w-100\">\n                        {loadingMore && (\n                          <div className=\"text-center w-100 py-2\">\n                            <span\n                              className=\"spinner-border text-success spinner-border-sm\"\n                              role=\"status\"\n                              aria-hidden=\"true\"\n                            ></span>\n                          </div>\n                        )}\n                        {filteredMessages.length === 0 ? (\n                          <div className=\"empty-chat-message\">\n                            <p>{t(\"No_messages_to_display\")}</p>\n                          </div>\n                        ) : (\n                          filteredMessages.map((chat, index) => (\n                            <div\n                              className=\"j\"\n                              key={index}\n                              ref={\n                                index === filteredMessages.length - 1\n                                  ? chatEndRef\n                                  : null\n                              }\n                            >\n                              {chat.user_id === LoginData.id ? (\n                                // Right-aligned messages (sent by the logged-in user)\n                                <>\n                                  <div className=\"main_mess right_mess d-flex align-items-end gap-2 flex-column\">\n                                    {/* Render the profile image only if there are files */}\n                                    {Array.isArray(JSON.parse(chat.file)) &&\n                                      JSON.parse(chat.file).length > 0 && (\n                                        <>\n                                          {/* Show profile image only for the first file */}\n                                          {index === 0 && (\n                                            <Link\n                                              to={`/friend/${chat.user1_id}`}\n                                              target=\"_blank\"\n                                              className=\"d-block mess_profile\"\n                                            >\n                                              <img\n                                                className=\"w-100 h-100 pr\"\n                                                src={\n                                                  chat.user1_makeImagePrivate ===\n                                                  1\n                                                    ? require(\"../assets/images/thumb.jpg\")\n                                                    : chat.user1_profile\n                                                }\n                                                alt=\"profile\"\n                                              />\n                                            </Link>\n                                          )}\n\n                                          {JSON.parse(chat.file).map(\n                                            (f, fileIndex) => {\n                                              const fileSrc = getFileSrc(f);\n\n                                              return (\n                                                <div\n                                                  className=\"message d-block send_image\"\n                                                  key={fileIndex}\n                                                >\n                                                  {fileSrc ? (\n                                                    // If it's an image, display it\n\n                                                    <>\n                                                      <div className=\"d-flex align-items-start gap-1 h-100\">\n                                                        <div\n                                                          style={{\n                                                            position:\n                                                              \"relative\",\n                                                            display:\n                                                              \"inline-block\",\n                                                          }}\n                                                        >\n                                                          <button\n                                                            className=\"remove_mess\"\n                                                            onClick={() =>\n                                                              toggleMenu(index)\n                                                            }\n                                                          >\n                                                            <HiDotsVertical />\n                                                          </button>\n\n                                                          {showMenu ===\n                                                            index && (\n                                                            <ul className=\"popup-menu\">\n                                                              <li\n                                                                onClick={() =>\n                                                                  handledeletemainpopup(\n                                                                    chat.id\n                                                                  )\n                                                                }\n                                                              >\n                                                                {t(\"Remove\")}\n                                                              </li>\n                                                              <li\n                                                                onClick={\n                                                                  handleCloseDeletePopup\n                                                                }\n                                                              >\n                                                                {t(\"Cancel\")}\n                                                              </li>\n                                                            </ul>\n                                                          )}\n                                                        </div>\n                                                        <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                          <div className=\"d-flex align-items-start gap-1 1\">\n                                                            <img\n                                                              className=\"w-100 h-100 d\"\n                                                              src={fileSrc}\n                                                              alt={`file-${fileIndex}`}\n                                                              onClick={() =>\n                                                                setSelectedImage(\n                                                                  fileSrc\n                                                                )\n                                                              }\n                                                              style={{\n                                                                cursor:\n                                                                  \"pointer\",\n                                                              }}\n                                                            />\n                                                            {selectall && (\n                                                              <input\n                                                                type=\"checkbox\"\n                                                                checked={chooseallId.includes(\n                                                                  chat.id\n                                                                )}\n                                                                onChange={() =>\n                                                                  handlechooseAll(\n                                                                    chat.id\n                                                                  )\n                                                                }\n                                                              />\n                                                            )}\n                                                          </div>\n                                                          <span>\n                                                            {formatTime(\n                                                              chat.date\n                                                            )}\n                                                          </span>\n                                                        </div>\n                                                      </div>\n                                                    </>\n                                                  ) : (\n                                                    <>\n                                                      <div className=\"d-flex align-items-start gap-1 h-100\">\n                                                        <div\n                                                          style={{\n                                                            position:\n                                                              \"relative\",\n                                                            display:\n                                                              \"inline-block\",\n                                                          }}\n                                                        >\n                                                          <button\n                                                            className=\"remove_mess\"\n                                                            onClick={() =>\n                                                              toggleMenu(index)\n                                                            }\n                                                          >\n                                                            <HiDotsVertical />\n                                                          </button>\n\n                                                          {showMenu ===\n                                                            index && (\n                                                            <ul className=\"popup-menu\">\n                                                              <li\n                                                                onClick={() =>\n                                                                  handledeletemainpopup(\n                                                                    chat.id\n                                                                  )\n                                                                }\n                                                              >\n                                                                {t(\"Remove\")}\n                                                              </li>\n                                                              <li\n                                                                onClick={\n                                                                  handleCloseDeletePopup\n                                                                }\n                                                              >\n                                                                {t(\"Cancel\")}\n                                                              </li>\n                                                            </ul>\n                                                          )}\n                                                        </div>\n                                                        <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                          <div className=\"d-flex align-items-start gap-1 2\">\n                                                            <MediaRendererFile\n                                                              url={f}\n                                                              onClick={() =>\n                                                                setSelectedImage(\n                                                                  f\n                                                                )\n                                                              }\n                                                            />\n                                                            {selectall && (\n                                                              <input\n                                                                type=\"checkbox\"\n                                                                checked={chooseallId.includes(\n                                                                  chat.id\n                                                                )}\n                                                                onChange={() =>\n                                                                  handlechooseAll(\n                                                                    chat.id\n                                                                  )\n                                                                }\n                                                              />\n                                                            )}\n                                                          </div>\n                                                          <span>\n                                                            {formatTime(\n                                                              chat.date\n                                                            )}\n                                                          </span>\n                                                        </div>\n                                                      </div>\n                                                    </>\n                                                  )}\n                                                </div>\n                                              );\n                                            }\n                                          )}\n                                        </>\n                                      )}\n                                  </div>\n\n                                  {chat.message && chat.message !== \"null\" && (\n                                    <div className=\"main_mess right_mess d-flex align-items-center gap-2\">\n                                      <Link\n                                        to={`/friend/${chat.user1_id}`}\n                                        target=\"_blank\"\n                                        className=\"d-block mess_profile ri\"\n                                      >\n                                        <img\n                                          className=\"w-100 h-100 ri\"\n                                          src={\n                                            chat.user1_makeImagePrivate === 1\n                                              ? require(\"../assets/images/thumb.jpg\")\n                                              : chat.user1_profile\n                                          }\n                                          alt=\"profile\"\n                                        />\n                                      </Link>\n                                      <div className=\" d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                        <div className=\"d-flex align-items-start gap-0\">\n                                          <div\n                                            style={{\n                                              position: \"relative\",\n                                              display: \"inline-block\",\n                                            }}\n                                          >\n                                            <button\n                                              className=\"remove_mess\"\n                                              onClick={() => toggleMenu(index)}\n                                            >\n                                              <HiDotsVertical />\n                                            </button>\n\n                                            {showMenu === index && (\n                                              <ul className=\"popup-menu align-items-end\">\n                                                <li\n                                                  onClick={() =>\n                                                    handledeletemainpopup(\n                                                      chat.id\n                                                    )\n                                                  }\n                                                >\n                                                  {t(\"Remove\")}\n                                                </li>\n                                                <li\n                                                  onClick={\n                                                    handleCloseDeletePopup\n                                                  }\n                                                >\n                                                  {t(\"Cancel\")}\n                                                </li>\n                                              </ul>\n                                            )}\n                                          </div>\n                                          <div className=\"d-flex align-items-start gap-1 3\">\n                                            <p className=\"message\">\n                                              {chat.message}\n                                            </p>\n                                            {selectall && (\n                                              <input\n                                                type=\"checkbox\"\n                                                checked={chooseallId.includes(\n                                                  chat.id\n                                                )}\n                                                onChange={() =>\n                                                  handlechooseAll(chat.id)\n                                                }\n                                              />\n                                            )}\n                                          </div>\n                                        </div>\n\n                                        <span>{formatTime(chat.date)}</span>\n                                      </div>\n                                    </div>\n                                  )}\n                                </>\n                              ) : (\n                                // Left-aligned messages (received from other users)\n                                <>\n                                  <div className=\"main_mess left_mess d-flex align-items-start gap-2 flex-column \">\n                                    {/* Check if chat.file is valid and has files */}\n                                    {Array.isArray(JSON.parse(chat.file)) &&\n                                      JSON.parse(chat.file).length > 0 && (\n                                        <>\n                                          {/* Show profile image only for the first file */}\n                                          {index === 0 && (\n                                            <Link\n                                              to={`/friend/${chat.user1_id}`}\n                                              target=\"_blank\"\n                                              className=\"d-block mess_profile le  flex-shrink-0\"\n                                            >\n                                              <img\n                                                className=\"w-100 h-100 d\"\n                                                src={\n                                                  chat.user1_makeImagePrivate ===\n                                                  1\n                                                    ? require(\"../assets/images/thumb.jpg\")\n                                                    : chat.user1_profile\n                                                }\n                                                alt=\"profile\"\n                                              />\n                                            </Link>\n                                          )}\n\n                                          {JSON.parse(chat.file).map(\n                                            (f, fileIndex) => {\n                                              const fileSrc = getFileSrc(f);\n\n                                              return (\n                                                <div\n                                                  className=\"message d-block send_image\"\n                                                  key={fileIndex}\n                                                >\n                                                  {fileSrc ? (\n                                                    <>\n                                                      <div className=\"d-flex align-items-start gap-1 h-100\">\n                                                        <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                          <div className=\"d-flex align-items-start gap-1 4\">\n                                                            <img\n                                                              className=\"w-100 h-100 d\"\n                                                              src={fileSrc}\n                                                              alt={`file-${fileIndex}`}\n                                                              onClick={() =>\n                                                                setSelectedImage(\n                                                                  fileSrc\n                                                                )\n                                                              }\n                                                              style={{\n                                                                cursor:\n                                                                  \"pointer\",\n                                                              }}\n                                                            />\n                                                          </div>\n                                                          <span>\n                                                            {formatTime(\n                                                              chat.date\n                                                            )}\n                                                          </span>\n                                                        </div>\n                                                      </div>\n                                                    </>\n                                                  ) : (\n                                                    <>\n                                                      <div className=\"d-flex align-items-start gap-1 h-100\">\n                                                        <div className=\"d-flex flex-column gap-1 justify-content-end align-items-end\">\n                                                          <div className=\"d-flex align-items-start gap-1 5\">\n                                                            <MediaRendererFile\n                                                              url={f}\n                                                              onClick={() =>\n                                                                setSelectedImage(\n                                                                  f\n                                                                )\n                                                              }\n                                                            />\n                                                          </div>\n                                                          <span>\n                                                            {formatTime(\n                                                              chat.date\n                                                            )}\n                                                          </span>\n                                                        </div>\n                                                      </div>\n                                                    </>\n                                                  )}\n                                                </div>\n                                              );\n                                            }\n                                          )}\n                                        </>\n                                      )}\n                                  </div>\n\n                                  {chat.message && chat.message !== \"null\" && (\n                                    <div className=\"main_mess left_mess d-flex align-items-center gap-2\">\n                                      <Link\n                                        to={`/friend/${chat.user1_id}`}\n                                        target=\"_blank\"\n                                        className=\"d-block mess_profile le  flex-shrink-0\"\n                                      >\n                                        <img\n                                          className=\"w-100 h-100 pr\"\n                                          src={\n                                            chat.user1_makeImagePrivate === 1\n                                              ? require(\"../assets/images/thumb.jpg\")\n                                              : chat.user1_profile\n                                          }\n                                          alt=\"profile\"\n                                        />\n                                      </Link>\n                                      <div className=\" d-flex flex-column gap-1 justify-content-start align-items-start\">\n                                        {/* <div className=\"d-flex align-items-start gap-0\">\n                                                                                    <p className=\"message\">{chat.message}</p>\n                                                                                  </div> */}\n                                        <div className=\"d-flex align-items-start gap-0\">\n                                          <div className=\"d-flex align-items-start gap-1 6\">\n                                            <p className=\"message\">\n                                              {chat.message}\n                                            </p>\n                                          </div>\n                                        </div>\n\n                                        <span>{formatTime(chat.date)}</span>\n                                      </div>\n                                    </div>\n                                  )}\n                                </>\n                              )}\n                            </div>\n                          ))\n                        )}\n                      </div>\n\n                      {filteredMessages.length > 4 && !arrow && (\n                        <button\n                          className=\"newmessagearrow\"\n                          type=\"button\"\n                          onClick={hanldeseenmessageAll}\n                        >\n                          <FaAngleDown />\n                          {Totalcountmessage > 0 && (\n                            <span>{Totalcountmessage}</span>\n                          )}\n                        </button>\n                      )}\n                    </div>\n                    {selectedImage && (\n                      <div\n                        className=\"p-5\"\n                        style={{\n                          position: \"fixed\",\n                          top: 0,\n                          left: 0,\n                          width: \"100%\",\n                          height: \"100%\",\n                          backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n                          display: \"flex\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          zIndex: 989898,\n                        }}\n                        onClick={() => setSelectedImage(null)} // Close when clicked outside\n                      >\n                        <div className=\"rel d-block h-100\">\n                          <button type=\"button\" className=\"closebtnpic\">\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width={24}\n                              height={24}\n                              viewBox=\"0 0 24 24\"\n                              fill=\"none\"\n                              stroke=\"currentColor\"\n                              strokeWidth={2}\n                              strokeLinecap=\"round\"\n                              strokeLinejoin=\"round\"\n                              className=\"icon icon-tabler icons-tabler-outline icon-tabler-x\"\n                            >\n                              <path\n                                stroke=\"none\"\n                                d=\"M0 0h24v24H0z\"\n                                fill=\"none\"\n                              />\n                              <path d=\"M18 6l-12 12\" />\n                              <path d=\"M6 6l12 12\" />\n                            </svg>\n                          </button>\n                          <MediaRenderer\n                            className=\"w-100 h-100 object-fit-cover\"\n                            url={selectedImage}\n                            style={{\n                              maxWidth: \"100%\",\n                              maxHeight: \"100%\",\n                              borderRadius: \"10px\",\n                              height: \"85vh\",\n                              objectFit: \"contain\",\n                            }}\n                          />\n                        </div>\n                      </div>\n                    )}\n                    <span className=\"text-danger\">{error}</span>\n                    {restr_message && (\n                      <span\n                        className=\"text-danger\"\n                        style={{ fontSize: \"14px\" }}\n                      >\n                        {t(\"Your_message_contain\")}\n                      </span>\n                    )}\n                    <form\n                      onSubmit={(e) => {\n                        e.preventDefault(); // Prevent page reload\n                        if (message.trim() !== \"\" || Isfile.length > 0) {\n                          handleSend();\n                        }\n                      }}\n                      className=\"message_type d-flex align-items-center gap-2\"\n                    >\n                      {/* File Upload */}\n                      <div className=\"d-block image_img\">\n                        <input\n                          type=\"file\"\n                          onChange={handleFileChange}\n                          multiple\n                        />\n                        <img\n                          className=\"w-100 h-100\"\n                          src={require(\"../assets/images/serach2.png\")}\n                          alt=\"Upload\"\n                        />\n                      </div>\n\n                      {/* Emoji Picker */}\n                      <div className=\"emoji-container emchatbox\">\n                        <button\n                          type=\"button\"\n                          className=\"emoji-button\"\n                          onClick={() => setShowPicker(!showPicker)}\n                        >\n                          😀\n                        </button>\n                        {showPicker && (\n                          <EmojiPicker onEmojiClick={handleEmojiClick} />\n                        )}\n                      </div>\n\n                      {/* Message Input */}\n                      <input\n                        type=\"text\"\n                        ref={inputRef}\n                        value={message}\n                        onChange={handleInputChange}\n                        placeholder=\"Write a message...\"\n                      />\n\n                      {/* Send Button */}\n                      <button\n                        className=\"d-block image_img\"\n                        type=\"submit\" // Change to \"submit\" so Enter key works\n                        disabled={!message.trim() && Isfile.length === 0} // Prevent empty messages\n                      >\n                        <img\n                          className=\"w-50 h-50\"\n                          src={require(\"../assets/images/send.png\")}\n                          alt=\"Send\"\n                        />\n                      </button>\n\n                      {/* Loading Spinner */}\n                      {spinner && (\n                        <div\n                          className=\"spinner-border text-success send_load\"\n                          role=\"status\"\n                        >\n                          <span className=\"visually-hidden\"></span>\n                        </div>\n                      )}\n\n                      {/* Display Selected Images */}\n                      {Isfile.length > 0 && (\n                        <div className=\"muti_images\">\n                          <div className=\"muti_main overflow-auto d-flex gap-2 mx-auto w-96\">\n                            {Isfile.map((file, index) => {\n                              const isImage = file.type.startsWith(\"image/\");\n                              const isVideo = file.type.startsWith(\"video/\");\n\n                              return (\n                                <div key={index} className=\"d-block muti_image\">\n                                  {isImage && (\n                                    <img\n                                      className=\"w-100 h-100\"\n                                      src={URL.createObjectURL(file)}\n                                      alt=\"Preview\"\n                                    />\n                                  )}\n\n                                  {isVideo && (\n                                    <video\n                                      className=\"w-100 h-100\"\n                                      controls\n                                      src={URL.createObjectURL(file)}\n                                    />\n                                  )}\n\n                                  {!isImage && !isVideo && (\n                                    <div className=\"file-placeholder\">\n                                      <img\n                                        src={fileIcon}\n                                        alt=\"File\"\n                                        className=\"w-100 h-100\"\n                                      />\n                                      <p className=\"sendf\">{file.name}</p>\n                                    </div>\n                                  )}\n\n                                  <button\n                                    className=\"delete_img\"\n                                    onClick={() => removeImage(index)}\n                                  >\n                                    ×\n                                  </button>\n                                </div>\n                              );\n                            })}\n                          </div>\n                        </div>\n                      )}\n                    </form>\n                  </div>\n                </div>\n                <div className=\"col-lg-4\">\n                  <div className=\"d-flex flex-column gap-4\">\n                    <div className=\"recive_main abouthim_scroll scroll_bar\">\n                      <div className=\"row gy-5\">\n                        <div className=\"col-12\">\n                          <div className=\"row gy-3\">\n                            {userLogin.id === Number(to_id) &&\n                              UserDetail.profile_image_1 &&\n                              UserDetail.profile_image_1.trim() !== \"\" && (\n                                <div className=\"col-12 px-1\">\n                                  <div className=\"d-block recive_two\">\n                                    {UserDetail.profile_image_1.match(\n                                      /\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i\n                                    ) ? (\n                                      <img\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        src={UserDetail.profile_image_1}\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_1\n                                          )\n                                        }\n                                        alt=\"img\"\n                                      />\n                                    ) : UserDetail.profile_image_1.match(\n                                        /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i\n                                      ) ? (\n                                      <video\n                                        controls\n                                        className=\"w-100 h-100\"\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_1\n                                          )\n                                        }\n                                      >\n                                        <source\n                                          src={UserDetail.profile_image_1}\n                                          type=\"video/mp4\"\n                                        />\n                                        {t(\"Your_browser_does\")}\n                                      </video>\n                                    ) : null}\n                                  </div>\n                                </div>\n                              )}\n                            {userLogin.id === Number(to_id) &&\n                              UserDetail.profile_image_2 &&\n                              UserDetail.profile_image_2.trim() !== \"\" && (\n                                <div className=\"col-12 px-1\">\n                                  <div className=\"d-block recive_two\">\n                                    {UserDetail.profile_image_2.match(\n                                      /\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i\n                                    ) ? (\n                                      <img\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_2\n                                          )\n                                        }\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        src={UserDetail.profile_image_2}\n                                        alt=\"img\"\n                                      />\n                                    ) : UserDetail.profile_image_2.match(\n                                        /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i\n                                      ) ? (\n                                      <video\n                                        controls\n                                        className=\"w-100 h-100\"\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_2\n                                          )\n                                        }\n                                      >\n                                        <source\n                                          src={UserDetail.profile_image_2}\n                                          type=\"video/mp4\"\n                                        />\n                                        {t(\"Your_browser_does\")}\n                                      </video>\n                                    ) : null}\n                                  </div>\n                                </div>\n                              )}\n                            {userLogin.id === Number(to_id) &&\n                              UserDetail.profile_image_3 &&\n                              UserDetail.profile_image_3.trim() !== \"\" && (\n                                <div className=\"col-12 px-1\">\n                                  <div className=\"d-block recive_two\">\n                                    {UserDetail.profile_image_3.match(\n                                      /\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i\n                                    ) ? (\n                                      <img\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_3\n                                          )\n                                        }\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        src={UserDetail.profile_image_3}\n                                        alt=\"img\"\n                                      />\n                                    ) : UserDetail.profile_image_3.match(\n                                        /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i\n                                      ) ? (\n                                      <video\n                                        controls\n                                        className=\"w-100 h-100\"\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_3\n                                          )\n                                        }\n                                      >\n                                        <source\n                                          src={UserDetail.profile_image_3}\n                                          type=\"video/mp4\"\n                                        />\n                                        {t(\"Your_browser_does\")}\n                                      </video>\n                                    ) : null}\n                                  </div>\n                                </div>\n                              )}\n                            {userLogin.id === Number(to_id) &&\n                              UserDetail.profile_image_4 &&\n                              UserDetail.profile_image_4.trim() !== \"\" && (\n                                <div className=\"col-12 px-1\">\n                                  <div className=\"d-block recive_two\">\n                                    {UserDetail.profile_image_4.match(\n                                      /\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i\n                                    ) ? (\n                                      <img\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_4\n                                          )\n                                        }\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        src={UserDetail.profile_image_4}\n                                        alt=\"img\"\n                                      />\n                                    ) : UserDetail.profile_image_4.match(\n                                        /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i\n                                      ) ? (\n                                      <video\n                                        controls\n                                        className=\"w-100 h-100\"\n                                        onClick={() =>\n                                          setSelectedImage(\n                                            UserDetail.profile_image_4\n                                          )\n                                        }\n                                      >\n                                        <source\n                                          src={UserDetail.profile_image_4}\n                                          type=\"video/mp4\"\n                                        />{\" \"}\n                                        {t(\"Your_browser_does\")}\n                                      </video>\n                                    ) : null}\n                                  </div>\n                                </div>\n                              )}\n                            {Array.isArray(isonlyallbum) &&\n                              isonlyallbum.map((item, index) => {\n                                const images = JSON.parse(item.images);\n\n                                // If both uStatus is \"Yes\" and visibility is \"Private_visible\", show all images/videos.\n                                if (item.uStatus === \"Yes\") {\n                                  return (\n                                    <div\n                                      key={index}\n                                      className=\"d col-12 d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                      onClick={() => {\n                                        if (!userper) {\n                                          requestToview(item.id);\n                                        } else {\n                                          if (item.password_status === \"Yes\") {\n                                            confirmPassword(\n                                              item.id,\n                                              item.album_id\n                                            );\n                                          } else {\n                                            window.open(\n                                              `/privatealbum/${item.album_id}`\n                                            );\n                                          }\n                                        }\n                                      }}\n                                    >\n                                      {item.password_status === \"Yes\" ? (\n                                        <Link\n                                          to=\"#\"\n                                          onClick={() =>\n                                            confirmPassword(\n                                              item.id,\n                                              item.album_id\n                                            )\n                                          }\n                                        >\n                                          {t(\"PrivateAlbum\")}\n                                        </Link>\n                                      ) : (\n                                        <Link\n                                          to={`/previewimages/${item.album_id}`}\n                                        >\n                                          {t(\"PrivateAlbum\")}\n                                        </Link>\n                                      )}\n\n                                      <div className=\"d-block search_twoinfoicon\">\n                                        <img\n                                          className=\"w-100 h-100\"\n                                          src={require(\"../assets/images/ms3.png\")}\n                                          alt=\"Private Album\"\n                                        />\n                                      </div>\n                                      {item.uStatus === \"Yes\" ? (\n                                        item.password_status === \"Yes\" ? (\n                                          <Link\n                                            to=\"#\"\n                                            onClick={() =>\n                                              confirmPassword(\n                                                item.id,\n                                                item.album_id\n                                              )\n                                            }\n                                          >\n                                            {t(\"AccessGranted\")}{\" \"}\n                                            <strong> {item.album_name}</strong>\n                                          </Link>\n                                        ) : (\n                                          <Link\n                                            to={`/previewimages/${item.album_id}`}\n                                          >\n                                            {t(\"AccessGranted\")}{\" \"}\n                                            <strong> {item.album_name}</strong>\n                                          </Link>\n                                        )\n                                      ) : (\n                                        <p>\n                                          {t(\"RequestToView\")} {item.album_name}\n                                        </p>\n                                      )}\n                                    </div>\n                                  );\n                                }\n\n                                // If uStatus is \"No\" and visibility is \"Private_visible\", show private album request option.\n                                if (userLogin.id === Number(to_id)) {\n                                  if (\n                                    item.uStatus === \"No\" &&\n                                    item.visibility === \"Private_visible\"\n                                  ) {\n                                    return (\n                                      <div\n                                        key={index}\n                                        className=\"2 col-12 d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                        onClick={() => {\n                                          if (!userper) {\n                                            requestToview(item.id);\n                                          } else {\n                                            window.open(\n                                              `/privatealbum/${item.album_id}`\n                                            );\n                                          }\n                                        }}\n                                      >\n                                        <Link to=\"#\">\n                                          {\" \"}\n                                          {t(\"PRIVATE_ALBUM\")}{\" \"}\n                                        </Link>\n                                        <div className=\"d-block search_twoinfoicon\">\n                                          <img\n                                            className=\"w-100 h-100\"\n                                            src={require(\"../assets/images/padlock.png\")}\n                                            alt={t(\"PrivateAlbum\")}\n                                          />\n                                        </div>\n\n                                        <strong>{item.album_name}</strong>\n                                      </div>\n                                    );\n                                  }\n                                } else {\n                                  if (\n                                    item.uStatus === \"No\" &&\n                                    item.visibility === \"Private_visible\"\n                                  ) {\n                                    return (\n                                      <div\n                                        key={index}\n                                        className=\"3 col-12 d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                        onClick={() => {\n                                          if (!userper) {\n                                            requestToview(item.id);\n                                          } else {\n                                            window.open(\n                                              `/privatealbum/${item.album_id}`\n                                            );\n                                          }\n                                        }}\n                                      >\n                                        <Link to=\"#\">\n                                          {\" \"}\n                                          {t(\"PRIVATE_ALBUM\")}{\" \"}\n                                        </Link>\n                                        <div className=\"d-block search_twoinfoicon\">\n                                          <img\n                                            className=\"w-100 h-100\"\n                                            src={require(\"../assets/images/ms3.png\")}\n                                            alt={t(\"PrivateAlbum\")}\n                                          />\n                                        </div>\n                                        <p>{t(\"REQUEST_TO_VIEW\")}</p>\n                                        <strong>{item.album_name}</strong>\n                                      </div>\n                                    );\n                                  }\n                                }\n\n                                // If visibility is not \"Private_visible\", show all images/videos.\n                                return images.map((image, imgIndex) => (\n                                  <div\n                                    className=\"col-12 px-1\"\n                                    key={`${index}-${imgIndex}`}\n                                  >\n                                    <div className=\"d-block recive_two\">\n                                      <MediaRenderer\n                                        className=\"w-100 h-100 object-fit-cover\"\n                                        url={selectedImage}\n                                        onClick={() => setSelectedImage(image)}\n                                      />\n                                    </div>\n                                  </div>\n                                ));\n                              })}\n\n                            {Array.isArray(isonlyallbumfriend) &&\n                              isonlyallbumfriend.map((item, index) => {\n                                // Parse the JSON string into an array\n                                const images = JSON.parse(item.images);\n                                const isFriend = AllFriends.some(\n                                  (friend) => friend.id === userLogin.id\n                                );\n\n                                if (isFriend || userLogin.id === item.user_id) {\n                                  if (\n                                    item.addToAlbum === \"Yes\" &&\n                                    item.visibility === \"Friends_visible\"\n                                  ) {\n                                    return (\n                                      <div className=\"col-12 px-1\" key={index}>\n                                        <div\n                                          onClick={() => {\n                                            window.open(\n                                              `/previewimages/${item.album_id}`\n                                            );\n                                          }}\n                                          className=\"dd d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                        >\n                                          <Link\n                                            to=\"javascript:void(0)\"\n                                            className=\"text-decoration-none\"\n                                          >\n                                            {item.album_name}\n                                          </Link>\n                                          <div className=\"d-block search_twoinfoicon\">\n                                            <img\n                                              className=\"w-100 h-100\"\n                                              src={require(\"../assets/images/ms3.png\")}\n                                              alt=\"Album Preview\"\n                                            />\n                                          </div>\n\n                                          <p>{t(\"PreviewImages\")}</p>\n                                          <strong>{item.album_name}</strong>\n                                        </div>\n                                      </div>\n                                    );\n                                  }\n                                }\n                              })}\n                            {Array.isArray(isonlyallbumfriend) &&\n                              isonlyallbumfriend.map((item, index) => {\n                                // Parse the JSON string into an array\n                                const images = JSON.parse(item.images);\n                                if (\n                                  item.visibility === \"Public_visible\" &&\n                                  item.addToAlbum === \"Yes\"\n                                ) {\n                                  return (\n                                    <div className=\"col-12 px-1\" key={index}>\n                                      <div\n                                        onClick={() => {\n                                          window.open(\n                                            `/previewimages/${item.album_id}`\n                                          );\n                                        }}\n                                        className=\"dd d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo\"\n                                      >\n                                        <Link\n                                          to=\"javascript:void(0)\"\n                                          className=\"text-decoration-none\"\n                                        >\n                                          {item.album_name}\n                                        </Link>\n                                        <div className=\"d-block search_twoinfoicon\">\n                                          <img\n                                            className=\"w-100 h-100\"\n                                            src={require(\"../assets/images/ms3.png\")}\n                                            alt=\"Album Preview\"\n                                          />\n                                        </div>\n\n                                        <p>{t(\"PreviewImages\")}</p>\n                                        <p>{item.album_name}</p>\n                                      </div>\n                                    </div>\n                                  );\n                                }\n                              })}\n                            {Array.isArray(isonlyallbumPublic) &&\n                              isonlyallbumPublic.map((item, index) => {\n                                // Parse the JSON string into an array\n                                const images = JSON.parse(item.images);\n                                if (\n                                  item.visibility === \"Public_visible\" &&\n                                  item.addToAlbum === \"No\"\n                                ) {\n                                  return images.map((image, imgIndex) => (\n                                    <div\n                                      className=\"col-12 px-1\"\n                                      key={`${index}-${imgIndex}`}\n                                    >\n                                      <div className=\"d-block recive_two\">\n                                        <MediaRenderer\n                                          onClick={() =>\n                                            setSelectedImage(image)\n                                          }\n                                          className=\"w-100 h-100 object-fit-cover\"\n                                          url={image}\n                                        />\n                                      </div>\n                                    </div>\n                                  ));\n                                }\n                              })}\n                            {Array.isArray(isonlyallbumPublic) &&\n                              isonlyallbumPublic.map((item, index) => {\n                                // Parse the JSON string into an array\n                                const images = JSON.parse(item.images);\n                                if (\n                                  item.visibility === \"Public_visible\" &&\n                                  item.addToAlbum === \"Yes\"\n                                ) {\n                                  return (\n                                    <div className=\"col-12 px-1\" key={index}>\n                                      <div\n                                        onClick={() => {\n                                          window.open(\n                                            `/previewimages/${item.album_id}`\n                                          );\n                                        }}\n                                        className=\"dd d-flex flex-column gap-3 justify-content-center align-items-center search_twoinfo rel\"\n                                      >\n                                        <Link\n                                          to={`/previewimages/${item.album_id}`}\n                                          className=\"text-decoration-none\"\n                                        >\n                                          {item.album_name}\n                                        </Link>\n                                        <div className=\"d-block search_twoinfoicon\">\n                                          <img\n                                            className=\"w-100 h-100\"\n                                            src={require(\"../assets/images/ms3.png\")}\n                                            alt=\"Album Preview\"\n                                          />\n                                        </div>\n                                        {item.cover_image !== null && (\n                                          <div className=\"lock_image\">\n                                            <MediaRenderer\n                                              className=\"w-100 h-100\"\n                                              url={item.cover_image}\n                                            />\n                                          </div>\n                                        )}\n                                        <p>{t(\"PreviewImages\")}</p>\n                                        <strong>{item.album_name}</strong>\n                                      </div>\n                                    </div>\n                                  );\n                                }\n                              })}\n                            {Array.isArray(ImagesFriends) &&\n                              ImagesFriends.map((image, index) => (\n                                <div className=\"col-12 px-1 desdsd\" key={index}>\n                                  <div className=\"d-block recive_two\">\n                                    <MediaRenderer\n                                      onClick={() => setSelectedImage(image)}\n                                      className=\"w-100 h-100 object-fit-cover\"\n                                      url={image}\n                                    />\n                                  </div>\n                                </div>\n                              ))}\n                            {Array.isArray(VideosFriends) &&\n                              VideosFriends.map((image, index) => (\n                                <div className=\"col-12 px-1 desdsd\" key={index}>\n                                  <div className=\"d-block recive_two\">\n                                    <video\n                                      onClick={() => setSelectedImage(image)}\n                                      controls\n                                      className=\"w-100 h-100 object-fit-cover\"\n                                    >\n                                      <source src={image} type=\"video/mp4\" />\n                                      {t(\"Your_browser_does\")}\n                                    </video>\n                                  </div>\n                                </div>\n                              ))}\n                            {userLogin.id === Number(to_id) && (\n                              <>\n                                {Array.isArray(ImagesFriendsOwn) &&\n                                  ImagesFriendsOwn.map((image, index) => (\n                                    <div\n                                      className=\"col-12 px-1 desdsd\"\n                                      key={index}\n                                    >\n                                      <div className=\"d-block recive_two\">\n                                        <MediaRenderer\n                                          onClick={() =>\n                                            setSelectedImage(image)\n                                          }\n                                          className=\"w-100 h-100 object-fit-cover\"\n                                          url={image}\n                                        />\n                                      </div>\n                                    </div>\n                                  ))}\n                              </>\n                            )}\n                            {userLogin.id === Number(to_id) && (\n                              <>\n                                {Array.isArray(VideosFriendsOwn) &&\n                                  VideosFriendsOwn.map((image, index) => (\n                                    <div\n                                      className=\"col-12 px-1 desdsd\"\n                                      key={index}\n                                    >\n                                      <div className=\"d-block recive_two\">\n                                        <video\n                                          onClick={() =>\n                                            setSelectedImage(image)\n                                          }\n                                          controls\n                                          className=\"w-100 h-100 object-fit-cover\"\n                                        >\n                                          <source\n                                            src={image}\n                                            type=\"video/mp4\"\n                                          />\n                                          {t(\"Your_browser_does\")}\n                                        </video>\n                                      </div>\n                                    </div>\n                                  ))}\n                              </>\n                            )}\n                          </div>\n                        </div>\n                        {userdetail.gender !== \"Couple\" && (\n                          <div className=\"col-12\">\n                            <h4 className=\"mb-2\">{t(\"abouthim\")}</h4>\n                            <ul className=\"revice_type d-flex flex-column gap-3 p-0\">\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Looking_for\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.search_looking_for !== null &&\n                                  userdetail.search_looking_for !== \"\" &&\n                                  userdetail.search_looking_for !== \"null\"\n                                    ? (() => {\n                                        try {\n                                          // Attempt to parse the JSON string\n                                          const parsedValue = JSON.parse(\n                                            userdetail.search_looking_for\n                                          );\n                                          return Array.isArray(parsedValue)\n                                            ? parsedValue.join(\", \") // Join array values with a comma\n                                            : parsedValue; // If not an array, display the value directly\n                                        } catch (error) {\n                                          return \"N/A\"; // Handle parsing errors\n                                        }\n                                      })()\n                                    : \"N/A\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Nationality\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.nationality !== \"null\"\n                                    ? userdetail.nationality\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Bodytype\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.bodytype !== \"null\"\n                                    ? userdetail.bodytype\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Height\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.height_feet !== \"null\"\n                                    ? userdetail.height_feet\n                                    : \"\"}{\" \"}\n                                  {userdetail.height_inches !== \"null\"\n                                    ? userdetail.height_inches\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Sexual_orientation\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.sexual_orientation !== null &&\n                                  userdetail.sexual_orientation !== \"\" &&\n                                  userdetail.sexual_orientation !== \"null\"\n                                    ? (() => {\n                                        try {\n                                          // Attempt to parse the JSON string\n                                          const parsedValue = JSON.parse(\n                                            userdetail.sexual_orientation\n                                          );\n                                          return Array.isArray(parsedValue)\n                                            ? parsedValue.join(\", \") // Join array values with a comma\n                                            : parsedValue; // If not an array, display the value directly\n                                        } catch (error) {\n                                          return \"Invalid data\"; // Handle parsing errors\n                                        }\n                                      })()\n                                    : \"N/A\"}{\" \"}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Relationship_status\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.relationship_status !== \"null\"\n                                    ? userdetail.relationship_status\n                                    : \"\"}{\" \"}\n                                </h6>\n                              </li>\n                            </ul>\n                          </div>\n                        )}\n                        {userdetail.gender === \"Couple\" && (\n                          <div className=\"col-12\">\n                            <h4 className=\"mb-2\">{t(\"abouthim\")}</h4>\n                            <ul className=\"revice_type d-flex flex-column gap-3 p-0\">\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Looking_for\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.search_looking_for !== null &&\n                                  userdetail.search_looking_for !== \"\" &&\n                                  userdetail.search_looking_for !== \"null\"\n                                    ? (() => {\n                                        try {\n                                          // Attempt to parse the JSON string\n                                          const parsedValue = JSON.parse(\n                                            userdetail.search_looking_for\n                                          );\n                                          return Array.isArray(parsedValue)\n                                            ? parsedValue.join(\", \") // Join array values with a comma\n                                            : parsedValue; // If not an array, display the value directly\n                                        } catch (error) {\n                                          return \"N/A\"; // Handle parsing errors\n                                        }\n                                      })()\n                                    : \"N/A\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Nationality\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.nationality !== \"null\"\n                                    ? userdetail.nationality\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Bodytype\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.bodytype !== \"null\"\n                                    ? userdetail.bodytype\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Height\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.height_feet !== \"null\"\n                                    ? userdetail.height_feet\n                                    : \"\"}{\" \"}\n                                  {userdetail.height_inches !== \"null\"\n                                    ? userdetail.height_inches\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Sexual_orientation\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.sexual_orientation !== null &&\n                                  userdetail.sexual_orientation !== \"\" &&\n                                  userdetail.sexual_orientation !== \"null\"\n                                    ? (() => {\n                                        try {\n                                          // Attempt to parse the JSON string\n                                          const parsedValue = JSON.parse(\n                                            userdetail.sexual_orientation\n                                          );\n                                          return Array.isArray(parsedValue)\n                                            ? parsedValue.join(\", \") // Join array values with a comma\n                                            : parsedValue; // If not an array, display the value directly\n                                        } catch (error) {\n                                          return \"Invalid data\"; // Handle parsing errors\n                                        }\n                                      })()\n                                    : \"N/A\"}{\" \"}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Relationship_status\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.relationship_status !== \"null\"\n                                    ? userdetail.relationship_status\n                                    : \"\"}{\" \"}\n                                </h6>\n                              </li>\n                            </ul>\n                          </div>\n                        )}\n                        {userdetail.gender === \"Couple\" && (\n                          <div className=\"col-12\">\n                            <h4 className=\"mb-2\">{t(\"abouther\")}</h4>\n                            <ul className=\"revice_type d-flex flex-column gap-3 p-0\">\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Looking_for\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.search_looking_for_her !== null &&\n                                  userdetail.search_looking_for_her !== \"\" &&\n                                  userdetail.search_looking_for_her !== \"null\"\n                                    ? (() => {\n                                        try {\n                                          // Attempt to parse the JSON string\n                                          const parsedValue = JSON.parse(\n                                            userdetail.search_looking_for_her\n                                          );\n                                          return Array.isArray(parsedValue)\n                                            ? parsedValue.join(\", \") // Join array values with a comma\n                                            : parsedValue; // If not an array, display the value directly\n                                        } catch (error) {\n                                          return \"N/A\"; // Handle parsing errors\n                                        }\n                                      })()\n                                    : \"N/A\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Nationality\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.nationality_her !== \"null\"\n                                    ? userdetail.nationality_her\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Bodytype\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.bodytype_her !== \"null\"\n                                    ? userdetail.bodytype_her\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Height\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.height_feet_her !== \"null\"\n                                    ? userdetail.height_feet_her\n                                    : \"\"}{\" \"}\n                                  {userdetail.height_inches !== \"null\"\n                                    ? userdetail.height_inches\n                                    : \"\"}{\" \"}\n                                  {/* Check if not 'null' */}\n                                </h6>\n                              </li>\n\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Sexual_orientation\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.sexual_orientation_her !== null &&\n                                  userdetail.sexual_orientation_her !== \"\" &&\n                                  userdetail.sexual_orientation_her !== \"null\"\n                                    ? (() => {\n                                        try {\n                                          // Attempt to parse the JSON string\n                                          const parsedValue = JSON.parse(\n                                            userdetail.sexual_orientation_her\n                                          );\n                                          return Array.isArray(parsedValue)\n                                            ? parsedValue.join(\", \") // Join array values with a comma\n                                            : parsedValue; // If not an array, display the value directly\n                                        } catch (error) {\n                                          return \"Invalid data\"; // Handle parsing errors\n                                        }\n                                      })()\n                                    : \"N/A\"}{\" \"}\n                                </h6>\n                              </li>\n                              <li className=\"d-flex align-items-center gap-2\">\n                                <h6>{t(\"Relationship_status\")}:</h6>\n                                <h6 className=\"breaktext\">\n                                  {userdetail.relationship_status_her !== \"null\"\n                                    ? userdetail.relationship_status_her\n                                    : \"\"}{\" \"}\n                                </h6>\n                              </li>\n                            </ul>\n                          </div>\n                        )}\n                        <div className=\"col-12\">\n                          <ul className=\"revice_type d-flex flex-column gap-3 p-0\">\n                            <li>\n                              <h6> {t(\"Member_since\")}: </h6>\n                              <h6 className=\"breaktext\">\n                                {userdetail.created_at &&\n                                userdetail.created_at !== \"\"\n                                  ? new Date(\n                                      userdetail.created_at\n                                    ).toLocaleDateString(\"en-GB\")\n                                  : \"\"}{\" \"}\n                              </h6>\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"d-flex justify-content-center recive_main_btn align-items-center\">\n                      <button className=\"report\" onClick={handlereport}>\n                        {t(\"REPORT_USER\")}\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <Report isOpen={isPopupOpen1} onClose={closePopup1}></Report>\n      </section>\n      <Modal\n        show={Openpassword}\n        className=\"edit_admin\"\n        onHide={handleModalClose}\n      >\n        <Modal.Header closeButton>\n          <Modal.Title className=\"newclass\">{t(\"EnterPassword\")}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <form className=\"popup-content\" onSubmit={handleSubmit}>\n            {showPopSuccess && (\n              <span className=\"text-success\">{successPopMessage}</span>\n            )}\n            {showPopError && (\n              <span className=\"text-danger\">{errorPopMessage}</span>\n            )}\n            <div className=\"mb-3\">\n              <label htmlFor=\"username\" className=\"form-label\">\n                {t(\"EnterPasswordtoViewThisAlbum\")}\n              </label>\n              <input\n                type=\"password\"\n                required\n                className=\"form-control\"\n                id=\"username\"\n                name=\"password\"\n                placeholder={t(\"Enterpasswordhere\")}\n              />\n            </div>\n\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={handleModalClose}>\n                {t(\"Close\")}\n              </Button>\n              <Button\n                type=\"submit\"\n                variant=\"primary\"\n                className=\"bg-success border-color-none\"\n              >\n                {t(\"Submit\")}\n              </Button>\n            </Modal.Footer>\n          </form>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n\nexport default ReceivedMessagesChat;\n","export default {\n  outline: {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: 24,\n    height: 24,\n    viewBox: '0 0 24 24',\n    fill: 'none',\n    stroke: 'currentColor',\n    strokeWidth: 2,\n    strokeLinecap: 'round',\n    strokeLinejoin: 'round',\n  },\n  filled: {\n    xmlns: 'http://www.w3.org/2000/svg',\n    width: 24,\n    height: 24,\n    viewBox: '0 0 24 24',\n    fill: 'currentColor',\n    stroke: 'none',\n  },\n};\n","import { forwardRef, createElement } from 'react';\nimport defaultAttributes from './defaultAttributes';\nimport type { IconNode, IconProps, Icon } from './types';\n\nconst createReactComponent = (\n  type: 'outline' | 'filled',\n  iconName: string,\n  iconNamePascal: string,\n  iconNode: IconNode,\n) => {\n  const Component = forwardRef<Icon, IconProps>(\n    (\n      { color = 'currentColor', size = 24, stroke = 2, title, className, children, ...rest }: IconProps,\n      ref,\n    ) =>\n      createElement(\n        'svg',\n        {\n          ref,\n          ...defaultAttributes[type],\n          width: size,\n          height: size,\n          className: [`tabler-icon`, `tabler-icon-${iconName}`, className].join(' '),\n          ...(type === 'filled'\n            ? {\n                fill: color,\n              }\n            : {\n                strokeWidth: stroke,\n                stroke: color,\n              }),\n          ...rest,\n        },\n        [\n          title && createElement('title', { key: 'svg-title' }, title),\n          ...iconNode.map(([tag, attrs]) => createElement(tag, attrs)),\n          ...(Array.isArray(children) ? children : [children]),\n        ],\n      ),\n  );\n\n  Component.displayName = `${iconNamePascal}`;\n\n  return Component;\n};\n\nexport default createReactComponent;\n","import createReactComponent from '../createReactComponent';\nexport default createReactComponent('outline', 'home', 'IconHome', [[\"path\",{\"d\":\"M5 12l-2 0l9 -9l9 9l-2 0\",\"key\":\"svg-0\"}],[\"path\",{\"d\":\"M5 12v7a2 2 0 0 0 2 2h10a2 2 0 0 0 2 -2v-7\",\"key\":\"svg-1\"}],[\"path\",{\"d\":\"M9 21v-6a2 2 0 0 1 2 -2h2a2 2 0 0 1 2 2v6\",\"key\":\"svg-2\"}]]);"],"names":["_ref","url","onClick","className","mediaType","setMediaType","useState","isIphone","setIsIphone","base64Image","setBase64Image","useEffect","userAgent","navigator","test","extension","split","pop","toLowerCase","fetch","then","res","blob","reader","FileReader","onloadend","result","onerror","readAsDataURL","catch","includes","_jsx","_Fragment","children","endsWith","src","alt","style","maxWidth","_jsxs","srcSet","type","replace","controls","cursor","Link","to","download","target","title","rel","fileIcon","Report","isOpen","onClose","uid","selectedFile","setSelectedFile","spinner","setspinner","name","setName","description","setDescription","showPopSuccess","setShowPopSuccess","showPopError","setShowPopError","successPopMessage","setPopsuccessMessage","errorPopMessage","setPoperrorMessage","errorMessage","setErrorMessage","image","setImage","category","setCategory","otherReport","setOtherReport","e","classList","contains","SuccessPop","message","ErrorPop","action","onSubmit","async","preventDefault","reportData","console","log","storedUsername","localStorage","getItem","formData","user_id","JSON","parse","id","to_id","axios","post","apiUrl","headers","Accept","data","length","setTimeout","err","response","request","error","for","required","value","onChange","htmlFor","placeholder","navigate","useNavigate","seenn","setSeen","arrow","setarrow","showMenu","setShowMenu","isonlyallbumPublic","setisonlyallbumPublic","toggleMenu","index","setShowMenu_Left","refreshNotifications","setRefreshNotifications","inputRef","useRef","Totalcountmessage","setTotalcountmessage","ImagesFriends","setImagesFriends","VideosFriends","setVideosFriends","ImagesFriendsOwn","setImagesFriendsOwn","VideosFriendsOwn","setVideosFriendsOwn","PasswordId","setPasswordId","redirectid","setredirectid","Openpassword","setOpenpassword","chooseallId_left","setchooseallId_left","selectedImage","setSelectedImage","chatEndRef","userblock","setuserblock","AllFriends","setAllFriends","apiUrlProfile","setMessage","userdetail","setuserdetail","messages","setmessages","allmessages","setmessagesall","LoginData","setLoginData","seterror","Isfile","setFiles","setto_id","slug","useParams","isCheckfriend","setCheckfriend","restr_message","setrestr_message","albumdata","setalbumdata","userper","setuserper","isonlyallbum","setisonlyallbum","isonlyallbumfriend","setisonlyallbumfriend","UserDetail","setUserDetail","IdArray","setIdArray","activeIndex","setActiveIndex","searchText","setSearchText","filteredMessages","setFilteredMessages","offset","setOffset","hasMore","setHasMore","loadingMore","setLoadingMore","chatBoxRef","userLogin","fetchMessages","undefined","getUserDetails","row","respo","getUsercheckPermisson","getCheckfriend","chatsectionUser","checkuserblock","current","scrollIntoView","behavior","block","hanldeseenmessagenew","getmessageCount","alldata","results","unreadCount","filter","item","read","formdata","newOffset","chatBox","scrollHeight","newMessages","hasScrolledRef","chatContainer","scrollTop","handleScroll","isAtBottom","clientHeight","hanldeseenmessage","handleKeyDown","event","key","window","addEventListener","removeEventListener","updateReadMessagesread","ws","WebSocket","onmessage","receivedMessage","senderId","Number","receiverId","loggedInUserId","setMessageFormessage","chatsectionUserRefresh","setMessageForultiple","getSEndMessagequick","close","form","n","t","Array","isArray","prevMessages","toid","toidd","recid","msg","recidArray","getFileSrc","fileUrl","some","ext","trim","requestToview","formDataa","respoo","is_friend","albumid","status","isPopupOpen1","setIsPopupOpen1","useTranslation","savedLanguage","i18n","language","changeLanguage","restrictedWords","apiUrll","get_albumStatusonly","getUserDetailsfetch","album_setting_status","getalbumStatus","String","getAllfriendss","showPicker","setShowPicker","formatTime","dateString","postDate","Date","isNaN","adjustedPostDate","getTime","Intl","DateTimeFormat","timeZone","day","month","year","hour","minute","hour12","format","handledeletemainpopup","deleteev","chooseallId","setchooseallId","showdeletebutton","setshowdeletebutton","selectall","setselectall","handleCloseDeletePopup","handlechooseAll","prev","showMenu_Left","confirmPassword","useralbumid","passid","mediaList","images","videos","forEach","media","file","push","getUserDetailsFriends","getUserDetailsOwn","getUserDetailsfetchUserdata","handleModalClose","get_albumStatusonlyPublic","get_albumStatusonlyfriend","readmessageuser","Headertwo","IconHome","stroke","ev1","ev2","profile_image","require","username","birthday_date","birthday","birthDate","today","age","getFullYear","monthDifference","getMonth","getDate","calculateAge","location","onInput","searchValue","filtered","chat","handlesearchmessage","other_id","handleallselect","ref","maxHeight","overflow","display","flexWrap","justifyContent","position","role","map","user1_id","user1_makeImagePrivate","user1_profile","f","fileIndex","fileSrc","HiDotsVertical","checked","date","MediaRendererFile","FaAngleDown","top","left","width","height","backgroundColor","alignItems","zIndex","xmlns","viewBox","fill","strokeWidth","strokeLinecap","strokeLinejoin","d","MediaRenderer","borderRadius","objectFit","fontSize","FormData","commentText","currentWordCount","text","append","handleSend","selectedFiles","from","files","validFiles","errorFiles","size","prevFiles","focus","KeyboardEvent","code","keyCode","bubbles","dispatchEvent","multiple","EmojiPicker","onEmojiClick","emojiObject","prevMessage","emoji","inputValue","hasRestrictedWord","word","disabled","isImage","startsWith","isVideo","URL","createObjectURL","_","i","removeImage","profile_image_1","match","profile_image_2","profile_image_3","profile_image_4","uStatus","password_status","album_id","open","album_name","visibility","imgIndex","friend","addToAlbum","cover_image","gender","search_looking_for","parsedValue","join","nationality","bodytype","height_feet","height_inches","sexual_orientation","relationship_status","search_looking_for_her","nationality_her","bodytype_her","height_feet_her","sexual_orientation_her","relationship_status_her","created_at","toLocaleDateString","closePopup1","document","body","overflowY","Modal","show","onHide","Header","closeButton","Title","Body","password","idd","Footer","Button","variant","defaultAttributes","outline","filled","createReactComponent","iconName","iconNamePascal","iconNode","Component","forwardRef","color","rest","createElement","_ref2","tag","attrs","displayName"],"sourceRoot":""}