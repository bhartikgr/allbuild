{"version":3,"file":"static/js/9001.73de7333.chunk.js","mappings":"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","sources":["components/Styles/AdviceVideoStyles.js","pages/User/AdviceVideos.jsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const SectionWrapper = styled.div`\r\n  display: block;\r\n  padding: 3rem 0; /* py-5 is 3rem top & bottom */\r\n  background-color: #f3f5f7;\r\n`;\r\nexport const Stepblock = styled.div`\r\n  background: #fff;\r\n  border-radius: 0px;\r\n  padding: 40px 20px;\r\n  box-shadow: 2px 2px 3px #dddddd;\r\n  @media (max-width: 576px) {\r\n    padding: 40px 15px;\r\n  }\r\n`;\r\nexport const Titletext = styled.div`\r\n  color: #c00000;\r\n  font-size: 30px;\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  text-decoration: underline;\r\n  display: inline-block;\r\n\r\n  @media only screen and (max-width: 991.98px) {\r\n    font-size: 26px;\r\n  }\r\n`;\r\n\r\nexport const GalleryWrapper = styled.div`\r\n  display: grid;\r\n  gap: 1rem;\r\n  padding:0;\r\n\r\n  /* Desktop: 4 columns */\r\n  grid-template-columns: repeat(4, 1fr);\r\n\r\n  /* Desktop: 3 columns */\r\n    @media (max-width: 1200px) {\r\n  grid-template-columns: repeat(3, 1fr);\r\n}\r\n  /* Tablet: 2 columns */\r\n  @media (max-width: 992px) {\r\n    grid-template-columns: repeat(2, 1fr);\r\n  }\r\n\r\n  /* Mobile: 1 column */\r\n  @media (max-width: 576px) {\r\n    grid-template-columns: 1fr;\r\n  }\r\n`;\r\n\r\nexport const VideoThumbnail = styled.div`\r\n  cursor: pointer;\r\n\r\n  video {\r\n    width: 100%;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nexport const ModalOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  display: ${({ open }) => (open ? \"flex\" : \"none\")};\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  position: relative;\r\n  width: 80%;\r\n  max-width: 800px;\r\n\r\n  video {\r\n    width: 100%;\r\n    border-radius: 8px;\r\n  }\r\n`;\r\n\r\nexport const CloseButton = styled.button`\r\n  position: absolute;\r\n  top: -10px;\r\n  right: -10px;\r\n  width: 40px;\r\n  height: 40px;\r\n  display: grid;\r\n  place-items: center;\r\n  background: #fff;\r\n  border: none;\r\n  color: #000;\r\n  font-size: 30px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  padding: 0;\r\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);\r\n  aspect-ratio: 1;\r\n  line-height: 0;\r\n  padding-bottom: 5px;\r\n`;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport MainHeader from \"../../components/Users/MainHeader\";\r\n\r\nimport {\r\n  SectionWrapper,\r\n  Stepblock,\r\n  Titletext,\r\n  GalleryWrapper,\r\n  VideoThumbnail,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  CloseButton,\r\n} from \"../../components/Styles/AdviceVideoStyles.js\";\r\n\r\nimport {\r\n  Overlay,\r\n  Popup,\r\n  CloseBtn,\r\n  CardImageContainer,\r\n  CardImage,\r\n  TitlePay,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Row,\r\n  ButtonGroup,\r\n  Button,\r\n  Wrapper,\r\n} from \"../../components/Styles/MainStyle.js\";\r\n\r\nimport ModuleSideNav from \"../../components/Users/ModuleSideNav\";\r\nimport axios from \"axios\";\r\nexport default function AdviceVideos() {\r\n  const [errr, seterrr] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [allRecordVideo, setAllrecordvideo] = useState([]);\r\n  const [errorMsg, seterrorMsg] = useState(\"\");\r\n  const [selectedVideo, setSelectedVideo] = useState(null);\r\n  const videoRef = useRef();\r\n  const backendpath = \"https://blueprintcatalyst.com/api/upload/video\";\r\n  const apiUrl = \"https://blueprintcatalyst.com/api/user/\";\r\n  const storedUsername = localStorage.getItem(\"UserLoginData\");\r\n  const userLogin = JSON.parse(storedUsername);\r\n  useEffect(() => {\r\n    document.title = \"Investor Presentation Structure - Expert Advice Video\";\r\n  }, []);\r\n  useEffect(() => {\r\n    // Disable right-click\r\n    const handleContextMenu = (e) => e.preventDefault();\r\n    document.addEventListener(\"contextmenu\", handleContextMenu);\r\n\r\n    // Disable F12, Ctrl+Shift+I, Ctrl+U\r\n    const handleKeydown = (e) => {\r\n      if (\r\n        e.key === \"F12\" ||\r\n        (e.ctrlKey && e.shiftKey && e.key === \"I\") ||\r\n        (e.ctrlKey && e.key === \"u\")\r\n      ) {\r\n        e.preventDefault();\r\n        // alert(\"Developer tools are disabled for security reasons.\");\r\n      }\r\n    };\r\n    document.addEventListener(\"keydown\", handleKeydown);\r\n\r\n    // Detect DevTools opening (approximate)\r\n    const detectDevTools = () => {\r\n      const threshold = 160; // Approximate width/height when DevTools opens\r\n      const widthThreshold = window.outerWidth - window.innerWidth > threshold;\r\n      const heightThreshold =\r\n        window.outerHeight - window.innerHeight > threshold;\r\n\r\n      if (widthThreshold || heightThreshold) {\r\n        //alert(\"Developer tools detected. Access is restricted.\");\r\n        // Optionally redirect or close modal\r\n        setIsModalOpen(false);\r\n        setSelectedVideo(null);\r\n      }\r\n    };\r\n\r\n    const interval = setInterval(detectDevTools, 1000);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"contextmenu\", handleContextMenu);\r\n      document.removeEventListener(\"keydown\", handleKeydown);\r\n      clearInterval(interval);\r\n    };\r\n  }, []);\r\n  const openModal = (video) => {\r\n    const videoKey = `video_${video.id}_views`; // unique key for each video\r\n    const videoPath = video.video;\r\n    setSelectedVideo(`${backendpath}/${videoPath}`);\r\n    videolimitsave(video);\r\n  };\r\n\r\n  const videolimitsave = async (video) => {\r\n    let formData = {\r\n      user_id: userLogin.id,\r\n      video_id: video.id,\r\n      limit: video.max_limit,\r\n    };\r\n    try {\r\n      const res = await axios.post(apiUrl + \"videolimitsave\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n      var respo = res.data;\r\n      if (respo.status === \"2\") {\r\n        seterrr(true);\r\n        seterrorMsg(respo.message);\r\n        setTimeout(() => {\r\n          if (videoRef.current) {\r\n            videoRef.current.pause();\r\n            videoRef.current.currentTime = 0;\r\n          }\r\n          //  setShowPopup(true);\r\n          seterrorMsg(\"\");\r\n        }, 1800);\r\n      } else {\r\n        seterrorMsg(\"\");\r\n        setIsModalOpen(true);\r\n        setTimeout(() => {\r\n          videoRef.current?.play();\r\n        }, 100);\r\n      }\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n      if (err.response) {\r\n      } else if (err.request) {\r\n        console.error(\"Request data:\", err.request);\r\n      } else {\r\n        console.error(\"Error message:\", err.message);\r\n      }\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setIsModalOpen(false);\r\n\r\n    if (videoRef.current) {\r\n      videoRef.current.pause();\r\n      videoRef.current.currentTime = 0;\r\n    }\r\n  };\r\n\r\n  const apiUrlVideo = \"https://blueprintcatalyst.com/api/admin/video/\";\r\n  useEffect(() => {\r\n    getvideo();\r\n  }, []);\r\n  const getvideo = async () => {\r\n    let formData = {\r\n      user_id: \"\",\r\n    };\r\n    try {\r\n      const res = await axios.post(apiUrlVideo + \"getvideolist\", formData, {\r\n        headers: {\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\r\n        },\r\n      });\r\n      var respo = res.data.results;\r\n      setAllrecordvideo(respo);\r\n    } catch (err) {\r\n      // Enhanced error handling\r\n      if (err.response) {\r\n      } else if (err.request) {\r\n        console.error(\"Request data:\", err.request);\r\n      } else {\r\n        console.error(\"Error message:\", err.message);\r\n      }\r\n    }\r\n  };\r\n  const [showPopup, setShowPopup] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // handle form submission\r\n    console.log(e.target);\r\n    setShowPopup(false);\r\n  };\r\n  return (\r\n    <>\r\n      <MainHeader />\r\n      <SectionWrapper className=\"d-block py-5\">\r\n        <div className=\"container-lg\">\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-md-3\">\r\n              <ModuleSideNav />\r\n            </div>\r\n\r\n            <div className=\"col-md-9\">\r\n              {errorMsg && (\r\n                <p className={errr ? \" mt-3 error_pop\" : \"success_pop mt-3\"}>\r\n                  {errorMsg}\r\n                </p>\r\n              )}\r\n              <Stepblock>\r\n                <div className=\"d-flex flex-column gap-5\">\r\n                  <Titletext>\r\n                    investor presentation structure - expert advice videos\r\n                  </Titletext>\r\n                  <GalleryWrapper>\r\n                    {allRecordVideo.map((video, index) => {\r\n                      const videoPath = video.video.replace(/\\\\/g, \"/\");\r\n\r\n                      return (\r\n                        <VideoThumbnail\r\n                          key={index}\r\n                          onClick={() => openModal(video)}\r\n                        >\r\n                          <video\r\n                            muted\r\n                            onContextMenu={(e) => e.preventDefault()}\r\n                            onError={(e) =>\r\n                              console.error(\"Error loading video:\", e)\r\n                            }\r\n                          >\r\n                            <source\r\n                              src={`${backendpath}/${videoPath}`}\r\n                              type=\"video/mp4\"\r\n                            />\r\n                            <p>\r\n                              Your browser does not support the video tag or the\r\n                              video format.\r\n                            </p>\r\n                          </video>\r\n                        </VideoThumbnail>\r\n                      );\r\n                    })}\r\n                  </GalleryWrapper>\r\n                </div>\r\n              </Stepblock>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </SectionWrapper>\r\n\r\n      <ModalOverlay open={isModalOpen}>\r\n        <ModalContent>\r\n          {selectedVideo && (\r\n            <video\r\n              ref={videoRef}\r\n              className=\"advicevideo\"\r\n              controls\r\n              autoPlay\r\n              controlsList=\"nodownload nofullscreen noremoteplayback\"\r\n              onContextMenu={(e) => e.preventDefault()}\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              <source src={selectedVideo} type=\"video/mp4\" />\r\n              Your browser does not support the video tag.\r\n            </video>\r\n          )}\r\n          <CloseButton onClick={closeModal}>&times;</CloseButton>\r\n        </ModalContent>\r\n      </ModalOverlay>\r\n      <Wrapper>\r\n        {showPopup && (\r\n          <Overlay>\r\n            <Popup>\r\n              <CloseBtn onClick={() => setShowPopup(false)}>×</CloseBtn>\r\n              <TitlePay>Payment Details</TitlePay>\r\n              <CardImageContainer>\r\n                <CardImage\r\n                  src=\"/assets/user/images/cardimage.jpg\"\r\n                  alt=\"cards\"\r\n                />\r\n              </CardImageContainer>\r\n              <Form onSubmit={handleSubmit}>\r\n                <FormGroup>\r\n                  <Label>Name</Label>\r\n                  <Input type=\"text\" name=\"name\" required placeholder=\"name\" />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label>Email</Label>\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    required\r\n                    placeholder=\"email\"\r\n                  />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                  <Label>Card Number</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    name=\"cardNumber\"\r\n                    required\r\n                    placeholder=\"card number\"\r\n                    inputMode=\"numeric\"\r\n                    maxLength={19} // 16 digits + 3 spaces\r\n                    onInput={(e) => {\r\n                      let value = e.target.value.replace(/\\D/g, \"\"); // Remove non-digits\r\n                      value = value.substring(0, 16); // Max 16 digits\r\n                      value = value.replace(/(.{4})/g, \"$1 \").trim(); // Add space every 4 digits\r\n                      e.target.value = value;\r\n                    }}\r\n                  />\r\n                </FormGroup>\r\n\r\n                <Row>\r\n                  <FormGroup>\r\n                    <Label>Expiry Date</Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"expiry\"\r\n                      required\r\n                      placeholder=\"MM/YYYY\"\r\n                      inputMode=\"numeric\"\r\n                      maxLength={7}\r\n                      pattern=\"(0[1-9]|1[0-2])\\/\\d{4}\" // MM/YYYY format\r\n                      onInput={(e) => {\r\n                        let value = e.target.value.replace(/\\D/g, \"\"); // remove non-digits\r\n                        if (value.length > 6) value = value.slice(0, 6);\r\n                        if (value.length >= 3) {\r\n                          value = value.slice(0, 2) + \"/\" + value.slice(2);\r\n                        }\r\n                        e.target.value = value;\r\n                      }}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <FormGroup>\r\n                    <Label>CVV</Label>\r\n                    <Input type=\"text\" name=\"cvv\" required placeholder=\"123\" />\r\n                  </FormGroup>\r\n                </Row>\r\n                <ButtonGroup>\r\n                  <Button\r\n                    type=\"button\"\r\n                    className=\"cancel\"\r\n                    onClick={() => setShowPopup(false)}\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                  <Button type=\"submit\" className=\"submit\">\r\n                    Pay Now\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </Form>\r\n            </Popup>\r\n          </Overlay>\r\n        )}\r\n      </Wrapper>\r\n    </>\r\n  );\r\n}\r\n"],"names":["SectionWrapper","styled","div","Stepblock","Titletext","GalleryWrapper","VideoThumbnail","ModalOverlay","_ref","open","ModalContent","CloseButton","button","AdviceVideos","errr","seterrr","useState","isModalOpen","setIsModalOpen","allRecordVideo","setAllrecordvideo","errorMsg","seterrorMsg","selectedVideo","setSelectedVideo","videoRef","useRef","backendpath","storedUsername","localStorage","getItem","userLogin","JSON","parse","useEffect","document","title","handleContextMenu","e","preventDefault","addEventListener","handleKeydown","key","ctrlKey","shiftKey","interval","setInterval","detectDevTools","widthThreshold","window","outerWidth","innerWidth","heightThreshold","outerHeight","innerHeight","removeEventListener","clearInterval","videolimitsave","async","formData","user_id","id","video_id","video","limit","max_limit","respo","axios","post","apiUrl","headers","Accept","data","status","message","setTimeout","current","pause","currentTime","_videoRef$current","play","err","response","request","console","error","getvideo","apiUrlVideo","results","showPopup","setShowPopup","_jsxs","_Fragment","children","_jsx","MainHeader","className","ModuleSideNav","map","index","videoPath","replace","onClick","openModal","muted","onContextMenu","onError","src","type","ref","controls","autoPlay","controlsList","style","width","closeModal","Wrapper","Overlay","Popup","CloseBtn","TitlePay","CardImageContainer","CardImage","alt","Form","onSubmit","log","target","FormGroup","Label","Input","name","required","placeholder","inputMode","maxLength","onInput","value","substring","trim","Row","pattern","length","slice","ButtonGroup","Button"],"sourceRoot":""}