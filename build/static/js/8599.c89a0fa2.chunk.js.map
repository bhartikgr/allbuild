{"version":3,"file":"static/js/8599.c89a0fa2.chunk.js","mappings":"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","sources":["components/InviteEventsFriend.jsx","components/AlertSucess.jsx","components/AlertError.jsx","components/Createneweventpost.jsx","components/EventPostComment.jsx","components/Editevent.jsx","components/EventMediaLikeComment.jsx","pages/Singleevent.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nexport const InviteEventsFriend = ({\n  isOpen1,\n  onClose1,\n  children,\n  friends,\n  LoginData,\n  eventId,\n  onInvitesSent,\n}) => {\n  const [selectedFriends, setSelectedFriends] = useState([]);\n  const [invMessage, setinvMessage] = useState(\"\");\n  var apiUrl = \"https://backend.amourette.no/\";\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n\n  const handleCheckboxChange = (userId) => {\n    setSelectedFriends((prevSelected) => {\n      if (prevSelected.includes(userId)) {\n        // If already selected, remove from selectedFriends\n        return prevSelected.filter((id) => id !== userId);\n      } else {\n        // If not selected, add to selectedFriends\n        return [...prevSelected, userId];\n      }\n    });\n  };\n  const handleInviterequest = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Create a FormData object to hold the selected friend IDs\n    let formData = {\n      friendIds: selectedFriends,\n      user_id: LoginData.id,\n      eventId: eventId,\n    };\n    console.log(formData);\n    // Append selected friend IDs to formData\n\n    try {\n      const response = await axios.post(\n        apiUrl + \"api/sendEventinvite\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      setinvMessage(\"Invites sent successfully\");\n      setSelectedFriends([]);\n      onInvitesSent();\n      setTimeout(() => {\n        setinvMessage(\"\");\n      }, 1500);\n      console.log(\"Invites sent successfully:\", response.data);\n    } catch (error) {\n      console.error(\"Error sending invites:\", error);\n      // Optionally handle error (e.g., show an error message)\n    }\n  };\n\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose1}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"invite_pop gallery_pop d-flex flex-column gap-4\">\n            <div className=\"d-flex flex-column gap-2\">\n              <h3>{`${t(\"invite_a_friend\")}`}</h3>\n              <p className=\"invite_text\"></p>\n            </div>\n            <form\n              action=\"javascript:void(0)\"\n              onSubmit={handleInviterequest}\n              method=\"post\"\n            >\n              <div className=\"row gy-3 align-items-end\">\n                <div className=\"col-12\">\n                  <ul className=\"invite_list scroll_bar p-0\">\n                    {friends.length > 0 ? (\n                      friends.map((friend, index) => (\n                        <li key={index}>\n                          <div className=\"d-flex align-items-center gap-3\">\n                            <div className=\"invite_profile\">\n                              {friend.profile_image ? ( // Display the image URL if available\n                                <img\n                                  className=\"w-100 h-100 object-fit-cover\"\n                                  src={friend.profile_image} // Use the URL created from the file\n                                  alt=\"Selected\"\n                                />\n                              ) : (\n                                <img\n                                  className=\"w-100 h-100 object-fit-cover\"\n                                  src={require(\"../assets/images/thumb.jpg\")} // If it's an image URL from the profile\n                                  alt=\"Profile\"\n                                />\n                              )}\n                            </div>\n                            <h4>{friend.username}</h4>{\" \"}\n                            {/* Display the friend's username */}\n                          </div>\n                          <div className=\"listbox d-flex justify-content-center\">\n                            <label className=\"cbox\">\n                              <input\n                                type=\"checkbox\"\n                                onChange={() => handleCheckboxChange(friend.id)} // Handle checkbox change\n                                checked={selectedFriends.includes(friend.id)} // Check if this friend is selected\n                                name=\"makeImagePrivate\"\n                              />\n                              <span className=\"checkmark\"></span>\n                            </label>\n                          </div>\n                        </li>\n                      ))\n                    ) : (\n                      <li className=\"invite_text\">\n                        <p>{`${t(\"No_friend_ab\")}`}.</p>{\" \"}\n                        {/* Message when there are no friends */}\n                      </li>\n                    )}\n                  </ul>\n                </div>\n                {invMessage !== \"\" && (\n                  <p className=\"invite_text text-success\">{invMessage}</p>\n                )}\n\n                <div className=\"col-12\">\n                  {friends.length > 0 ? (\n                    <button\n                      type=\"submit\"\n                      className={selectedFriends.length === 0 ? \"opa\" : \"\"}\n                      disabled={selectedFriends.length === 0}\n                    >\n                      {`${t(\"SEND_INVITE\")}`}\n                    </button>\n                  ) : (\n                    <p>{`${t(\"No_friend_ab\")}`}</p> // Optional message when there are no friends\n                  )}\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\n\nexport const AlertSucess = ({ isOpen1, onClose1 }) => {\n  const [selectedFriends, setSelectedFriends] = useState([]);\n  const [invMessage, setinvMessage] = useState(\"\");\n  var apiUrl = \"https://backend.amourette.no/\";\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n\n  const handleCheckboxChange = (userId) => {\n    setSelectedFriends((prevSelected) => {\n      if (prevSelected.includes(userId)) {\n        // If already selected, remove from selectedFriends\n        return prevSelected.filter((id) => id !== userId);\n      } else {\n        // If not selected, add to selectedFriends\n        return [...prevSelected, userId];\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"popup-overlay sucess_alert\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-4\">\n          <button className=\"close-button\" onClick={onClose1}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"sucess_meess d-flex flex-column gap-4\">\n            <div className=\"d-block sucess_notification\">\n              <p>Sucesses Sucesses Sucesses Sucesses Sucesses</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\n\nexport const AlertError = ({ isOpen1, onClose1 }) => {\n  const [selectedFriends, setSelectedFriends] = useState([]);\n  const [invMessage, setinvMessage] = useState(\"\");\n  var apiUrl = \"https://backend.amourette.no/\";\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n\n  const handleCheckboxChange = (userId) => {\n    setSelectedFriends((prevSelected) => {\n      if (prevSelected.includes(userId)) {\n        // If already selected, remove from selectedFriends\n        return prevSelected.filter((id) => id !== userId);\n      } else {\n        // If not selected, add to selectedFriends\n        return [...prevSelected, userId];\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"popup-overlay error_alert\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-4\">\n          <button className=\"close-button\" onClick={onClose1}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"error_meess d-flex flex-column gap-4\">\n            <div className=\"d-block error_notification\">\n              <p>Error</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nexport const Createneweventpost = ({\n  isOpen,\n  onClose,\n  eventId,\n  LoginData,\n  reSetPost,\n}) => {\n  // Move the hook calls outside the conditional return\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [restr_message, setrestr_message] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const [fileType, setFileType] = useState(\"\");\n  const [videoUrl, setVideoUrl] = useState(\"\");\n  var apiUrl = \"https://backend.amourette.no/api/\";\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  // If not open, return null\n  if (!isOpen) return null;\n\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose(); // Close the popup if the overlay is clicked\n    }\n  };\n  const MAX_FILE_SIZE = 25 * 1024 * 1024; // 2 MB\n  const handleImageChange = async (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      const isImage = file.type.startsWith(\"image/\");\n      const isVideo = file.type.startsWith(\"video/\");\n\n      if (!isImage && !isVideo) {\n        setError(\"Please upload a valid image or video file.\");\n        setImage(null);\n        return;\n      }\n\n      if (file.size > MAX_FILE_SIZE) {\n        setError(\"File size must be less than 5 MB.\");\n        setImage(null);\n        return;\n      }\n\n      setError(\"\");\n\n      if (isImage) {\n        const supportedImageTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n        if (!supportedImageTypes.includes(file.type)) {\n          try {\n            const convertedFile = await convertToPng(file);\n            setImage(convertedFile);\n            setFileType(\"image\");\n            return;\n          } catch (err) {\n            console.error(\"Image conversion error:\", err);\n            setError(\"Failed to convert image.\");\n            setImage(null);\n            return;\n          }\n        }\n\n        setImage(file);\n        setFileType(\"image\");\n      }\n\n      if (isVideo) {\n        const supportedVideoTypes = [\"video/mp4\", \"video/webm\", \"video/ogg\"];\n        if (!supportedVideoTypes.includes(file.type)) {\n          setError(\n            \"Unsupported video format. Only MP4, WebM, and OGG are allowed.\"\n          );\n          setImage(null);\n          return;\n        }\n\n        setImage(file);\n        setFileType(\"video\");\n      }\n    }\n  };\n\n  const convertToPng = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = function (event) {\n        const img = new Image();\n        img.onload = function () {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = img.width;\n          canvas.height = img.height;\n\n          const ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(img, 0, 0);\n\n          canvas.toBlob(\n            (blob) => {\n              if (blob) {\n                const pngFile = new File(\n                  [blob],\n                  file.name.replace(/\\.\\w+$/, \".png\"),\n                  {\n                    type: \"image/png\",\n                    lastModified: new Date().getTime(),\n                  }\n                );\n                resolve(pngFile);\n              } else {\n                reject(new Error(\"Failed to convert image.\"));\n              }\n            },\n            \"image/png\",\n            1\n          );\n        };\n        img.onerror = reject;\n        img.src = event.target.result;\n      };\n\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!image) {\n      //setError(\"Please upload an image\");\n      //return;\n    }\n    setspinner(true);\n    // Form data can be submitted here\n    const formData = new FormData();\n    formData.append(\"description\", description);\n    formData.append(\"image\", image);\n    formData.append(\"event_id\", eventId);\n    formData.append(\"user_id\", LoginData.id);\n    formData.append(\"fileType\", \"eventpost\");\n    // You can use fetch or axios to send the form data to your server\n    console.log(\"Submitting form:\", { description, image });\n    try {\n      const res = await axios.post(apiUrl + \"createEventPost\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"multipart/form\", // Ensure the content type is JSON\n        },\n      });\n      setspinner(false);\n      if (res.status === 200) {\n        console.log(\"Submission successful:\", res.data);\n        // Reset the form fields\n        setDescription(\"\");\n        setImage(null);\n        setError(\"\");\n        reSetPost();\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        // console.error(\"Request data:\", err.request);\n      } else {\n        //console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const isButtonDisabled = (!description.trim() && !image) || restr_message;\n  const handleCommentChange = (e) => {\n    const inputValue = e.target.value;\n    setDescription(inputValue);\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    if (hasRestrictedWord) {\n      setrestr_message(true);\n    } else {\n      setrestr_message(false);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"gallery_pop d-flex flex-column gap-4\">\n            <h3>{`${t(\"create_post\")}`}</h3>\n            {restr_message && (\n              <span className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                {`${t(\"Your_message_contain\")}`}\n              </span>\n            )}\n            <form onSubmit={handleSubmit}>\n              <div className=\"row gy-3 align-items-end\">\n                <div className=\"col-12\">\n                  <textarea\n                    rows=\"8\"\n                    placeholder=\"What do you think?\"\n                    value={description}\n                    onChange={handleCommentChange}\n                  ></textarea>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"uploadfile rel bgload\">\n                    <input\n                      type=\"file\"\n                      accept=\"image/*,video/mp4,video/webm,video/ogg\"\n                      className=\"fileload\"\n                      name=\"image\"\n                      onChange={handleImageChange}\n                    />\n                    <div className=\"upload_image\">\n                      {/* Show image preview */}\n                      {fileType === \"image\" && image && (\n                        <img\n                          className=\"w-100 h-100\"\n                          src={URL.createObjectURL(image)}\n                          alt=\"Selected Image\"\n                        />\n                      )}\n\n                      {/* Show video preview */}\n                      {fileType === \"video\" && image && (\n                        <video className=\"w-100 h-100\" controls>\n                          <source\n                            src={videoUrl || URL.createObjectURL(image)}\n                            type=\"video/mp4\"\n                          />\n                          {t(\"Your_browser_does\")}\n                        </video>\n                      )}\n                    </div>\n                    <div className=\"inload\" style={{ height: \"100px\" }}>\n                      <div>\n                        <BsCloudUpload style={{ fontSize: \"24px\" }} />\n                        <h3 style={{ fontSize: \"14px\" }}>{`${t(\n                          \"upload_image\"\n                        )}`}</h3>\n                      </div>\n                      {error && <p style={{ color: \"red\" }}>{error}</p>}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  {spinner && (\n                    <div\n                      className=\"spinner-border text-success date-load\"\n                      role=\"status\"\n                    >\n                      <span className=\"visually-hidden\">Loading...</span>\n                    </div>\n                  )}\n                  <button\n                    type=\"submit\"\n                    disabled={isButtonDisabled} // Disable button if comment is empty\n                    style={{ opacity: isButtonDisabled ? 0.1 : 1 }}\n                  >\n                    {`${t(\"post\")}`}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport { Link } from \"react-router-dom\";\nimport chat from \"../assets/images/chatpost.png\";\nimport axios from \"axios\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nexport const EventPostComment = ({\n  isEventpost,\n  LoginData,\n  Iseventfav,\n  commentSectionRefresh,\n  getpostCommentrefresh,\n}) => {\n  const [postId, setpostId] = useState(\"\");\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(1);\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const [comments, setComments] = useState(Array(isEventpost.length).fill(\"\"));\n  const [webSocket, setWebSocket] = useState(null);\n  const apiUrl = \"https://backend.amourette.no/api/\";\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [restrictedStates, setRestrictedStates] = useState([]); // To track restricted word status for each input\n  const MAX_WORDS = 2000;\n  const inputRef = useRef({});\n  const [modalOpen, setModalOpen] = useState(false);\n  const [imagess, setimage] = useState(null);\n  const openModal = () => setModalOpen(true);\n  const closeModal = () => {\n    setimage(null); // Close the modal by setting imagess to null\n  };\n  const [showPopError, setShowPopError] = useState(false);\n  // Create WebSocket connection when component mounts\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\"); // Adjust port if needed\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        console.log(\"New WebSocket message:\", receivedMessage);\n\n        if (receivedMessage.event === \"eventComments\") {\n          commentSectionRefresh();\n        }\n        if (receivedMessage.event === \"eventfav\") {\n          console.log(\"aaaaaa\");\n\n          commentSectionRefresh();\n        }\n      } catch (error) {\n        console.error(\"Failed to parse WebSocket message:\", error);\n        console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [isEventpost, LoginData]);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const handleCommentChange = (e, index) => {\n    const inputValue = e.target.value;\n\n    setComments((prev) => ({\n      ...prev,\n      [index]: inputValue, // Ensure updating only specific input\n    }));\n\n    // Check for restricted words for the specific input\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    // Update the restriction state for this input\n    setRestrictedStates((prev) => ({\n      ...prev,\n      [index]: hasRestrictedWord,\n    }));\n  };\n\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const fetchComments = async (event_id) => {\n    let formData = {\n      event_id: event_id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"GetEventPostComments\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      console.log(res.data);\n      // Ensure commentsData is an array of strings\n      const commentsData = res.data.results;\n      //setComments(commentsData);\n    } catch (error) {\n      console.error(\"Error fetching comments:\", error);\n    }\n  };\n  const countWords = (text) => {\n    return text.trim() ? text.split(/\\s+/).length : 0; // Count words by splitting on whitespace\n  };\n  const handlePostComment = async (index, postId, event_id) => {\n    // Ensure the input is trimmed and not empty\n    const commentText = comments[index]?.trim();\n    const currentWordCount = countWords(commentText); // Assuming a single comment input for simplicity\n\n    if (currentWordCount < 2000) {\n      if (commentText) {\n        const formData = {\n          post_id: postId,\n          user_id: LoginData.id,\n          event_id: event_id,\n          comment: commentText, // Use trimmed comment\n        };\n\n        try {\n          const res = await axios.post(\n            apiUrl + \"CreateEventPostComment\",\n            formData,\n            {\n              headers: {\n                Accept: \"application/json\",\n                \"Content-Type\": \"application/json\",\n              },\n            }\n          );\n\n          console.log(index);\n          // Clear the comment input after posting\n          setComments((prev) => ({\n            ...prev,\n            [index]: \"\", // Reset only this comment field\n          }));\n\n          Iseventfav();\n          // Refresh the comment section\n          await fetchComments(event_id);\n        } catch (err) {\n          console.error(\"Error posting comment:\", err);\n        }\n      }\n    } else {\n      setShowPopError(true);\n      setPoperrorMessage(\n        `Comment cannot exceed ${MAX_WORDS} words. Currently: ${currentWordCount} words.`\n      );\n      setTimeout(() => {\n        setShowPopError(false);\n        setPoperrorMessage(\"\");\n      }, 1500);\n    }\n  };\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n\n  const [showPicker, setShowPicker] = useState({}); // Ensure it's an object\n\n  const handleEmojiClick = (emojiObject, index) => {\n    const inputEl = inputRef.current[index];\n    if (!inputEl) return;\n\n    // Get current value, ensuring it's a string\n    const currentValue = comments[index] || \"\";\n\n    // Insert emoji at the current cursor position\n    const startPos = inputEl.selectionStart || currentValue.length;\n    const endPos = inputEl.selectionEnd || currentValue.length;\n    const newValue =\n      currentValue.substring(0, startPos) +\n      emojiObject.emoji +\n      currentValue.substring(endPos);\n\n    setComments((prev) => ({\n      ...prev,\n      [index]: newValue, // Ensure the index key is properly set\n    }));\n\n    // Move cursor after the inserted emoji\n    setTimeout(() => {\n      inputEl.selectionStart = inputEl.selectionEnd =\n        startPos + emojiObject.emoji.length;\n      inputEl.focus();\n    }, 0);\n\n    // Close emoji picker\n    setShowPicker((prev) => ({\n      ...prev,\n      [index]: false,\n    }));\n  };\n\n  const toggleEmojiPicker = (index) => {\n    setShowPicker((prev) => ({\n      ...prev,\n      [index]: !prev[index], // Toggle the specific index\n    }));\n  };\n  const handleChangeHeart = async (postid, event_id) => {\n    let formData = {\n      user_id: LoginData.id,\n      post_id: postid,\n      event_id: event_id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"EventpostFavourite\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      Iseventfav();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleeventPostDeleteconfirm = async (id) => {\n    setpostId(id);\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want delete this post\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const handleeventPostDelete = async () => {\n    let formData = {\n      id: postId,\n      user_id: LoginData.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"eventpostDelete\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      setisPopupOpen_delete(false);\n      getpostCommentrefresh();\n    } catch (err) {\n      console.error(\"Error posting comment:\", err);\n    }\n  };\n  const refreshpopup = async () => {\n    handleeventPostDelete();\n  };\n  const handleKeyDown = (e, index, postId, event_id) => {\n    if (e.key === \"Enter\" && comments[index]?.trim() !== \"\") {\n      e.preventDefault();\n      handlePostComment(index, postId, event_id);\n    }\n  };\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        closeModal();\n      }\n    };\n\n    // Attach event listener\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup event listener on unmount\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n  return (\n    <>\n      <AlertDelete\n        isOpen1={isPopupOpen_delete}\n        onClose1={closePopup_delete}\n        message={deleteMessage}\n        onReturnSent={refreshpopup}\n      ></AlertDelete>\n      {showPopError && <ErrorPop message={errorPopMessage} />}\n      {isEventpost.length > 0 ? (\n        isEventpost.map((post, index) => (\n          <div className=\"evname d-block\" key={index}>\n            <div className=\"d-flex flex-column gap-2\">\n              <div className=\"d-flex gap-2 align-items-center\">\n                <div className=\"flex-shrink-0\">\n                  <div className=\"evephoto ofit rounded-circle overflow-hidden\">\n                    <Link to={`/friend/${post.uid}`} target=\"_blank\">\n                      {post.profile_image && post.makeImagePrivate === 0 ? (\n                        <img src={post.profile_image} alt=\"Selected\" />\n                      ) : (\n                        <img\n                          src={require(\"../assets/images/thumb.jpg\")}\n                          alt=\"Profile\"\n                        />\n                      )}\n                    </Link>\n                  </div>\n                </div>\n                <div className=\"flex-grow-1\">\n                  <div className=\"d-flex flex-column gap-1 evettimeheaing\">\n                    <Link to={`/friend/${post.uid}`} target=\"_blank\">\n                      {post.username} {t(\"createdaevent\")}\n                    </Link>\n                    <h5>{formateTime(post.date)}</h5>\n                  </div>\n                </div>\n                {LoginData.id === post.user_id && (\n                  <div className=\"flex-shrink-0 posttopbtns\">\n                    <button\n                      title=\"Delete\"\n                      type=\"button\"\n                      onClick={() => handleeventPostDeleteconfirm(post.id)}\n                      className=\"btn redbtn\"\n                      style={{\n                        padding: \"0px 0px\",\n                        textAlign: \"center\",\n                        minWidth: \"0px\",\n                        background: \"red\",\n                      }}\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width={24}\n                        height={24}\n                        viewBox=\"0 0 24 24\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        strokeWidth={2}\n                        strokeLinecap=\"round\"\n                        strokeLinejoin=\"round\"\n                        className=\"icon icon-tabler icons-tabler-outline icon-tabler-trash\"\n                      >\n                        <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                        <path d=\"M4 7l16 0\" />\n                        <path d=\"M10 11l0 6\" />\n                        <path d=\"M14 11l0 6\" />\n                        <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                        <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n                      </svg>\n                    </button>\n                  </div>\n                )}\n              </div>\n              <div className=\"d-block contpost\">\n                <p>{post.description}</p>\n              </div>\n              {post.file && (\n                <div className=\"postimgfull ofit rounded-2 overflow-hidden\">\n                  <MediaRenderer\n                    url={post.file}\n                    onClick={() => {\n                      setimage(post.file);\n                    }}\n                  />\n                </div>\n              )}\n              <div className=\"d-flex justify-content-end\">\n                <div className=\"d-flex gap-3 postchatheart\">\n                  <div className=\"d-flex align-items-center gap-3\">\n                    <button type=\"button\" className=\"btn fulw\">\n                      <img src={chat} alt=\"chatpic\" />\n                    </button>\n                    <p>{post.post.length}</p>\n                  </div>\n                  <div className=\"d-flex align-items-center gap-3\">\n                    <button\n                      type=\"button\"\n                      onClick={() => handleChangeHeart(post.id, post.event_id)}\n                      className=\"liked btn fulw\"\n                    >\n                      {post.fav ? <FaHeart /> : <FaRegHeart />}\n                    </button>\n\n                    <p>{post.fav_count}</p>\n                  </div>\n                </div>\n              </div>\n              <div className=\"comment_input d-flex flex-column gap-3\">\n                <ul className=\"p-0 comment_section scroll_bar d-flex flex-column gap-2\">\n                  {post.post.length > 0 ? (\n                    post.post.map((comm, index) => (\n                      <li\n                        className=\"d-flex align-items-start gap-2\"\n                        key={index}\n                      >\n                        <Link\n                          to={`/friend/${comm.comt_uid}`}\n                          target=\"_blank\"\n                          className=\"d-block user_profile\"\n                        >\n                          {comm.comment_user_profile_image &&\n                          comm.comment_makeImagePrivate === 0 ? (\n                            <img\n                              className=\"w-100 h-100\"\n                              src={comm.comment_user_profile_image}\n                              alt=\"eventspic\"\n                            />\n                          ) : (\n                            <img\n                              className=\"w-100 h-100\"\n                              src={require(\"../assets/images/thumb.jpg\")}\n                              alt=\"eventspic\"\n                            />\n                          )}\n                        </Link>\n                        <div className=\"d-flex flex-column gap-1\">\n                          <div className=\"d-flex align-items-center gap-3\">\n                            <Link\n                              to={`/friend/${comm.comt_uid}`}\n                              target=\"_blank\"\n                              className=\"textcolor\"\n                            >\n                              {comm.comment_user_username}{\" \"}\n                            </Link>\n                            <span className=\"comment_time\">\n                              {formateTime(comm.comment_date)}\n                            </span>\n                          </div>\n                          <p className=\"comment_user scroll_bar\">\n                            {comm.description}\n                          </p>\n                        </div>\n                      </li>\n                    ))\n                  ) : (\n                    <p>{t(\"Nocommentsavailable\")}</p>\n                  )}\n                </ul>\n                {restrictedStates[index] && (\n                  <span className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                    {t(\"Your_message_contain\")}\n                  </span>\n                )}\n                <div className=\"d-flex align-items-center gap-2\">\n                  <div className=\"emoji-container\">\n                    <button\n                      type=\"button\"\n                      className=\"emoji-button\"\n                      onClick={() => toggleEmojiPicker(index)}\n                    >\n                      😀\n                    </button>\n\n                    {showPicker[index] && (\n                      <div className=\"emoji-picker\">\n                        <EmojiPicker\n                          onEmojiClick={(emojiObject) =>\n                            handleEmojiClick(emojiObject, index)\n                          }\n                        />\n                      </div>\n                    )}\n                  </div>\n                  <input\n                    type=\"text\"\n                    name=\"comment\"\n                    placeholder={t(\"EnterYourComment\")}\n                    onKeyDown={(e) =>\n                      handleKeyDown(e, index, post.id, post.event_id)\n                    }\n                    ref={(el) => (inputRef.current[index] = el)}\n                    value={comments[index]} // Controlled input\n                    onChange={(e) => handleCommentChange(e, index)} // Handle input changes\n                  />\n\n                  <button\n                    type=\"submit\"\n                    onClick={() =>\n                      handlePostComment(index, post.id, post.event_id)\n                    }\n                    disabled={\n                      !comments[index]?.trim() || restrictedStates[index]\n                    } // Disable button if input is empty or has restricted words\n                    style={{\n                      opacity:\n                        !comments[index]?.trim() || restrictedStates[index]\n                          ? 1\n                          : 1,\n                      transition: \"opacity 0.3s\",\n                    }}\n                    className=\"comment_postbtn\"\n                  >\n                    {t(\"Post\")}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        ))\n      ) : (\n        <p>{t(\"Nopostsavailable\")}</p>\n      )}\n\n      {imagess && (\n        <div id=\"myModal\" className=\"modalgg\">\n          <span className=\"close cursor\" onClick={closeModal}>\n            &times;\n          </span>\n          <div className=\"modal-content\">\n            <div\n              className=\"mySlides\"\n              style={{\n                display: \"flex\",\n              }}\n            >\n              <MediaRenderer url={imagess} />\n            </div>\n\n            <div className=\"caption-container\">\n              {/* <p id=\"caption\">{images[currentSlideIndex - 1]?.alt}</p> */}\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\n\nexport const Editevent = ({\n  isOpen,\n  onClose,\n  onEventCreated,\n  eventId,\n  EventDetail,\n}) => {\n  console.log(EventDetail);\n  // Initialize state for the checkbox only\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [showPopError, setShowPopError] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [makeImagePrivate, setMakeImagePrivate] = useState(false);\n  const [spinner, setspinner] = useState(false);\n  const [eventData, setEventData] = useState({\n    name: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    time: \"\",\n    location: \"\",\n    description: \"\",\n    image: null,\n  });\n  var apiUrl = \"https://backend.amourette.no/\";\n  const [restr_message, setrestr_message] = useState(false);\n  const today = new Date(); // Get today's date\n  const day = String(today.getDate()).padStart(2, \"0\"); // Get day and ensure 2 digits\n  const month = String(today.getMonth() + 1).padStart(2, \"0\"); // Get month and ensure 2 digits (months are zero-indexed)\n  const year = today.getFullYear(); // Get the full year\n  const { t } = useTranslation();\n  const [previewImage, setPreviewImage] = useState(\"\");\n\n  useEffect(() => {\n    if (EventDetail) {\n      setEventData({\n        name: EventDetail.name,\n        description: EventDetail.description,\n        start_date: EventDetail.start_date\n          ? EventDetail.start_date.split(\"T\")[0]\n          : \"\",\n        end_date: EventDetail.end_date\n          ? EventDetail.end_date.split(\"T\")[0]\n          : \"\",\n        time: EventDetail.time,\n        location: EventDetail.location,\n      });\n      if (EventDetail.image) {\n        setSelectedFile(null); // Reset selectedFile if editing\n        setPreviewImage(EventDetail.image);\n      }\n      setMakeImagePrivate(EventDetail.makeImageUse || false);\n\n      if (EventDetail.image) {\n        setSelectedFile(null); // Reset selectedFile if editing\n        setPreviewImage(EventDetail.image);\n      }\n    }\n  }, [EventDetail]);\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const today_enddate = `${day}-${month}-${year}`;\n  if (!isOpen) return null;\n\n  const handleOverlayClick = (e) => {\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose();\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value, type, files } = e.target;\n\n    // Check for restricted words only for text inputs\n    if (type === \"text\" || type === \"textarea\") {\n      const hasRestrictedWord = restrictedWords.some((word) =>\n        value.toLowerCase().includes(word.toLowerCase())\n      );\n\n      if (hasRestrictedWord) {\n        // Display a message or set an error state\n        setrestr_message(true);\n      } else {\n        setrestr_message(false);\n      }\n    }\n\n    // Update event data\n    setEventData((prevData) => ({\n      ...prevData,\n      [name]: type === \"file\" ? files[0] : value,\n    }));\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const handleCheckboxChange = (e) => {\n    const { checked } = e.target;\n    setMakeImagePrivate(checked);\n  };\n  const MAX_FILE_SIZE = 2 * 1024 * 1024; // 2 MB\n  const handleFileChange = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      // Check if the file is an image\n      const isImage = file.type.startsWith(\"image/\");\n      if (!isImage) {\n        setErrorMessage(\"Please upload a valid image file.\");\n        setSelectedFile(null);\n        return;\n      }\n\n      // Check the file size\n      if (file.size > MAX_FILE_SIZE) {\n        setErrorMessage(\"File size must be less than 2 MB.\");\n        setSelectedFile(null);\n        return;\n      }\n      setPreviewImage(\"\");\n      // Clear any previous error messages and set the selected file\n      setErrorMessage(\"\");\n      setSelectedFile(file);\n    }\n  };\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    setspinner(true);\n    try {\n      if (selectedFile !== null) {\n        const formData = new FormData();\n        // Append checkbox value to formData\n        formData.append(\"makeImagePrivate\", makeImagePrivate);\n        formData.append(\"user_id\", userLogin.id);\n        formData.append(\"fileType\", \"events\");\n        formData.append(\"eventId\", eventId);\n        formData.append(\"image\", selectedFile);\n        for (const key in eventData) {\n          formData.append(key, eventData[key]);\n        }\n\n        const response = await axios.post(\n          apiUrl + \"api/eventseditfile\",\n          formData,\n          {\n            headers: {\n              \"Content-Type\": \"multipart/form-data\",\n            },\n          }\n        );\n        setspinner(false);\n        //console.log(response.data);\n        if (response.data.status === \"2\") {\n          setShowPopError(true);\n          setPoperrorMessage(response.data.message);\n          setTimeout(() => {\n            setShowPopError(false);\n            setPoperrorMessage(\"\");\n            //onClose();\n          }, 1000);\n        } else {\n          window.location.replace(`/singleevent/${response.data.slug}`);\n          setShowPopSuccess(true);\n          setPopsuccessMessage(response.data.message);\n          setTimeout(() => {\n            setShowPopError(false);\n            setShowPopSuccess(false);\n            window.location.reload();\n          }, 900);\n          console.log(\"Event created:\", response.data);\n          setEventData({\n            name: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            time: \"\",\n            location: \"\",\n            description: \"\",\n            image: null,\n          });\n          setSelectedFile(null);\n        }\n      } else {\n        const formData = new FormData();\n        // Append checkbox value to formData\n        formData.append(\"makeImagePrivate\", makeImagePrivate);\n        formData.append(\"user_id\", userLogin.id);\n        formData.append(\"fileType\", \"events\");\n        formData.append(\"eventId\", eventId);\n        formData.append(\"image\", selectedFile);\n\n        formData.append(\"previewImage\", previewImage);\n        for (const key in eventData) {\n          formData.append(key, eventData[key]);\n        }\n\n        const response = await axios.post(apiUrl + \"api/eventsedit\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        });\n        setspinner(false);\n\n        if (response.data.status === \"2\") {\n          setShowPopError(true);\n          setPoperrorMessage(response.data.message);\n          setTimeout(() => {\n            setShowPopError(false);\n            setPoperrorMessage(\"\");\n            //onClose();\n          }, 1000);\n        } else {\n          window.location.replace(`/singleevent/${response.data.slug}`);\n          setShowPopSuccess(true);\n          setPopsuccessMessage(response.data.message);\n          setTimeout(() => {\n            setShowPopError(false);\n            setShowPopSuccess(false);\n            window.location.reload();\n          }, 900);\n\n          setEventData({\n            name: \"\",\n            start_date: \"\",\n            end_date: \"\",\n            time: \"\",\n            location: \"\",\n            description: \"\",\n            image: null,\n          });\n          setSelectedFile(null);\n        }\n      }\n\n      // Close the popup after submission\n    } catch (error) {\n      setspinner(false);\n      setShowPopError(true);\n      setPoperrorMessage(\"Some thing went wrong,Please try again:\", error);\n      setTimeout(() => {\n        setShowPopError(false);\n        setShowPopError(\"\");\n        onClose();\n      }, 1000);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          {showPopSuccess && <SuccessPop message={successPopMessage} />}\n          {showPopError && <ErrorPop message={errorPopMessage} />}\n          <div className=\"cneventup d-flex flex-column gap-4\">\n            <h3> {t(\"edit_event\")}</h3>\n\n            <form onSubmit={handleSubmit}>\n              <div className=\"row gy-4\">\n                <div className=\"col-md-4\">\n                  <div className=\"uploadfile rel bgload\">\n                    <input\n                      type=\"file\"\n                      required={!previewImage}\n                      name=\"image\"\n                      onChange={handleFileChange}\n                      className=\"fileload\"\n                    />\n                    <div className=\"upload_image\">\n                      {previewImage && (\n                        <img\n                          className=\"w-100 h-100\"\n                          src={previewImage} // Create a URL for the selected image\n                          alt=\"Selected\"\n                        />\n                      )}\n                      {selectedFile && (\n                        <img\n                          className=\"w-100 h-100\"\n                          src={URL.createObjectURL(selectedFile)} // Create a URL for the selected image\n                          alt=\"Selected\"\n                        />\n                      )}\n                    </div>\n                    <div className=\"inload\" style={{ height: \"100px\" }}>\n                      <div>\n                        <BsCloudUpload style={{ fontSize: \"24px\" }} />\n                        <h3 style={{ fontSize: \"14px\" }}>\n                          {t(\"upload_image\")} *\n                        </h3>\n                      </div>\n                    </div>\n                    {errorMessage && (\n                      <p className=\"text-danger\">{errorMessage}</p>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <input\n                    type=\"text\"\n                    placeholder={t(\"event_name\")}\n                    name=\"name\"\n                    defaultValue={eventData.name}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"datetimeline rel\">\n                    <label className=\"stextlabel\">{t(\"start_date\")} *</label>\n                    <input\n                      type=\"date\"\n                      name=\"start_date\"\n                      defaultValue={eventData.start_date}\n                      onChange={(e) => {\n                        const selectedDate = new Date(e.target.value);\n                        const today = new Date();\n                        today.setHours(0, 0, 0, 0); // Normalize today's date\n\n                        if (selectedDate < today) {\n                          alert(\"Please select a future date.\");\n                        } else {\n                          handleInputChange(e);\n                        }\n                      }}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"datetimeline rel\">\n                    <label className=\"stextlabel\">{t(\"end_date\")} *</label>\n                    <input\n                      type=\"date\"\n                      name=\"end_date\"\n                      value={eventData.end_date}\n                      minLength={today_enddate}\n                      onChange={handleInputChange}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"datetimeline rel\">\n                    <label className=\"stextlabel\">{t(\"time\")} *</label>\n                    <input\n                      type=\"time\"\n                      name=\"time\"\n                      value={eventData.time}\n                      onChange={handleInputChange}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <input\n                    type=\"text\"\n                    placeholder={t(\"Location\")}\n                    name=\"location\"\n                    value={eventData.location}\n                    onChange={handleInputChange}\n                  />\n                </div>\n                <div className=\"col-12\">\n                  <textarea\n                    name=\"description\"\n                    rows=\"5\"\n                    placeholder={t(\"event_description\")}\n                    value={eventData.description}\n                    onChange={handleInputChange}\n                  ></textarea>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"listbox\">\n                    <label className=\"cbox\">\n                      {t(\"Make_private\")}\n                      <input\n                        type=\"checkbox\"\n                        name=\"makeImagePrivate\"\n                        checked={makeImagePrivate} // Use the state directly\n                        onChange={handleCheckboxChange} // Use dedicated handler\n                      />\n                      <span className=\"checkmark\"></span>\n                    </label>\n                  </div>\n                </div>\n                {restr_message && (\n                  <span className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                    {t(\"Your_message_contain\")}\n                  </span>\n                )}\n                <div className=\"col-12\">\n                  {spinner && (\n                    <div\n                      className=\"spinner-border text-success date-load\"\n                      role=\"status\"\n                    >\n                      <span className=\"visually-hidden\">{t(\"loading\")}...</span>\n                    </div>\n                  )}\n                  <button type=\"submit\">{t(\"edit_event\")}</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useRef, useEffect } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport { FaRegHeart, FaHeart } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport { FaChevronLeft } from \"react-icons/fa\";\nimport { FaChevronRight } from \"react-icons/fa\";\nimport EmojiPicker from \"emoji-picker-react\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nexport const EventMediaLikeComment = ({\n  isOpen1,\n  onClose1,\n  GroupPostDataPopup,\n  GrouppostCommentGet,\n  getrefreshComment,\n  favSectionRefresh,\n  gotoNext,\n  gotoprev,\n  validPosts,\n}) => {\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [input, setInput] = useState(\"\");\n  const [restr_message, setrestr_message] = useState(false);\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const chatEndRef = useRef(null);\n  const { t } = useTranslation();\n  const inputRef = useRef(null);\n  const [isparamVl, setparamVl] = useState(\"\");\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  const [UserPhotoCommets, setUserPhotoCommets] = useState(\"\");\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n  const [UserPopupData, setUserPopupData] = useState(\"\");\n\n  const [PopupData, setPopupData] = useState(\"\");\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n\n  //console.log(GalleryCommets);\n  // Ref to the chat container\n  var apiUrl = \"https://backend.amourette.no/api/\";\n\n  const [comments, setComments] = useState(\"\");\n  const [spinner, setspinner] = useState(false);\n  const onEmojiClick = (event, emojiObject) => {\n    setInput((prevInput) => prevInput + emojiObject.emoji);\n  };\n\n  const formateTime = (dateString) => {\n    if (!dateString) return null;\n\n    // Parse the date as UTC\n    const postDate = new Date(dateString);\n    if (isNaN(postDate.getTime())) {\n      console.error(\"Invalid date:\", dateString);\n      return \"Invalid date\";\n    }\n\n    // Get the current time in UTC\n    const now = new Date();\n\n    // Adjust the postDate by subtracting 1 hour (3600000ms)\n    const adjustedPostDate = new Date(postDate.getTime() - 3600000);\n\n    // Convert postDate to Europe/Oslo time correctly\n    const osloPostTime = new Intl.DateTimeFormat(\"en-GB\", {\n      timeZone: \"Europe/Oslo\",\n      hour: \"2-digit\",\n      minute: \"2-digit\",\n      hour12: false, // Ensures 24-hour format\n    }).format(adjustedPostDate);\n\n    // Calculate time difference in seconds, minutes, hours, days\n    const timeDiff = now.getTime() - postDate.getTime();\n    const seconds = Math.floor(timeDiff / 1000);\n    const minutes = Math.floor(seconds / 60);\n    const hours = Math.floor(minutes / 60);\n    const days = Math.floor(hours / 24);\n    const weeks = Math.floor(days / 7);\n    const months = Math.floor(days / 30);\n    const years = Math.floor(days / 365);\n\n    // Generate formatted output based on the difference\n    if (minutes < 60) return `${osloPostTime}`;\n    if (hours < 24) return `${osloPostTime}`;\n    if (days === 1) return `Yesterday at ${osloPostTime}`;\n    if (days < 7) return `${days}d  ${osloPostTime}`;\n    if (weeks < 4) return `${weeks}w  ${osloPostTime}`;\n    if (months < 12) return `${months}m  ${osloPostTime}`;\n    return `${years}y  ${osloPostTime}`;\n  };\n\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (!isOpen1) return;\n      if (event.key === \"ArrowRight\") {\n        gotoNext();\n      } else if (event.key === \"ArrowLeft\") {\n        gotoprev();\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => window.removeEventListener(\"keydown\", handleKeyDown);\n  }, [isOpen1, gotoNext, gotoprev]);\n\n  // Example usage\n\n  const isButtonDisabled = !comments.trim() || restr_message;\n  const handleCommentChange = (e) => {\n    const inputValue = e.target.value;\n\n    // Update the state with the new text (including emojis)\n    setComments(inputValue);\n\n    // If input is completely empty, remove all text and emojis\n    if (inputValue.trim() === \"\") {\n      setComments(\"\");\n    }\n\n    // Check for restricted words\n    const hasRestrictedWord = restrictedWords.some((word) =>\n      inputValue.toLowerCase().includes(word.toLowerCase())\n    );\n\n    setrestr_message(hasRestrictedWord);\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const getcommentUseralbum = async (id, commentid) => {\n    let formData = {\n      id: id,\n      commentid: commentid,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(\n        apiUrl + \"getUseralbumsCommentsSeperate\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n\n      const newComment = res.data.album.comments; // the newly saved comment with full details\n      console.log(newComment);\n      setUserPhotoCommets((prevComments) => [\n        ...prevComments, // Spread the previous comments\n        ...newComment, // Append the new comments\n      ]);\n      if (newComment.user_id === userLogin.id) {\n        if (chatEndRef.current) {\n          chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n        }\n      }\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Server responded with error:\", err.response);\n      } else if (err.request) {\n        console.error(\"No response received:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    } finally {\n      setspinner(false);\n    }\n  };\n  const handlePostSubmit = async (e) => {\n    if (e.preventDefault) e.preventDefault();\n\n    setspinner(true);\n\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      comment: e.description || e.target.description.value,\n      event_id: GroupPostDataPopup.event_id,\n      post_id: GroupPostDataPopup.id,\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(\n        apiUrl + \"CreateEventPostComment\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      getrefreshComment(\"\");\n      setTimeout(() => {\n        if (chatEndRef.current) {\n          chatEndRef.current.scrollIntoView({ behavior: \"smooth\" });\n        }\n      }, 1000);\n      setComments(\"\");\n    } catch (err) {\n      if (err.response) {\n        console.error(\"Server responded with error:\", err.response);\n      } else if (err.request) {\n        console.error(\"No response received:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    } finally {\n      setspinner(false);\n    }\n  };\n\n  const [showPicker, setShowPicker] = useState(false);\n\n  const handleEmojiClick = (emojiObject) => {\n    // Append emoji to the existing text\n    setComments((prevMessage) => prevMessage + emojiObject.emoji);\n    setShowPicker(false);\n\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  };\n  // Update `isparamVl` when `currentIndex` changes\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        onClose1(); // Close the popup when Escape is pressed\n      }\n    };\n\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup the event listener on component unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [onClose1]);\n  const handleKeyDown = (e) => {\n    if (e.key === \"Enter\" && comments.trim() !== \"\") {\n      e.preventDefault();\n\n      handlePostSubmit({\n        description: comments,\n        event_id: GroupPostDataPopup.event_id,\n        post_id: GroupPostDataPopup.id,\n        user_id: userLogin.id,\n      });\n    }\n  };\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n  const handledeletebtn = () => {\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want to delete this album media\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const refreshpopup = async () => {\n    deletePost();\n  };\n  const deletePost = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  };\n  const handleChangeHeartPopup = async (postid, event_id) => {\n    let formData = {\n      user_id: userLogin.id,\n      post_id: postid,\n      event_id: event_id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"EventpostFavourite\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      favSectionRefresh();\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <AlertDelete\n          isOpen1={isPopupOpen_delete}\n          onClose1={closePopup_delete}\n          message={deleteMessage}\n          onReturnSent={refreshpopup}\n        ></AlertDelete>\n        {showPopSuccess && <SuccessPop message={successPopMessage} />}\n        <div className=\"popup-content col-md-10\">\n          <button\n            className=\"close-button\"\n            style={{ zIndex: \"999\" }}\n            onClick={onClose1}\n          >\n            &times; {/* Close button */}\n          </button>\n\n          <div className=\"usergallery_pop  d-flex flex-column gap-1 h-100\">\n            <button\n              className=\"arrow right\"\n              type=\"button\"\n              onClick={() => gotoNext()}\n            >\n              <FaChevronRight />\n            </button>\n            <button\n              className=\"arrow left\"\n              type=\"button\"\n              onClick={() => gotoprev()}\n            >\n              <FaChevronLeft />\n            </button>\n            <div className=\"row p-2 p-md-4\">\n              <div className=\"col-lg-7\">\n                <div className=\"position-relative\">\n                  <div className=\"d-block gallery_im1g \">\n                    {GroupPostDataPopup.file ? (\n                      // Check if the URL ends with a valid image extension\n                      <MediaRenderer url={GroupPostDataPopup.file} />\n                    ) : (\n                      // Fallback when `item.image` is undefined or invalid\n                      <p>{t(\"No_avalibale_media\")}</p>\n                    )}\n                  </div>\n                  {userLogin.id === GroupPostDataPopup.user_id && (\n                    <div className=\"flex-shrink-0 posttopbtns\">\n                      {/* <button\n                        title=\"Delete\"\n                        onClick={handledeletebtn}\n                        type=\"button\"\n                        className=\"btn redbtn\"\n                        style={{\n                          padding: \"0px 0px\",\n                          textAlign: \"center\",\n                          minWidth: \"0px\",\n                          background: \"red\",\n                          width: \"40px\",\n                          height: \"40px\",\n                          borderRadius: \"50px\",\n                          position: \"absolute\",\n                          top: \"10px\",\n                          right: \"15px\",\n                        }}\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width={24}\n                          height={24}\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth={2}\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          className=\"icon icon-tabler textcolor icons-tabler-outline icon-tabler-trash\"\n                        >\n                          <path stroke=\"none\" d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          <path d=\"M4 7l16 0\" />\n                          <path d=\"M10 11l0 6\" />\n                          <path d=\"M14 11l0 6\" />\n                          <path d=\"M5 7l1 12a2 2 0 0 0 2 2h8a2 2 0 0 0 2 -2l1 -12\" />\n                          <path d=\"M9 7v-3a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v3\" />\n                        </svg>\n                      </button> */}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"col-lg-5\">\n                <div className=\"d-flex h-100 flex-column justify-content-between gap-1\">\n                  <div className=\"d-flex flex-column gap-1 py-3 bordr-bt\">\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <Link\n                        to={`/friend/${GroupPostDataPopup.uid}`}\n                        target=\"_blank\"\n                      >\n                        {GroupPostDataPopup.username}\n                      </Link>\n\n                      <h6>{formateTime(GroupPostDataPopup.date)}</h6>\n                    </div>\n                    <div className=\"d-flex align-items-center gap-3 justify-content-between\">\n                      <p>\n                        {GroupPostDataPopup &&\n                        GroupPostDataPopup.description &&\n                        GroupPostDataPopup.description.length > 150\n                          ? GroupPostDataPopup.description.substring(0, 150) +\n                            \"...\"\n                          : GroupPostDataPopup?.description ||\n                            \"No description available\"}\n                      </p>\n\n                      <div className=\"d-flex align-items-center gap-3 flex-shrink-0\">\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <button\n                            type=\"button\"\n                            className=\"liked  fulw\"\n                            onClick={() =>\n                              handleChangeHeartPopup(\n                                GroupPostDataPopup.id,\n                                GroupPostDataPopup.event_id\n                              )\n                            }\n                          >\n                            {GroupPostDataPopup.total_favorite ? (\n                              <FaHeart />\n                            ) : (\n                              <FaRegHeart />\n                            )}\n                          </button>\n                          <p className=\"likecount\">\n                            {GroupPostDataPopup.total_favorite}\n                          </p>\n                        </div>\n                        <div className=\"d-flex align-items-center gap-1 flex-shrink-0\">\n                          <div className=\"d-block like_icon\">\n                            <img\n                              className=\"w-100 h-100\"\n                              src={require(\"../assets/images/comment.png\")}\n                              alt=\"img\"\n                            />\n                          </div>\n                          <p className=\"likecount\">\n                            {GroupPostDataPopup.total_comments}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"d-flex flex-column gap-1\">\n                    <ul className=\"usergallery_msg scroll_bar\">\n                      {GrouppostCommentGet.length === 0 ? (\n                        <li>{t(\"Nocommentsavailable\")}</li>\n                      ) : (\n                        GrouppostCommentGet.map((comment, index) => (\n                          <li className=\"gap-3\" key={index}>\n                            <div className=\"profile_img\">\n                              <img\n                                className=\"w-100 h-100\"\n                                src={\n                                  comment.makeImagePrivate === 1\n                                    ? require(\"../assets/images/thumb.jpg\") // Default image if the profile image is private\n                                    : comment.profile_image // Use user's profile image if available\n                                    ? comment.profile_image\n                                    : require(\"../assets/images/image3.png\") // Default image if no profile image\n                                }\n                                alt=\"img\"\n                              />\n                            </div>\n                            <div className=\"comment_text d-flex flex-column gap-1\">\n                              <h6>{comment.username}</h6>{\" \"}\n                              {/* Display the commenter's username */}\n                              <p>{comment.description}</p>{\" \"}\n                              {/* Display the comment text */}\n                            </div>\n                            <p>{formateTime(comment.date)}</p>{\" \"}\n                          </li>\n                        ))\n                      )}\n                      <li ref={chatEndRef} />\n                    </ul>\n                    <form\n                      action=\"javascript:void(0)\"\n                      method=\"post\"\n                      onSubmit={handlePostSubmit}\n                    >\n                      {restr_message && (\n                        <span\n                          className=\"text-danger\"\n                          style={{ fontSize: \"14px\" }}\n                        >\n                          {t(\"Your_message_contain\")}\n                        </span>\n                      )}\n                      <div className=\"d-flex align-items-center gap-3 w-100 usergallery_from\">\n                        {spinner && (\n                          <div\n                            className=\"spinner-border text-success postloader\"\n                            role=\"status\"\n                          >\n                            <span className=\"visually-hidden\"></span>\n                          </div>\n                        )}\n                        <div className=\"comment_input w-100 d-flex align-items-center gap-1\">\n                          <input\n                            type=\"hidden\"\n                            value={PopupData.id}\n                            name=\"comment_id\"\n                          />\n                          <div className=\"emoji-container\">\n                            <button\n                              type=\"button\"\n                              className=\"emoji-button\"\n                              onClick={() => setShowPicker(!showPicker)}\n                            >\n                              😀\n                            </button>\n\n                            {showPicker && (\n                              <div\n                                className=\"emoji-picker\"\n                                style={{ position: \"absolute\", top: \"64px\" }}\n                              >\n                                <EmojiPicker onEmojiClick={handleEmojiClick} />\n                              </div>\n                            )}\n                          </div>\n                          <input\n                            type=\"text\"\n                            required\n                            ref={inputRef}\n                            name=\"description\"\n                            value={comments} // Controlled input\n                            onChange={handleCommentChange} // Simplified\n                            onKeyDown={handleKeyDown} // Send on Enter Key\n                            placeholder={`${t(\"write_a_comment\")}`}\n                          />\n\n                          <button\n                            type=\"submit\"\n                            disabled={isButtonDisabled} // Disable button if comment is empty\n                            style={{ opacity: isButtonDisabled ? 1 : 1 }}\n                            className=\"comment_postbtn\"\n                          >\n                            {t(\"Post\")}\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport Headertwo from \"../components/Headertwo\";\nimport iconphoto from \"../assets/images/me3.png\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport icon1 from \"../assets/images/det1.png\";\nimport icon2 from \"../assets/images/det2.png\";\nimport icon3 from \"../assets/images/det3.png\";\nimport axios from \"axios\";\nimport { InviteEventsFriend } from \"../components/InviteEventsFriend\";\nimport { AlertDelete } from \"../components/AlertDelete\";\nimport { AlertSucess } from \"../components/AlertSucess\";\nimport { AlertError } from \"../components/AlertError\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport { format, parseISO } from \"date-fns\";\nimport { Createneweventpost } from \"../components/Createneweventpost\";\nimport { EventPostComment } from \"../components/EventPostComment\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport MediaRenderer from \"../components/MediaRenderer\";\nimport { Editevent } from \"../components/Editevent\";\nimport { EventMediaLikeComment } from \"../components/EventMediaLikeComment\";\nexport default function Singleevent() {\n  const navigate = useNavigate();\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(1);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [allevents, setallevents] = useState([]);\n  const [editPage, seteditPage] = useState(false);\n  const [Allcheckgroupmember, setAllcheckgroupmember] = useState([]);\n  const [AllfriendId, setAllfriendId] = useState([]);\n  const [eventId, seteventId] = useState(\"\");\n  const [isPopupOpen1, setIsPopupOpen1] = useState(false);\n  const [isPopupOpen_error, setisPopupOpen_error] = useState(false);\n  const [isPopupOpen_sucess, setisPopupOpen_sucess] = useState(false);\n  const [isGrouppost, setGrouppost] = useState([]);\n  const [isPopupOpen_delete, setisPopupOpen_delete] = useState(false);\n  const [allyoureventsUser, setallyoureventsUser] = useState([]);\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [LoginData, setLoginData] = useState(\"\");\n  const [EventDetail, setEventDetail] = useState(\"\");\n  const [showPopError, setShowPopError] = useState(false);\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [deleteMessage, setdeleteMessage] = useState(\"\");\n\n  const [EventDetailIntersted, setEventDetailIntersted] = useState([]);\n  const [showhide, setshowhide] = useState(false);\n\n  const [isInterested, setIsInterested] = useState(false);\n\n  const [isPopupOpen_newpost, setIsPopupOpen_newpost] = useState(false);\n  const [eventAcceptorNo, seteventAcceptorNo] = useState(false);\n  const [eventAccepted, seteventAccepted] = useState(false);\n  const [eventAcceptorNoCheck, seteventAcceptorNoCheck] = useState(false);\n  const [isEventpost, setEventpost] = useState([]);\n  const [allEventsInterstedUser, setallEventsInterstedUser] = useState([]);\n  const [eventView, seteventView] = useState(false);\n  var apiUrl = \"https://backend.amourette.no/api/\";\n  var apiUrl2 = \"https://backend.amourette.no/api/members/\";\n  const { slug } = useParams();\n  const { t } = useTranslation();\n  const storedUsername = localStorage.getItem(\"userLogin\");\n  const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const editPageClose = () => {\n    seteditPage(false);\n  };\n  const open_Edit = () => {\n    seteditPage(true);\n  };\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n\n    getAllfriends();\n  }, []);\n  const getAllfriends = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl2 + \"getAllfriends\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      const friendUserIds = respo.map((friend) => friend.id);\n\n      setAllfriendId(friendUserIds);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    setLoginData(userLogin);\n    if (slug === undefined) {\n      //seteventId(\"\");\n    } else {\n      getDetails(slug);\n      UsercheckAccept();\n    }\n  }, [eventId]);\n  useEffect(() => {\n    if (LoginData) {\n      UsercheckAccept(); // Call UsercheckAccept only when LoginData is available\n    }\n    if (slug !== undefined) {\n      getDetails(slug);\n    }\n  }, [LoginData, eventView, slug]);\n  const UsercheckAccept = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      slug: slug,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"UsercheckAccept\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      console.log(respo);\n      if (respo.length === 0) {\n        seteventView(false);\n        seteventAcceptorNo(false);\n        navigate(\"/events\");\n      } else {\n        if (respo[0].event_status === \"Created by You\") {\n          seteventView(true);\n          seteventAcceptorNo(false);\n          seteventAcceptorNoCheck(false);\n        }\n        if (respo[0].invite_status === \"No\") {\n          seteventView(false);\n          seteventAcceptorNo(true);\n        }\n        if (respo[0].invite_status === \"Yes\") {\n          seteventView(true);\n          seteventAccepted(false);\n          seteventAcceptorNoCheck(true);\n        }\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getDetails = async (slug) => {\n    let formData = {\n      slug: slug,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"get_EventDetailSlug\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.event;\n      seteventId(respo.id);\n      //getEventdetail(respo.id);\n\n      getEventdetailallIntersted(respo.id);\n      get_EventIntersted(respo.id);\n      getpostComment(respo.id);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    if (eventId !== \"\") {\n      getEventInterstedUser();\n    }\n  }, [eventId]);\n  const getEventInterstedUser = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n    let formData = {\n      user_id: userLogin.id,\n      event_id: eventId,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getEventInterstedUser\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\",\n        },\n      });\n      console.log(res.data.results);\n      console.log(\"hhh\");\n      setallEventsInterstedUser(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getallYoureventsUser = async (id) => {\n    let formData = {\n      user_id: LoginData.id,\n      event_id: id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getallYoureventsUser\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      setallyoureventsUser(res.data.events);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    if (eventId !== \"\") {\n      getEventdetail();\n    }\n  }, [eventId]);\n  const getEventdetail = async () => {\n    let formData = {\n      event_id: eventId,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(apiUrl + \"get_EventDetail\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      if (res.data.event === \"\" || res.data.event === undefined) {\n        navigate(\"/events\");\n      } else {\n        if (LoginData && LoginData.id === res.data.event.user_id) {\n          setshowhide(true);\n        } else {\n          setshowhide(false);\n        }\n      }\n      setEventDetail(res.data.event);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n        console.error(\"Response error:\", err.response);\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const getEventdetailallIntersted = async (idd) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    const userIdsWithSelf = [...AllfriendId, userLogin.id];\n    let formData = {\n      event_id: idd,\n      user_id: LoginData.id,\n      user_ids: userIdsWithSelf,\n    };\n\n    try {\n      const res = await axios.post(\n        apiUrl + \"get_EventdetailAllIntersted\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n\n      setEventDetailIntersted(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const get_EventIntersted = async (idd) => {\n    let formData = {\n      event_id: idd,\n      user_id: LoginData.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"get_EventIntersted\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      if (res.data.status === \"1\") {\n        setIsInterested(true); // User is now interested\n      } else if (res.data.status === \"2\") {\n        setIsInterested(false); // User is no longer interested\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const openPopup1 = (id) => {\n    seteventId(id);\n    getallYoureventsUser(id);\n    setIsPopupOpen1(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n  const closePopup1 = () => {\n    setIsPopupOpen1(false);\n    document.body.style.overflowY = \"auto\";\n  };\n\n  const open_DeleteAlert = (id) => {\n    setisPopupOpen_delete(true);\n    setdeleteMessage(\"Are you sure? You want delete this event\");\n  };\n  const closePopup_delete = () => {\n    setisPopupOpen_delete(false);\n  };\n  const closePopup_error = () => {\n    setisPopupOpen_error(false);\n  };\n  const closePopup_sucess = () => {\n    setisPopupOpen_sucess(false);\n  };\n  const refreshFriendsList = () => {\n    getallYoureventsUser(eventId);\n  };\n\n  const openPopup_newpost = () => {\n    setIsPopupOpen_newpost(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n  const closePopup_newpost = () => {\n    setIsPopupOpen_newpost(false);\n    document.body.style.overflowY = \"auto\";\n  };\n\n  const deleteEvent = async () => {\n    let deleteev = {\n      user_id: LoginData.id,\n      event_id: eventId,\n    };\n    console.log(deleteev);\n    try {\n      const res = await axios.post(apiUrl + \"userDeleteEvent\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      navigate(\"/events\");\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    if (EventDetail) {\n      getuserGroupView(EventDetail.user_id);\n    }\n  }, [EventDetail]);\n  const getuserGroupView = async (idd) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: EventDetail.user_id,\n      checkfrd: EventDetail.user_id,\n    };\n    try {\n      const res = await axios.post(apiUrl2 + \"checkfrdevent\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      console.log(respo);\n      const friendUserIds = respo.map((friend) => friend.id);\n\n      setAllcheckgroupmember(friendUserIds);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const refreshpopup = async () => {\n    deleteEvent();\n  };\n\n  const formatDateRange = (startDate, endDate) => {\n    const start = parseISO(startDate);\n    const end = parseISO(endDate);\n\n    const startDay = format(start, \"d\");\n    const endDay = format(end, \"d\");\n    const month = format(start, \"MMM\");\n\n    return `${startDay} ${month} - ${endDay} ${month}`;\n  };\n\n  const handleInterested = async () => {\n    let formData = {\n      event_id: eventId,\n      user_id: LoginData.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"userEventIntersted\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      console.log(\"hh\");\n      getEventdetailallIntersted(eventId);\n      if (res.data.status === \"1\") {\n        setIsInterested(true); // User is now interested\n      } else if (res.data.status === \"2\") {\n        setIsInterested(false); // User is no longer interested\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getpostComment = async (idd) => {\n    let formData = {\n      event_id: idd,\n      user_id: LoginData.id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"get_postComment\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      console.log(\"res.data\");\n      setEventpost(res.data.results);\n      setGrouppost(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const refreshPostComment = () => {\n    getpostComment(eventId);\n    setIsPopupOpen_newpost(false);\n  };\n\n  const Iseventfav = async () => {\n    getpostComment(eventId);\n  };\n  const commentSectionRefresh = async () => {\n    getpostComment(eventId);\n  };\n  const handledeleteSentto = async (slug) => {\n    let deleteev = {\n      user_id: LoginData.id,\n      event_id: eventId,\n      slug: slug,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"DeleteInviteRequest\", deleteev, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      setShowPopError(true);\n      setPoperrorMessage(\"Successfully deleted\");\n      navigate(\"/events\");\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const handleAccept = async (slug) => {\n    let eventAccepted = {\n      user_id: LoginData.id,\n      event_id: eventId,\n      slug: slug,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"eventAccepted\", eventAccepted, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      console.log(res);\n      setShowPopSuccess(true);\n      setPopsuccessMessage(\"Event accepted successfully\");\n      UsercheckAccept();\n      setTimeout(() => {\n        setShowPopSuccess(false);\n        window.location.reload();\n      }, 800);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getpostCommentrefresh = async () => {\n    getpostComment(eventId);\n  };\n  useEffect(() => {\n    if (modalOpen) {\n      // Disable scrolling when modal is open\n      document.body.style.overflowY = \"hidden\";\n    } else {\n      // Enable scrolling when modal is closed\n      document.body.style.overflowY = \"auto\";\n    }\n\n    // Cleanup to restore the overflow style when the component unmounts\n    return () => {\n      document.body.style.overflowY = \"auto\";\n    };\n  }, [modalOpen]);\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (event.key === \"Escape\") {\n        setModalOpen(false);\n      }\n    };\n\n    // Add event listener\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    // Cleanup event listener on unmount\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n  useEffect(() => {\n    const handleKeyDown = (event) => {\n      if (!modalOpen) return; // Ensure key events work only when modal is open\n\n      if (event.key === \"ArrowRight\") {\n        showSlide(currentSlideIndex + 1); // Right arrow → moves to next slide\n      } else if (event.key === \"ArrowLeft\") {\n        showSlide(currentSlideIndex - 1); // Left arrow ← moves to previous slide\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, [currentSlideIndex, modalOpen]);\n  const openModal = () => setModalOpen(true);\n  const closeModal = () => setModalOpen(false);\n  const validPosts = isGrouppost.filter((post) => post.file);\n  const showSlide = (index) => {\n    if (index < 0) {\n      setCurrentSlideIndex(validPosts.length); // Loop back to last slide\n    } else if (index > validPosts.length) {\n      setCurrentSlideIndex(1); // Loop to first slide\n    } else {\n      setCurrentSlideIndex(index);\n    }\n  };\n\n  // Likes Comments Groups Same As Gallery\n  console.log(validPosts);\n  const [isPopupOpen11, setIsPopupOpen11] = useState(false);\n  const [GroupPostDataPopup, setGroupPostDataPopup] = useState(\"\");\n  const [GrouppostCommentGet, setGrouppostCommentGet] = useState([]);\n  const [popupgroupindex, setpopupgroupindex] = useState(\"\");\n  const [currentIndexPopup, setCurrentIndexPopup] = useState(0); // Assuming you have a state to track the index\n  const [GroupCommentpopupPostId, setGroupCommentpopupPostId] = useState(\"\");\n  const openPopupCommentBox = async (id, group_id, index) => {\n    setGroupCommentpopupPostId(id);\n    GrouppostComment(id, group_id);\n    setpopupgroupindex(index);\n    let formData = {\n      id: id,\n      event_id: group_id,\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getEventPostData\", formData, {\n        headers: {\n          Accept: \"application/json\",\n        },\n      });\n      setGroupPostDataPopup(res.data.results[0]);\n      setIsPopupOpen11(true);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const GrouppostComment = async (postid, group_id) => {\n    let formData = {\n      id: postid,\n      event_id: group_id,\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getEventpostComment\", formData, {\n        headers: {\n          Accept: \"application/json\",\n        },\n      });\n      setGrouppostCommentGet(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const closePopup11 = () => {\n    setIsPopupOpen11(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const getrefreshComment = async () => {\n    GrouppostComment(GroupCommentpopupPostId, eventId);\n  };\n  const favSectionRefresh = async () => {\n    openPopupCommentBox(GroupCommentpopupPostId, eventId, popupgroupindex);\n  };\n  const gotoNext = () => {\n    console.log(\"Navigating to next post\");\n    setCurrentIndexPopup((prevIndex) => {\n      if (prevIndex < validPosts.length - 1) {\n        const newIndex = prevIndex + 1;\n        console.log(\"New Index:\", newIndex);\n        console.log(\"Next Post Data:\", validPosts[newIndex]);\n        openPopupCommentBox(\n          validPosts[newIndex].id,\n          validPosts[newIndex].event_id,\n          newIndex\n        );\n        return newIndex;\n      }\n      console.log(\"Already at the last post. Index:\", prevIndex);\n      console.log(\"Current Post Data:\", validPosts[prevIndex]);\n      return prevIndex;\n    });\n  };\n\n  const gotoprev = () => {\n    console.log(\"Navigating to previous post\");\n    setCurrentIndexPopup((prevIndex) => {\n      if (prevIndex > 0) {\n        const newIndex = prevIndex - 1;\n        console.log(\"New Index:\", newIndex);\n        console.log(\"Previous Post Data:\", validPosts[newIndex]);\n        openPopupCommentBox(\n          validPosts[newIndex].id,\n          validPosts[newIndex].event_id,\n          newIndex\n        );\n        return newIndex;\n      }\n      console.log(\"Already at the first post. Index:\", prevIndex);\n      console.log(\"Current Post Data:\", validPosts[prevIndex]);\n      return prevIndex;\n    });\n  };\n  console.log(eventView);\n  // Likes Comments Groups Same As Gallery\n  return (\n    <>\n      <Headertwo />\n      {showPopError && <ErrorPop message={errorPopMessage} />}\n      {showPopSuccess && <SuccessPop message={successPopMessage} />}\n      <section className=\"singleevent d-block gapy\">\n        <div className=\"container-lg\">\n          <div className=\"row gy-4\">\n            <div className=\"col-md-7\">\n              <div className=\"d-flex flex-column gap-4\">\n                <div className=\"eventtitle d-block pb-1\">\n                  <h1>{EventDetail.name}</h1>\n                </div>\n                <div className=\"d-flex flex-column gap-2\">\n                  {eventView && (\n                    <div className=\"evname d-block\">\n                      <div className=\"d-flex flex-column gap-2\">\n                        <div\n                          className=\"d-flex gap-2 align-items-center\"\n                          onClick={openPopup_newpost}\n                        >\n                          <div className=\"flex-shrink-0\">\n                            <div className=\"evephoto ofit rounded-circle overflow-hidden\">\n                              <img src={EventDetail.image} alt=\"evepic\" />\n                            </div>\n                          </div>\n                          <div className=\"flex-grow-1\">\n                            <div className=\"whatthink d-block\">\n                              <h4>{`${t(\"what_do_you_think\")}`}</h4>\n                            </div>\n                          </div>\n                        </div>\n                        <div\n                          className=\"d-flex justify-content-end addphotothink\"\n                          onClick={openPopup_newpost}\n                        >\n                          <div className=\"d-flex gap-2 align-items-center\">\n                            <div className=\"flex-grow-1\">\n                              <h4>{`${t(\"Add_photo\")}`}</h4>\n                            </div>\n                            <div className=\"flex-shrink-0\">\n                              <div className=\"iconphoto fulw\">\n                                <img src={iconphoto} alt=\"namepic\" />\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  {eventView ? (\n                    <EventPostComment\n                      isEventpost={isEventpost}\n                      LoginData={LoginData}\n                      Iseventfav={Iseventfav}\n                      commentSectionRefresh={commentSectionRefresh}\n                      getpostCommentrefresh={getpostCommentrefresh}\n                    />\n                  ) : (\n                    <p>{`${t(\"No_result_found\")}`}</p>\n                  )}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-5\">\n              <div className=\"d-flex flex-column gap-3\">\n                <div className=\"d-flex align-items-start flex-wrap gap-3\">\n                  <div className=\"d-flex justify-content-start gap-3 posttopbtns\">\n                    {eventAcceptorNo && (\n                      <button\n                        type=\"button\"\n                        onClick={() => handleAccept(slug)}\n                        className={`btn prbtn ${isInterested ? \"\" : \"\"}`}\n                      >\n                        {`${t(\"Accept\")}`}\n                      </button>\n                    )}\n                    {eventAcceptorNoCheck && (\n                      <button\n                        type=\"button\"\n                        className={`btn prbtn ${isInterested ? \"\" : \"\"}`}\n                      >\n                        {`${t(\"Accepted\")}`}\n                      </button>\n                    )}\n                    {!showhide && (\n                      <button\n                        type=\"button\"\n                        onClick={handleInterested}\n                        className={`btn prbtn ${\n                          isInterested ? \"interested_btn\" : \"\"\n                        }`}\n                      >\n                        {`${t(\"INTERESTED\")}`}\n                      </button>\n                    )}\n                    {eventAcceptorNo && (\n                      <button\n                        type=\"button\"\n                        onClick={() => handledeleteSentto(slug)}\n                        className={`btn redbtn ${isInterested ? \"\" : \"\"}`}\n                      >\n                        {`${t(\"Delete\")}`}\n                      </button>\n                    )}\n                    {showhide && (\n                      <button\n                        type=\"button\"\n                        onClick={() => openPopup1(eventId)}\n                        className=\"btn sebtn\"\n                      >\n                        {`${t(\"invite_a_member\")}`}\n                      </button>\n                    )}\n                  </div>\n\n                  {/* {showhide && (\n                    <div className=\"d-flex justify-content-between posttopbtns\">\n                      <button type=\"button\" className=\"btn prbtn\">\n                        {`${t(\"save_changes\")}`}\n                      </button>\n                    </div>\n                  )} */}\n                  {showhide && (\n                    <div className=\"d-flex justify-content-between posttopbtns\">\n                      <button\n                        type=\"button\"\n                        onClick={() => open_DeleteAlert(eventId)}\n                        className=\"btn redbtn\"\n                      >\n                        {`${t(\"DELETE_EVENT\")}`}\n                      </button>\n                    </div>\n                  )}\n                  {showhide && (\n                    <div className=\"d-flex justify-content-between posttopbtns\">\n                      <button\n                        type=\"button\"\n                        onClick={() => open_Edit()}\n                        className=\"btn sebtn\"\n                      >\n                        {`${t(\"edit_events\")}`}\n                      </button>\n                    </div>\n                  )}\n                </div>\n                <div className=\"detailbox d-flex flex-column gap-2\">\n                  <h3>{`${t(\"Detaljer\")}`}</h3>\n                  <p>{EventDetail.description}</p>\n                  <div className=\"d-flex flex-column gap-2 mt-2\">\n                    <div className=\"d-flex gap-3 align-items-center deticontext \">\n                      <div className=\"flex-shrink-0\">\n                        <div className=\"pubimg fulw\">\n                          <img src={icon1} alt=\"pubimg\" />\n                        </div>\n                      </div>\n                      <div className=\"flex-grow-1\">\n                        <h5>\n                          {EventDetail.makeImagePrivate === 0\n                            ? \"Public\"\n                            : \"Private\"}\n                        </h5>\n                      </div>\n                    </div>\n                    <div className=\"d-flex gap-3 align-items-center deticontext \">\n                      <div className=\"flex-shrink-0\">\n                        <div className=\"pubimg fulw\">\n                          <img src={icon2} alt=\"pubimg\" />\n                        </div>\n                      </div>\n                      <div className=\"flex-grow-1\">\n                        <h5>{EventDetail.location}</h5>\n                      </div>\n                    </div>\n                    <div className=\"d-flex gap-3 align-items-center deticontext \">\n                      <div className=\"flex-shrink-0\">\n                        <div className=\"pubimg fulw\">\n                          <img src={icon3} alt=\"pubimg\" />\n                        </div>\n                      </div>\n                      <div className=\"flex-grow-1\">\n                        <h5>\n                          {EventDetail.time} and{\" \"}\n                          {EventDetail.start_date && EventDetail.end_date ? (\n                            formatDateRange(\n                              EventDetail.start_date,\n                              EventDetail.end_date\n                            )\n                          ) : (\n                            <span> {`${t(\"invalid_date_range\")}`}</span>\n                          )}\n                        </h5>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"detailbox d-flex flex-column gap-2\">\n                  {/* <div className=\"row g-2 g-md-4\">\n                    {EventDetailIntersted && EventDetailIntersted.length > 0 ? (\n                      EventDetailIntersted.map((member, index) => (\n                        <div className=\"col-2 col-md-3\" key={index}>\n                          <div className=\"memperson ofit d-flex flex-column gap-1 overflow-hidden rounded-3\">\n                            {member.profile_image ? ( // Display the image URL if available\n                              <img\n                                className=\"w-100 h-100\"\n                                src={member.profile_image} // Use the URL created from the file\n                                alt=\"Selected\"\n                              />\n                            ) : (\n                              <img\n                                className=\"w-100 h-100\"\n                                src={require(\"../assets/images/thumb.jpg\")} // If it's an image URL from the profile\n                                alt=\"Profile\"\n                              />\n                            )}\n                          </div>\n                        </div>\n                      ))\n                    ) : (\n                      <div className=\"col-12\">\n                        <p>{`${t(\"No_result_found\")}`}</p>\n                      </div>\n                    )}\n                  </div> */}\n\n                  <div className=\"row g-2 g-md-4\">\n                    <div className=\"col-12\">\n                      <h3>{`${t(\"LeftMenu_Members\")}`} </h3>\n                      <div className=\"d-flex flex-column gap-3 tag_friends\">\n                        <div className=\"d-flex align-items-start w-100 gap-3\">\n                          {/* <span>{EventDetailIntersted.length}</span> */}\n                          <div className=\"d-flex flex-column gap-3 overflow-auto scroll_bar pb-4\">\n                            <div className=\"d-flex align-items-center w-100 gap-2\">\n                              {EventDetailIntersted.length > 0 && (\n                                <span>{EventDetailIntersted.length}</span>\n                              )}\n\n                              <p className=\"text1line\">\n                                {EventDetailIntersted &&\n                                EventDetailIntersted.length > 0\n                                  ? EventDetailIntersted.map(\n                                      (member, index) => (\n                                        <span key={member.uid}>\n                                          <Link\n                                            to={`/friend/${member.uid}`}\n                                            target=\"_blank\"\n                                          >\n                                            {member.username}\n                                          </Link>\n                                          {index !==\n                                            EventDetailIntersted.length - 1 &&\n                                            \", \"}\n                                        </span>\n                                      )\n                                    )\n                                  : \"\"}\n                              </p>\n                            </div>\n\n                            {EventDetailIntersted &&\n                            EventDetailIntersted.length > 0 ? (\n                              <ul className=\"avimgs\">\n                                {EventDetailIntersted.map((member, index) => (\n                                  <li key={index}>\n                                    <Link\n                                      to={`/friend/${member.uid}`}\n                                      target=\"_blank\"\n                                    >\n                                      <img\n                                        className=\"w-100 h-100\"\n                                        src={\n                                          member.profile_image ||\n                                          require(\"../assets/images/thumb.jpg\")\n                                        }\n                                        alt=\"Profile\"\n                                      />\n                                    </Link>\n                                  </li>\n                                ))}\n                              </ul>\n                            ) : (\n                              <p>{t(\"No_result_found\")}</p>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n\n                  {/* <div className=\"d-block vmore\">\n                    <Link to=\"/\">View More</Link>\n                  </div> */}\n                </div>\n                <div className=\"detailbox d-flex flex-column gap-2\">\n                  <h3>{`${t(\"Media\")}`}</h3>\n                  <div className=\"row\">\n                    {eventView && validPosts.length > 0 ? (\n                      <div className=\"row gy-2\">\n                        {validPosts.map((post, index) =>\n                          post.file ? (\n                            <div className=\"col-sm-3 col-md-6\" key={index}>\n                              <div className=\"memperson ofit d-flex flex-column gap-1 \">\n                                <div className=\"overflow-hidden rounded-3 d-block\">\n                                  <MediaRenderer\n                                    url={post.file}\n                                    onClick={() => {\n                                      if (eventView) {\n                                        openPopupCommentBox(\n                                          post.id,\n                                          post.event_id,\n                                          index\n                                        );\n                                        showSlide(index + 1);\n                                      } else {\n                                        openModal(); // Call your function for opening the modal when groupView is false\n                                        showSlide(index + 1);\n                                      }\n                                    }}\n                                  />\n                                </div>\n                                <Link\n                                  to={`/friend/${post.uid}`}\n                                  target=\"_blank\"\n                                  className=\"goupmediatext\"\n                                >\n                                  {post.username}\n                                </Link>\n                              </div>\n                            </div>\n                          ) : null\n                        )}\n                      </div>\n                    ) : (\n                      <p>{`${t(\"No_available_media\")}`}</p>\n                    )}\n                  </div>\n\n                  {eventView &&\n                    validPosts.some(\n                      (post) =>\n                        post.file &&\n                        typeof post.file === \"string\" &&\n                        post.file.trim() !== \"\"\n                    ) && (\n                      <div className=\"d-block vmore\">\n                        <Link to={`/eventmedia/${slug}`}>{`${t(\n                          \"view_more\"\n                        )}`}</Link>\n                      </div>\n                    )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      {modalOpen && (\n        <div id=\"myModal\" className=\"modalgg\">\n          <span className=\"close cursor\" onClick={closeModal}>\n            &times;\n          </span>\n          <div className=\"modal-content\">\n            {validPosts.length > 0 ? (\n              validPosts.map((post, index) => (\n                <div\n                  className=\"mySlides\"\n                  style={{\n                    display: currentSlideIndex === index + 1 ? \"block\" : \"none\",\n                  }}\n                  key={index}\n                >\n                  <div className=\"numbertext\">\n                    {index + 1} / {validPosts.length}\n                  </div>\n\n                  {post.file &&\n                  typeof post.file === \"string\" &&\n                  post.file.match(/\\.(jpeg|jpg|gif|png|webp|bmp|svg)$/i) ? (\n                    <img src={post.file} alt=\"img\" />\n                  ) : post.file &&\n                    typeof post.file === \"string\" &&\n                    post.file.match(\n                      /\\.(mp4|mov|avi|mkv|webm|ogg|flv|3gp)$/i\n                    ) ? (\n                    <video controls alt=\"video\">\n                      <source src={post.file} type=\"video/mp4\" />\n                      {`${t(\"Your_browser_does\")}`}\n                    </video>\n                  ) : null}\n                </div>\n              ))\n            ) : (\n              <p>{`${t(\"No_available_media\")}`}</p>\n            )}\n\n            <a\n              className=\"prev\"\n              onClick={() => showSlide(currentSlideIndex - 1)}\n            >\n              &#10094;\n            </a>\n            <a\n              className=\"next\"\n              onClick={() => showSlide(currentSlideIndex + 1)}\n            >\n              &#10095;\n            </a>\n          </div>\n        </div>\n      )}\n      <InviteEventsFriend\n        isOpen1={isPopupOpen1}\n        onClose1={closePopup1}\n        friends={allyoureventsUser}\n        LoginData={LoginData}\n        eventId={eventId}\n        onInvitesSent={refreshFriendsList}\n      ></InviteEventsFriend>\n      <AlertDelete\n        isOpen1={isPopupOpen_delete}\n        onClose1={closePopup_delete}\n        message={deleteMessage}\n        onReturnSent={refreshpopup}\n      ></AlertDelete>\n      <AlertError\n        isOpen1={isPopupOpen_error}\n        onClose1={closePopup_error}\n      ></AlertError>\n      <AlertSucess\n        isOpen1={isPopupOpen_sucess}\n        onClose1={closePopup_sucess}\n      ></AlertSucess>\n      <Createneweventpost\n        isOpen={isPopupOpen_newpost}\n        onClose={closePopup_newpost}\n        eventId={eventId}\n        LoginData={LoginData}\n        reSetPost={refreshPostComment}\n      ></Createneweventpost>\n      <Editevent\n        isOpen={editPage}\n        onClose={editPageClose}\n        LoginData={LoginData}\n        eventId={eventId}\n        EventDetail={EventDetail}\n      ></Editevent>\n\n      <EventMediaLikeComment\n        isOpen1={isPopupOpen11}\n        onClose1={closePopup11}\n        GroupPostDataPopup={GroupPostDataPopup}\n        GrouppostCommentGet={GrouppostCommentGet}\n        getrefreshComment={getrefreshComment}\n        favSectionRefresh={favSectionRefresh}\n        gotoNext={gotoNext}\n        gotoprev={gotoprev}\n        validPosts={validPosts}\n      />\n    </>\n  );\n}\n"],"names":["InviteEventsFriend","_ref","isOpen1","onClose1","children","friends","LoginData","eventId","onInvitesSent","selectedFriends","setSelectedFriends","useState","invMessage","setinvMessage","t","useTranslation","useEffect","savedLanguage","localStorage","getItem","console","log","i18n","language","changeLanguage","_jsx","_Fragment","className","onClick","e","target","classList","contains","_jsxs","action","onSubmit","async","preventDefault","formData","friendIds","user_id","id","response","axios","post","apiUrl","headers","setTimeout","data","error","method","length","map","friend","index","profile_image","src","alt","require","username","type","onChange","handleCheckboxChange","userId","prevSelected","includes","filter","checked","name","disabled","AlertSucess","AlertError","Createneweventpost","isOpen","onClose","reSetPost","description","setDescription","image","setImage","restr_message","setrestr_message","setError","spinner","setspinner","fileType","setFileType","videoUrl","setVideoUrl","convertToPng","file","Promise","resolve","reject","reader","FileReader","onload","event","img","Image","canvas","document","createElement","width","height","getContext","drawImage","toBlob","blob","pngFile","File","replace","lastModified","Date","getTime","Error","onerror","result","readAsDataURL","restrictedWords","isButtonDisabled","trim","style","fontSize","FormData","append","res","Accept","status","err","request","rows","placeholder","value","inputValue","hasRestrictedWord","some","word","toLowerCase","accept","files","isImage","startsWith","isVideo","size","convertedFile","URL","createObjectURL","controls","BsCloudUpload","color","role","opacity","EventPostComment","isEventpost","Iseventfav","commentSectionRefresh","getpostCommentrefresh","postId","setpostId","currentSlideIndex","setCurrentSlideIndex","isPopupOpen_delete","setisPopupOpen_delete","deleteMessage","setdeleteMessage","comments","setComments","Array","fill","webSocket","setWebSocket","errorPopMessage","setPoperrorMessage","restrictedStates","setRestrictedStates","inputRef","useRef","modalOpen","setModalOpen","imagess","setimage","closeModal","showPopError","setShowPopError","ws","WebSocket","onmessage","receivedMessage","JSON","parse","close","handlePostComment","event_id","_comments$index","commentText","currentWordCount","text","split","post_id","comment","prev","results","fetchComments","formateTime","dateString","postDate","isNaN","now","adjustedPostDate","osloPostTime","Intl","DateTimeFormat","timeZone","hour","minute","hour12","format","timeDiff","seconds","Math","floor","minutes","hours","days","weeks","months","years","showPicker","setShowPicker","handleKeyDown","key","addEventListener","removeEventListener","AlertDelete","closePopup_delete","message","onReturnSent","handleeventPostDelete","ErrorPop","_comments$index3","_comments$index4","Link","to","uid","makeImagePrivate","date","title","handleeventPostDeleteconfirm","padding","textAlign","minWidth","background","xmlns","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","MediaRenderer","url","chat","postid","handleChangeHeart","fav","FaHeart","FaRegHeart","fav_count","comm","comt_uid","comment_user_profile_image","comment_makeImagePrivate","comment_user_username","comment_date","toggleEmojiPicker","EmojiPicker","onEmojiClick","emojiObject","handleEmojiClick","inputEl","current","currentValue","startPos","selectionStart","endPos","selectionEnd","newValue","substring","emoji","focus","onKeyDown","_comments$index2","ref","el","handleCommentChange","transition","display","Editevent","onEventCreated","EventDetail","selectedFile","setSelectedFile","errorMessage","setErrorMessage","showPopSuccess","setShowPopSuccess","successPopMessage","setPopsuccessMessage","setMakeImagePrivate","eventData","setEventData","start_date","end_date","time","location","today","day","String","getDate","padStart","month","getMonth","year","getFullYear","previewImage","setPreviewImage","makeImageUse","today_enddate","handleInputChange","prevData","SuccessPop","storedUsername","userLogin","window","slug","reload","required","defaultValue","selectedDate","setHours","alert","minLength","EventMediaLikeComment","GroupPostDataPopup","GrouppostCommentGet","getrefreshComment","favSectionRefresh","gotoNext","gotoprev","validPosts","input","setInput","chatEndRef","isparamVl","setparamVl","UserPhotoCommets","setUserPhotoCommets","UserPopupData","setUserPopupData","PopupData","setPopupData","handlePostSubmit","scrollIntoView","behavior","deletePost","zIndex","FaChevronRight","FaChevronLeft","handleChangeHeartPopup","total_favorite","total_comments","position","top","prevMessage","Singleevent","navigate","useNavigate","allevents","setallevents","editPage","seteditPage","Allcheckgroupmember","setAllcheckgroupmember","AllfriendId","setAllfriendId","seteventId","isPopupOpen1","setIsPopupOpen1","isPopupOpen_error","setisPopupOpen_error","isPopupOpen_sucess","setisPopupOpen_sucess","isGrouppost","setGrouppost","allyoureventsUser","setallyoureventsUser","setLoginData","setEventDetail","EventDetailIntersted","setEventDetailIntersted","showhide","setshowhide","isInterested","setIsInterested","isPopupOpen_newpost","setIsPopupOpen_newpost","eventAcceptorNo","seteventAcceptorNo","eventAccepted","seteventAccepted","eventAcceptorNoCheck","seteventAcceptorNoCheck","setEventpost","allEventsInterstedUser","setallEventsInterstedUser","eventView","seteventView","apiUrl2","useParams","getAllfriends","friendUserIds","undefined","getDetails","UsercheckAccept","respo","event_status","invite_status","getEventdetailallIntersted","get_EventIntersted","getpostComment","getEventInterstedUser","getallYoureventsUser","events","getEventdetail","userIdsWithSelf","idd","user_ids","openPopup_newpost","body","overflowY","getuserGroupView","checkfrd","showSlide","isPopupOpen11","setIsPopupOpen11","setGroupPostDataPopup","setGrouppostCommentGet","popupgroupindex","setpopupgroupindex","currentIndexPopup","setCurrentIndexPopup","GroupCommentpopupPostId","setGroupCommentpopupPostId","openPopupCommentBox","group_id","GrouppostComment","Headertwo","iconphoto","handleAccept","deleteev","handledeleteSentto","openPopup1","icon1","icon2","icon3","formatDateRange","startDate","endDate","start","parseISO","end","startDay","endDay","member","match","closePopup1","refreshFriendsList","deleteEvent","closePopup_error","closePopup_sucess","closePopup_newpost","refreshPostComment","editPageClose","closePopup11","prevIndex","newIndex"],"sourceRoot":""}