{"version":3,"file":"static/js/7104.004a71b4.chunk.js","mappings":"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","sources":["pages/Friendsearch.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport Headertwo from \"../components/Headertwo\";\nimport Accordion from \"react-bootstrap/Accordion\";\nimport { Footer } from \"../components/Footer\";\nimport Button from \"react-bootstrap/Button\";\nimport ChatBox from \"../components/ChatBox\";\nimport axios from \"axios\";\nimport { RiHome6Line } from \"react-icons/ri\";\nimport { IconHome } from \"@tabler/icons-react\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport \"nouislider/dist/nouislider.css\";\nimport { PiGenderFemaleBold, PiGenderMaleBold } from \"react-icons/pi\";\nimport { FaVenusMars } from \"react-icons/fa\"; // Couple (Venus & Mars)\n\nimport noUiSlider from \"nouislider\";\nexport default function Friendsearch() {\n  const navigate = useNavigate();\n  const [refreshNotifications, setRefreshNotifications] = useState(false);\n  const [UserDataall, setUserDataall] = useState(\"\");\n  const [searchheader, setsearchheader] = useState(\"\");\n  const [searchTerm, setsearchTerm] = useState(\"\");\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [LoginData, setLoginData] = useState(\"\");\n  const [toid, settoid] = useState(\"\");\n  const [AllMembers, setAllMembers] = useState([]);\n  const [birthdd, setbirthdd] = useState(\"\");\n  const [UserDetail, setUserDetail] = useState([]);\n  const [AllEvents, setAllEvents] = useState([]);\n  const [IsuserDetailForChat, setuserDetailForChat] = useState(\"\");\n  const [IsuserChatDetail, setuserChatDetail] = useState([]);\n  const [to_id, setto_id] = useState(\"\");\n  const [selectedAgee, setSelectedAgee] = useState(18); // Initial age value\n  const [selectedSubRegion, setSelectedSubRegion] = useState([]);\n  const [selectedTowns, setSelectedTowns] = useState([]);\n  const [selectedSubRegions, setSelectedSubRegions] = useState({});\n  const [selectedAge, setSelectedAge] = useState([18, 55]);\n  const [userdetail, setuserdetail] = useState(\"\");\n  const openPopup = () => {\n    setIsPopupOpen(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n\n  const closePopup = () => {\n    setIsPopupOpen(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  var apiUrl = \"https://backend.amourette.no/api/members/\";\n  var apiUrlRegister = \"https://backend.amourette.no/api/\";\n  const [selectedRegion, setSelectedRegion] = useState([]);\n  const [Selectedsex, setSelectedsex] = useState([]);\n  const locations = {\n    \"Eastern Norway\": {\n      Viken: [\n        \"Drammen\",\n        \"Bærum\",\n        \"Asker\",\n        \"Moss\",\n        \"Fredrikstad\",\n        \"Sarpsborg\",\n        \"Halden\",\n        \"Lillestrøm\",\n        \"Jessheim\",\n        \"Kongsberg\",\n      ],\n      Innlandet: [\n        \"Hamar\",\n        \"Lillehammer\",\n        \"Gjøvik\",\n        \"Elverum\",\n        \"Kongsvinger\",\n        \"Tynset\",\n        \"Trysil\",\n        \"Rena\",\n      ],\n      \"Vestfold og Telemark\": [\n        \"Tønsberg\",\n        \"Sandefjord\",\n        \"Larvik\",\n        \"Skien\",\n        \"Porsgrunn\",\n        \"Notodden\",\n        \"Rjukan\",\n        \"Kragerø\",\n        \"Bø i Telemark\",\n      ],\n    },\n    \"Western Norway\": {\n      Hordaland: [\"Bergen\", \"Voss\", \"Odda\", \"Stord\", \"Os\", \"Leirvik\"],\n      \"Sogn og Fjordane\": [\n        \"Førde\",\n        \"Sogndal\",\n        \"Florø\",\n        \"Årdal\",\n        \"Stryn\",\n        \"Nordfjordeid\",\n      ],\n      Rogaland: [\n        \"Stavanger\",\n        \"Sandnes\",\n        \"Haugesund\",\n        \"Egersund\",\n        \"Bryne\",\n        \"Sauda\",\n        \"Jørpeland\",\n      ],\n      \"Møre og Romsdal\": [\n        \"Ålesund\",\n        \"Molde\",\n        \"Kristiansund\",\n        \"Åndalsnes\",\n        \"Sunndalsøra\",\n        \"Volda\",\n        \"Fosnavåg\",\n        \"Ørsta\",\n      ],\n    },\n    Trøndelag: {\n      Trøndelag: [\n        \"Trondheim\",\n        \"Steinkjer\",\n        \"Levanger\",\n        \"Stjørdal\",\n        \"Namsos\",\n        \"Orkanger\",\n        \"Røros\",\n        \"Verdal\",\n        \"Oppdal\",\n        \"Malvik\",\n        \"Melhus\",\n      ],\n    },\n    \"Northern Norway\": {\n      Nordland: [\n        \"Bodø\",\n        \"Narvik\",\n        \"Mo i Rana\",\n        \"Svolvær (Lofoten)\",\n        \"Leknes\",\n        \"Sortland\",\n        \"Mosjøen\",\n        \"Brønnøysund\",\n        \"Fauske\",\n      ],\n      \"Troms og Finnmark\": [\n        \"Tromsø\",\n        \"Alta\",\n        \"Hammerfest\",\n        \"Harstad\",\n        \"Vadsø\",\n        \"Kirkenes\",\n        \"Skjervøy\",\n        \"Nordkapp\",\n        \"Lakselv\",\n        \"Kautokeino\",\n      ],\n    },\n    Other: {},\n  };\n\n  // Map translation keys to English names for t() function\n  const regionTranslationKeys = {\n    ostlandet: \"Eastern Norway\",\n    vestlandet: \"Western Norway\",\n    trondelag: \"Trøndelag\",\n    nordnorge: \"Northern Norway\",\n    other: \"Other\",\n  };\n  const [selectedage, setSelectedage] = useState([]);\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    setLoginData(userLogin); // Update LoginData from localStorage\n  }, []);\n  useEffect(() => {\n    getuserdetail();\n  }, []);\n  const getuserdetail = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      id: userLogin.id,\n      email: userLogin.email,\n    };\n    try {\n      const res = await axios.post(apiUrlRegister + \"getUserDetail\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n\n      var respo = res.data.result;\n      setuserdetail(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    const ws = new WebSocket(\"wss://backend.amourette.no\"); // Adjust port if needed\n\n    ws.onmessage = (event) => {\n      try {\n        const receivedMessage = JSON.parse(event.data);\n        if (!receivedMessage) {\n          console.error(\"Received invalid JSON:\", event.data);\n          return;\n        }\n\n        if (receivedMessage.event === \"memberpageRefresh\") {\n          if (searchTerm !== \"\") {\n            setSearchTermRealtime(searchTerm);\n          } else {\n            sexfilter(Selectedsex);\n          }\n        }\n        //getAllMembersrealtime();\n        // Ensure message is only seen by the sender or receiver\n      } catch (error) {\n        console.error(\"Failed to parse WebSocket message:\", error);\n        console.error(\"Raw message:\", event.data);\n      }\n    };\n\n    return () => {\n      ws.close();\n    };\n  }, [AllMembers, searchTerm]);\n  const getAllMembersrealtime = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    if (\n      userdetail.sexual_orientation === undefined ||\n      userdetail.sexual_orientation === null\n    ) {\n      var ser = [];\n    } else {\n      var ser = userdetail.sexual_orientation;\n    }\n    let formData = {\n      user_id: userLogin.id,\n      looking_forr: ser,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getAllMembersPage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n\n      // setAllMembers(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    if (\n      userdetail.sexual_orientation === undefined ||\n      userdetail.sexual_orientation === null\n    ) {\n      var sr = [];\n    } else {\n      var sr = userdetail.sexual_orientation;\n    }\n    const getAllMembers = async () => {\n      let formData = {\n        user_id: userLogin.id,\n        looking_forr: sr,\n      };\n      console.log(formData);\n      try {\n        const res = await axios.post(apiUrl + \"getAllMembersPage\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        var respo = res.data.results;\n        console.log(res.data);\n        setAllMembers(respo);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    if (userdetail !== undefined) {\n      getAllMembers();\n    }\n  }, [userdetail]);\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    const getuserdetail = async () => {\n      let formData = {\n        user_id: userLogin.id,\n      };\n      try {\n        const res = await axios.post(apiUrl + \"getuserdetail\", formData, {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        });\n        var respo = res.data.row[0];\n        setUserDataall(respo);\n      } catch (err) {\n        // Enhanced error handling\n        if (err.response) {\n        } else if (err.request) {\n          console.error(\"Request data:\", err.request);\n        } else {\n          console.error(\"Error message:\", err.message);\n        }\n      }\n    };\n    getuserdetail();\n  }, [LoginData]);\n\n  const calculateAge = (birthday) => {\n    const birthDate = new Date(birthday);\n    const today = new Date();\n\n    let age = today.getFullYear() - birthDate.getFullYear();\n    const monthDifference = today.getMonth() - birthDate.getMonth();\n\n    // Adjust age if the birthday hasn't occurred yet this year\n    if (\n      monthDifference < 0 ||\n      (monthDifference === 0 && today.getDate() < birthDate.getDate())\n    ) {\n      age--;\n    }\n\n    return age;\n  };\n  useEffect(() => {\n    const slider = document.getElementById(\"ageSlider\");\n\n    // Initialize noUiSlider\n    noUiSlider.create(slider, {\n      start: selectedAge, // Start values from the selectedAge state\n      connect: true, // Connect the handles\n      range: {\n        min: 18,\n        max: 59,\n      },\n      step: 1, // Step for each move\n      tooltips: true,\n      format: {\n        to: function (value) {\n          // Format value as an integer (no decimal places)\n          return Math.round(value); // No decimals\n        },\n        from: function (value) {\n          // Parse the value back to a number (for internal use)\n          return parseInt(value);\n        },\n      },\n    });\n\n    // Update the state whenever the slider values change\n    slider.noUiSlider.on(\"update\", function (values) {\n      // Map the values to integers and update state\n      console.log(parseInt(values));\n      setSelectedAge(values.map((val) => parseInt(val)));\n    });\n\n    return () => {\n      // Clean up the slider when the component unmounts\n      slider.noUiSlider.destroy();\n    };\n  }, []);\n  const chatsectionUser = async (id) => {\n    let formData = {\n      user_id: LoginData.id,\n      to_id: id,\n    };\n    settoid(id);\n    getUserDetailForChat(id);\n    try {\n      const res = await axios.post(apiUrl + \"getuserChatmessage\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      console.log(\"getchat\");\n      setuserChatDetail(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n    setIsPopupOpen(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n  const getUserDetailForChat = async (id) => {\n    let formData = {\n      id: id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getUserDetailMember\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      if (res.data.row.length > 0) {\n        var respo = res.data.row[0];\n        setuserDetailForChat(respo);\n        console.log(respo);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n    setIsPopupOpen(true);\n    document.body.style.overflowY = \"hidden\";\n  };\n  const getChatAfterSave = async () => {\n    chatsectionUser(to_id);\n  };\n  const setSearchTermRealtime = async (realsearch) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    if (userdetail.sexual_orientation === undefined) {\n      var ser = [];\n    } else {\n      var ser = userdetail.sexual_orientation;\n    }\n    let formData = {\n      search: realsearch,\n      user_id: userLogin.id, // Sending as a string for the query\n      looking_forr: ser,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"membersearch\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      console.log(respo);\n      setAllMembers(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const setSearchTerm = async (e) => {\n    setsearchTerm(e);\n\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    if (userdetail.sexual_orientation === undefined) {\n      var ser = [];\n    } else {\n      var ser = userdetail.sexual_orientation;\n    }\n    let formData = {\n      search: e,\n      user_id: userLogin.id, // Sending as a string for the query\n      looking_forr: ser,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"membersearch\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      setAllMembers(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const handleRegionChange = (region) => {\n    console.log(region);\n    setSelectedRegion((prev) =>\n      prev.includes(region)\n        ? prev.filter((r) => r !== region)\n        : [...prev, region]\n    );\n    setSelectedSubRegion([]); // Clear subregion when changing region\n    setSelectedTowns([]); // Clear towns when changing region\n  };\n\n  const handleSubRegionChange = (subRegion) => {\n    setSelectedSubRegion((prev) =>\n      prev.includes(subRegion)\n        ? prev.filter((s) => s !== subRegion)\n        : [...prev, subRegion]\n    );\n    setSelectedTowns([]); // Clear towns when changing subregion\n  };\n\n  const handleTownChange = (town) => {\n    setSelectedTowns((prev) =>\n      prev.includes(town) ? prev.filter((t) => t !== town) : [...prev, town]\n    );\n  };\n\n  const areafilter = async (\n    selectedRegion,\n    selectedSubRegion,\n    selectedTowns\n  ) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    var fromage = selectedAge[0];\n    var toage = selectedAge[1];\n\n    const currentYearInNorway = new Date().toLocaleString(\"en-US\", {\n      timeZone: \"Europe/Oslo\",\n      year: \"numeric\",\n    });\n\n    const frombirthDates = calculateDateOfBirth(fromage, currentYearInNorway);\n    const tobirthDates = calculateDateOfBirth(toage, currentYearInNorway);\n    if (userdetail.sexual_orientation === undefined) {\n      var ser = [];\n    } else {\n      var ser = userdetail.sexual_orientation;\n    }\n    let formData = {\n      location: selectedRegion,\n      selectedSubRegion: selectedSubRegion,\n      selectedTowns: selectedTowns,\n      sexual_orientation: Selectedsex,\n      fromage: frombirthDates,\n      toage: tobirthDates,\n      user_id: userLogin.id, // Sending as a string for the query\n      looking_forr: ser,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"areafilter\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      console.log(respo);\n      if (respo !== undefined) {\n        setAllMembers(respo);\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  useEffect(() => {\n    console.log(selectedAge);\n    if (selectedAge.length > 0) {\n      var fromage = selectedAge[0];\n      var toage = selectedAge[1];\n\n      const currentYearInNorway = new Date().toLocaleString(\"en-US\", {\n        timeZone: \"Europe/Oslo\",\n        year: \"numeric\",\n      });\n      //console.log(\"Current Year in Norway:\", currentYearInNorway);\n\n      const frombirthDates = calculateDateOfBirth(fromage, currentYearInNorway);\n      const tobirthDates = calculateDateOfBirth(toage, currentYearInNorway);\n\n      //setbirthdd(birthDates);\n      // console.log(\"Calculated Dates of Birth:\", birthDates);\n      agefilter(frombirthDates, tobirthDates);\n    }\n  }, [selectedAgee, selectedAge]);\n  const calculateDateOfBirth = (age, currentYear) => {\n    const birthYear = currentYear - age; // Subtract age from the current year (Norwegian timezone)\n    //const birthDate = new Date(birthYear, 0, 1); // Use January 1st as the DOB\n    //return birthDate.toISOString().split(\"T\")[0]; // Format as YYYY-MM-DD\n    return birthYear.toString();\n  };\n  const agefilter = async (frombirthDates, tobirthDates) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    if (\n      userdetail.sexual_orientation === undefined ||\n      userdetail.sexual_orientation === null\n    ) {\n      var ser = [];\n    } else {\n      var ser = userdetail.sexual_orientation;\n    }\n\n    let formData = {\n      location: selectedRegion,\n      selectedSubRegion: selectedSubRegion,\n      selectedTowns: selectedTowns,\n      sexual_orientation: Selectedsex,\n      fromage: frombirthDates,\n      toage: tobirthDates,\n      user_id: userLogin.id, // Sending as a string for the query\n      looking_forr: ser,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"areafilter\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n\n      setAllMembers(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const handlesexual = async (sex) => {\n    setSelectedsex((prevSelectedRegions) => {\n      if (prevSelectedRegions.includes(sex)) {\n        return prevSelectedRegions.filter((item) => item !== sex); // Remove sex\n      } else {\n        return [...prevSelectedRegions, sex]; // Add sex\n      }\n    });\n  };\n  useEffect(() => {\n    if (userdetail !== undefined) {\n      sexfilter(Selectedsex);\n    }\n  }, [Selectedsex, userdetail]);\n\n  const sexfilter = async (search) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    var fromage = selectedAge[0];\n    var toage = selectedAge[1];\n\n    const currentYearInNorway = new Date().toLocaleString(\"en-US\", {\n      timeZone: \"Europe/Oslo\",\n      year: \"numeric\",\n    });\n    //console.log(\"Current Year in Norway:\", currentYearInNorway);\n\n    const frombirthDates = calculateDateOfBirth(fromage, currentYearInNorway);\n    const tobirthDates = calculateDateOfBirth(toage, currentYearInNorway);\n    if (\n      userdetail.sexual_orientation === undefined ||\n      userdetail.sexual_orientation === null\n    ) {\n      var ser = [];\n    } else {\n      var ser = userdetail.sexual_orientation;\n    }\n\n    let formData = {\n      location: selectedRegion,\n      selectedSubRegion: selectedSubRegion,\n      selectedTowns: selectedTowns,\n      sexual_orientation: search,\n      fromage: frombirthDates,\n      toage: tobirthDates,\n      user_id: userLogin.id, // Sending as a string for the query\n      looking_forr: ser,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"areafilter\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n\n      setAllMembers(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const ages = Array.from({ length: 43 }, (_, index) => index + 18);\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n\n    console.log(t(\"LeftMenu_yourprofile\")); // Testing translation\n  }, [i18n, t]);\n\n  useEffect(() => {\n    if (userdetail !== undefined) {\n      areafilter(selectedRegion, selectedSubRegion, selectedTowns);\n    }\n  }, [selectedSubRegion, selectedTowns, selectedRegion, userdetail]);\n  const refreshchat = () => {\n    chatsectionUser(toid);\n  };\n\n  return (\n    <>\n      <Headertwo refreshNotifications={refreshNotifications} />\n      <section className=\"d-block searchmain gapy\">\n        <div className=\"container-lg\">\n          <div className=\"row gy-4\">\n            <div className=\"col-md-3\">\n              <div className=\"searchmenu d-flex flex-column gap-4\">\n                <div className=\"d-flex flex-column gap-1 searchinput\">\n                  <label>{t(\"Search\")}</label>\n                  <input\n                    type=\"text\"\n                    value={searchTerm}\n                    onInput={(e) => setSearchTerm(e.target.value)}\n                  />\n                  <span>{t(\"Filters\")}</span>\n                </div>\n                <div className=\"d-flex flex-column gap-3\">\n                  <Link\n                    to=\"/dashboard\"\n                    className=\"d-flex gap-3 align-items-center listoficons\"\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"userpic userpic_main ofit rounded-circle  overflow-hidden ratio-unset\">\n                        <IconHome\n                          stroke={1}\n                          className=\"w-100 h-100 main_homei\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <h4>{t(\"Home\")}</h4>\n                    </div>\n                  </Link>\n                  <Accordion>\n                    <Accordion.Item eventKey=\"0\">\n                      <Accordion.Header>\n                        <div className=\"serachdrop d-flex align-items-center listoficons gap-3\">\n                          <div className=\"searchicon\">\n                            <img\n                              className=\"w-100 h-100\"\n                              src={require(\"../assets/images/serach1.png\")}\n                              alt=\"img\"\n                            />\n                          </div>\n                          <h3>{t(\"FriendSearchPage_Member\")}</h3>\n                        </div>\n                      </Accordion.Header>\n                      <Accordion.Body>\n                        <Accordion className=\"memberdrop pt-3\">\n                          <Accordion.Item eventKey=\"0\">\n                            <Accordion.Header>\n                              {t(\"FriendSearchPage_Area\")}\n                            </Accordion.Header>\n                            <Accordion.Body>\n                              <div className=\"memberdrop_listbox px-0\">\n                                {Object.entries(locations).map(\n                                  ([region, subRegions]) => (\n                                    <div\n                                      key={region}\n                                      className=\"memberdrop_cbox scroll_bar \"\n                                    >\n                                      <Accordion className=\"memberdrop\">\n                                        <Accordion.Item eventKey=\"0\">\n                                          <Accordion.Header>\n                                            {\" \"}\n                                            <label\n                                              className=\"cbox font-bold d-flex align-items-center gap-3\"\n                                              htmlFor={`locate_${region}`}\n                                            >\n                                              <input\n                                                type=\"checkbox\"\n                                                name=\"region\"\n                                                value={region}\n                                                checked={selectedRegion.includes(\n                                                  region\n                                                )}\n                                                onChange={() =>\n                                                  handleRegionChange(region)\n                                                }\n                                              />\n                                              <span id={`locate_${region}`}>\n                                                {t(\n                                                  Object.keys(\n                                                    regionTranslationKeys\n                                                  ).find(\n                                                    (key) =>\n                                                      regionTranslationKeys[\n                                                        key\n                                                      ] === region\n                                                  ) || region\n                                                )}\n                                              </span>\n                                            </label>\n                                          </Accordion.Header>\n                                          <Accordion.Body>\n                                            {\" \"}\n                                            <div className=\"subregions-list\">\n                                              {Object.entries(subRegions).map(\n                                                ([subRegion, towns]) => (\n                                                  <div key={subRegion}>\n                                                    {/* Subregion Checkbox */}\n\n                                                    <Accordion className=\"memberdrop\">\n                                                      <Accordion.Item eventKey=\"0\">\n                                                        <Accordion.Header>\n                                                          {\" \"}\n                                                          <label\n                                                            className=\"cbox ps-3 d-flex align-items-center gap-3\"\n                                                            htmlFor={`locates_${subRegion}`}\n                                                          >\n                                                            <input\n                                                              type=\"checkbox\"\n                                                              name=\"subregion\"\n                                                              value={subRegion}\n                                                              checked={selectedSubRegion.includes(\n                                                                subRegion\n                                                              )}\n                                                              onChange={() =>\n                                                                handleSubRegionChange(\n                                                                  subRegion\n                                                                )\n                                                              }\n                                                            />\n                                                            <span\n                                                              id={`locates_${subRegion}`}\n                                                            >\n                                                              {subRegion}\n                                                            </span>\n                                                          </label>\n                                                        </Accordion.Header>\n                                                        <Accordion.Body>\n                                                          <div className=\"towns-list ms-3\">\n                                                            {towns.map(\n                                                              (town, index) => (\n                                                                <label\n                                                                  key={index}\n                                                                  className=\"cbox d-flex align-items-center gap-3\"\n                                                                >\n                                                                  <input\n                                                                    type=\"checkbox\"\n                                                                    name=\"town\"\n                                                                    value={town}\n                                                                    checked={selectedTowns.includes(\n                                                                      town\n                                                                    )}\n                                                                    onChange={() =>\n                                                                      handleTownChange(\n                                                                        town\n                                                                      )\n                                                                    }\n                                                                  />\n                                                                  {town}\n                                                                </label>\n                                                              )\n                                                            )}\n                                                          </div>\n                                                        </Accordion.Body>\n                                                      </Accordion.Item>{\" \"}\n                                                    </Accordion>\n                                                  </div>\n                                                )\n                                              )}\n                                            </div>\n                                          </Accordion.Body>\n                                        </Accordion.Item>\n                                      </Accordion>\n                                    </div>\n                                  )\n                                )}\n                              </div>\n                            </Accordion.Body>\n                          </Accordion.Item>\n                          <Accordion.Item eventKey=\"1\">\n                            <Accordion.Header>\n                              {t(\"FriendSearchPage_Prefrences\")}\n                            </Accordion.Header>\n                            <Accordion.Body>\n                              <div className=\"memberdrop_listbox\">\n                                <div className=\"memberdrop_cbox scroll_bar\">\n                                  <ul>\n                                    <li className=\"textcolor\">\n                                      <strong>I am:</strong>{\" \"}\n                                      {UserDataall.gender}.\n                                    </li>\n                                    <li className=\"textcolor\">\n                                      <strong>{t(\"iamlooking\")}:</strong>{\" \"}\n                                      <p\n                                        dangerouslySetInnerHTML={{\n                                          __html: UserDataall.preferences,\n                                        }}\n                                      />\n                                    </li>\n                                  </ul>\n                                </div>\n                              </div>\n                            </Accordion.Body>\n                          </Accordion.Item>\n                          <Accordion.Item eventKey=\"3\">\n                            <Accordion.Header>\n                              {t(\"FriendSearchPage_Age\")}\n                            </Accordion.Header>\n                            <Accordion.Body>\n                              <div className=\"memberdrop_listbox mt-5\">\n                                <div id=\"ageSlider\">\n                                  {/* <input\n                                      type=\"range\"\n                                      id=\"ageSlider\"\n                                      min=\"18\"\n                                      max=\"59\"\n\n                                      Value={selectedAgee}\n                                      onChange={handleAgeChange}\n                                      className=\"slider\"\n                                    /> */}\n                                  {/* <p className=\"age-range\">\n                                    Age: {selectedAge[0]} - {selectedAge[1]}\n                                  </p> */}\n                                </div>\n                              </div>\n                            </Accordion.Body>\n                          </Accordion.Item>\n                          <Accordion.Item eventKey=\"4\">\n                            <Accordion.Header>\n                              {t(\"FriendSearchPage_SexualOrientation\")}\n                            </Accordion.Header>\n                            <Accordion.Body>\n                              <div className=\"memberdrop_listbox\">\n                                <div className=\"memberdrop_cbox scroll_bar\">\n                                  <label className=\"cbox d-flex align-items-center gap-3\">\n                                    <input\n                                      type=\"checkbox\"\n                                      name=\"sexual\"\n                                      value=\"Heterosexual\"\n                                      onClick={() =>\n                                        handlesexual(\"Heterosexual\")\n                                      }\n                                    />\n                                    {t(\"FriendSearchPage_SexualHeterosexual\")}\n                                  </label>\n                                  <label className=\"cbox d-flex align-items-center gap-3\">\n                                    <input\n                                      type=\"checkbox\"\n                                      name=\"sexual\"\n                                      value=\"Homosexual\"\n                                      onClick={() => handlesexual(\"Homosexual\")}\n                                    />\n                                    {t(\"FriendSearchPage_SexualHomosexual\")}\n                                  </label>\n                                  <label className=\"cbox d-flex align-items-center gap-3\">\n                                    <input\n                                      type=\"checkbox\"\n                                      name=\"sexual\"\n                                      value=\"Bisexual\"\n                                      onClick={() => handlesexual(\"Bisexual\")}\n                                    />\n                                    {t(\"FriendSearchPage_SexualBisexual\")}\n                                  </label>\n                                  <label className=\"cbox d-flex align-items-center gap-3\">\n                                    <input\n                                      type=\"checkbox\"\n                                      name=\"sexual\"\n                                      value=\"Pansexual\"\n                                      onClick={() => handlesexual(\"Pansexual\")}\n                                    />\n                                    {t(\"FriendSearchPage_SexualPansexual\")}\n                                  </label>\n                                  <label className=\"cbox d-flex align-items-center gap-3\">\n                                    <input\n                                      type=\"checkbox\"\n                                      name=\"sexual\"\n                                      value=\"Asexual\"\n                                      onClick={() => handlesexual(\"Asexual\")}\n                                    />\n                                    {t(\"FriendSearchPage_SexualAsexual\")}\n                                  </label>\n                                  <label className=\"cbox d-flex align-items-center gap-3\">\n                                    <input\n                                      type=\"checkbox\"\n                                      name=\"sexual\"\n                                      value=\"Other\"\n                                      onClick={() => handlesexual(\"Other\")}\n                                    />\n                                    {t(\"FriendSearchPage_SexualOther\")}\n                                  </label>\n                                </div>\n                              </div>\n                            </Accordion.Body>\n                          </Accordion.Item>\n                        </Accordion>\n                      </Accordion.Body>\n                    </Accordion.Item>\n                  </Accordion>\n                  <Link to=\"/gallery\" className=\"seacrh_btns\">\n                    <div className=\"serachdrop d-flex align-items-center  gap-3\">\n                      <div className=\"searchicon\">\n                        <img\n                          className=\"w-100 h-100\"\n                          src={require(\"../assets/images/serach2.png\")}\n                          alt=\"img\"\n                        />\n                      </div>\n                      <h3>{t(\"Gallery\")} </h3>\n                    </div>\n                  </Link>\n                  <Link to=\"/groups\" className=\"seacrh_btns\">\n                    <div className=\"serachdrop d-flex align-items-center  gap-3 \">\n                      <div className=\"searchicon\">\n                        <img\n                          className=\"w-100 h-100\"\n                          src={require(\"../assets/images/serach3.png\")}\n                          alt=\"img\"\n                        />\n                      </div>\n                      <h3>{t(\"Groups\")}</h3>\n                    </div>\n                  </Link>\n                  <Link to=\"/events\" className=\"seacrh_btns\">\n                    <div className=\"serachdrop d-flex align-items-center  gap-3\">\n                      <div className=\"searchicon\">\n                        <img\n                          className=\"w-100 h-100\"\n                          src={require(\"../assets/images/serach4.png\")}\n                          alt=\"img\"\n                        />\n                      </div>\n                      <h3>{t(\"Events\")}</h3>\n                    </div>\n                  </Link>\n                  <Link to=\"/speeddate\" className=\"seacrh_btns\">\n                    <div className=\"serachdrop d-flex align-items-center  gap-3\">\n                      <div className=\"searchicon\">\n                        <img\n                          className=\"w-100 h-100\"\n                          src={require(\"../assets/images/serach5.png\")}\n                          alt=\"img\"\n                        />\n                      </div>\n                      <h3>{t(\"Speedating\")}</h3>\n                    </div>\n                  </Link>\n                  <Link to=\"/forums\" className=\"seacrh_btns\">\n                    <div className=\"serachdrop d-flex align-items-center  gap-3\">\n                      <div className=\"searchicon\">\n                        <img\n                          className=\"w-100 h-100\"\n                          src={require(\"../assets/images/serach6.png\")}\n                          alt=\"img\"\n                        />\n                      </div>\n                      <h3>{t(\"Forum\")}</h3>\n                    </div>\n                  </Link>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-9\">\n              <div className=\"row gy-4\">\n                {AllMembers.length === 0 ? (\n                  <div className=\"col-12 text-center\">\n                    <h4>{t(\"No_member_found\")}</h4>\n                  </div>\n                ) : (\n                  AllMembers.map((member) => (\n                    <div className=\"col-sm-6 col-xl-4\" key={member.id}>\n                      <div className=\"position-relative search_content\">\n                        <Link\n                          to={`/friend/${member.id}`}\n                          className=\"d-block searchimg h-100\"\n                        >\n                          {member.profile_image ? ( // Display the image URL if available\n                            <img\n                              className=\"w-100 h-100 object-fit-cover\"\n                              src={member.profile_image} // Use the URL from the member object\n                              alt=\"userpic\"\n                            />\n                          ) : (\n                            <img\n                              className=\"w-100 h-100 object-fit-cover\"\n                              src={require(\"../assets/images/thumb.jpg\")} // Default image if profile image is not available\n                              alt=\"userpic\"\n                            />\n                          )}\n\n                          <div className=\"vip_text d-flex align-items-center justify-content-between gap-1\">\n                            <div className=\" d-flex align-items-center gap-1\">\n                              {member.online_user_active === \"Yes\" && (\n                                <>\n                                  {member.online_user === \"Online\" && (\n                                    <div className=\"green_dot_vip\"></div>\n                                  )}\n                                </>\n                              )}\n                              {member.membership_plan}\n                            </div>\n                            <div className=\"gender_icovip\">\n                              {member.gender === \"Male\" && <PiGenderMaleBold />}\n                              {member.gender === \"Couple\" && <FaVenusMars />}\n                              {member.gender === \"Female\" && (\n                                <PiGenderFemaleBold />\n                              )}\n                            </div>\n                          </div>\n                        </Link>\n\n                        <div className=\"d-flex align-items-center gap-2 searchgender_main\">\n                          <div className=\"d-flex align-items-center justify-content-between gap-3 w-100\">\n                            <div className=\"d-flex align-items-center gap-2\">\n                              {member.gender === \"Male\" && (\n                                <div className=\"d-block searchwomen flex-shrink-0\">\n                                  <img\n                                    className=\"w-100 h-100\"\n                                    src={require(\"../assets/images/male.png\")}\n                                    alt=\"profile\"\n                                  />\n                                </div>\n                              )}\n                              {member.gender === \"Female\" && (\n                                <div className=\"d-block searchwomen flex-shrink-0\">\n                                  <img\n                                    className=\"w-100 h-100\"\n                                    src={require(\"../assets/images/woman.png\")}\n                                    alt=\"profile\"\n                                  />\n                                </div>\n                              )}\n                              {member.gender === \"Couple\" && (\n                                <>\n                                  <div className=\"d-flex searchwomen justify-content-between\">\n                                    <img\n                                      className=\"w-100 h-100\"\n                                      src={require(\"../assets/images/male.png\")}\n                                      alt=\"profile\"\n                                    />\n                                  </div>\n                                  <div className=\"d-flex searchwomen justify-content-between\">\n                                    <img\n                                      className=\"w-100 h-100\"\n                                      src={require(\"../assets/images/woman.png\")}\n                                      alt=\"profile\"\n                                    />\n                                  </div>\n                                </>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"d-flex align-items-start gap-3 justify-content-between px-3 searchusere\">\n                          <Link className=\"d-flex flex-column gap-2\">\n                            <h4>{member.username}</h4>\n                            <div className=\"d-flex align-items-center gap-1\">\n                              <p>\n                                {member.birthday_date != null\n                                  ? `${calculateAge(member.birthday_date)},`\n                                  : \"\"}\n                              </p>\n                              <p>{member.location}</p>\n                            </div>\n                          </Link>\n\n                          {member.friend_status === \"Yes\" && (\n                            <Button\n                              onClick={() => chatsectionUser(member.id)}\n                              className=\"d-block searchmessage flex-shrink-0\"\n                            >\n                              <img\n                                className=\"w-100 h-100\"\n                                src={require(\"../assets/images/message.png\")}\n                                alt=\"img\"\n                              />\n                            </Button>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      <ChatBox\n        isOpen={isPopupOpen}\n        onClose={closePopup}\n        userdetail={IsuserDetailForChat}\n        userChatDetail={IsuserChatDetail}\n        LoginData={LoginData}\n        to_id={toid}\n        getChatAfterSave={getChatAfterSave}\n        refreshchat={refreshchat}\n      ></ChatBox>\n      <Footer />\n    </>\n  );\n}\n"],"names":["Friendsearch","useNavigate","refreshNotifications","setRefreshNotifications","useState","UserDataall","setUserDataall","searchheader","setsearchheader","searchTerm","setsearchTerm","isPopupOpen","setIsPopupOpen","LoginData","setLoginData","toid","settoid","AllMembers","setAllMembers","birthdd","setbirthdd","UserDetail","setUserDetail","AllEvents","setAllEvents","IsuserDetailForChat","setuserDetailForChat","IsuserChatDetail","setuserChatDetail","to_id","setto_id","selectedAgee","setSelectedAgee","selectedSubRegion","setSelectedSubRegion","selectedTowns","setSelectedTowns","selectedSubRegions","setSelectedSubRegions","selectedAge","setSelectedAge","userdetail","setuserdetail","apiUrl","selectedRegion","setSelectedRegion","Selectedsex","setSelectedsex","regionTranslationKeys","ostlandet","vestlandet","trondelag","nordnorge","other","selectedage","setSelectedage","useEffect","storedUsername","localStorage","getItem","userLogin","JSON","parse","getuserdetail","async","formData","id","email","respo","axios","post","apiUrlRegister","headers","Accept","data","result","err","response","request","console","error","message","ws","WebSocket","onmessage","event","receivedMessage","setSearchTermRealtime","sexfilter","close","undefined","sexual_orientation","sr","user_id","looking_forr","log","res","results","getAllMembers","row","calculateAge","birthday","birthDate","Date","today","age","getFullYear","monthDifference","getMonth","getDate","slider","document","getElementById","noUiSlider","start","connect","range","min","max","step","tooltips","format","to","value","Math","round","from","parseInt","on","values","map","val","destroy","chatsectionUser","getUserDetailForChat","body","style","overflowY","length","ser","search","realsearch","fromage","toage","currentYearInNorway","toLocaleString","timeZone","year","frombirthDates","calculateDateOfBirth","tobirthDates","agefilter","currentYear","toString","location","handlesexual","prevSelectedRegions","includes","sex","filter","item","t","Array","_","index","useTranslation","savedLanguage","i18n","language","changeLanguage","areafilter","_jsxs","_Fragment","children","_jsx","Headertwo","className","type","onInput","e","setSearchTerm","target","Link","IconHome","stroke","Accordion","Item","eventKey","Header","src","require","alt","Body","Object","entries","Viken","Innlandet","Hordaland","Rogaland","Trøndelag","Nordland","Other","_ref","region","subRegions","htmlFor","name","checked","onChange","prev","r","handleRegionChange","keys","find","key","_ref2","subRegion","towns","s","handleSubRegionChange","town","handleTownChange","gender","dangerouslySetInnerHTML","__html","preferences","onClick","member","profile_image","online_user_active","online_user","membership_plan","PiGenderMaleBold","FaVenusMars","PiGenderFemaleBold","username","birthday_date","friend_status","Button","ChatBox","isOpen","onClose","closePopup","userChatDetail","getChatAfterSave","refreshchat","Footer"],"sourceRoot":""}