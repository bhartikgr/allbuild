{"version":3,"file":"static/js/9439.1bef1c7c.chunk.js","mappings":"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","sources":["components/Createnewevent.jsx","components/InviteEventsFriend.jsx","pages/AllEvents.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { BsCloudUpload } from \"react-icons/bs\";\nimport SuccessPop from \"../components/SuccessPop\";\nimport ErrorPop from \"../components/ErrorPop\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nexport const Createnewevent = ({ isOpen, onClose, onEventCreated }) => {\n  // Initialize state for the checkbox only\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [showPopSuccess, setShowPopSuccess] = useState(false);\n  const [showPopError, setShowPopError] = useState(false);\n  const [successPopMessage, setPopsuccessMessage] = useState(\"\");\n  const [errorPopMessage, setPoperrorMessage] = useState(\"\");\n  const [makeImagePrivate, setMakeImagePrivate] = useState(false);\n  const [spinner, setspinner] = useState(false);\n  const [eventData, setEventData] = useState({\n    name: \"\",\n    start_date: \"\",\n    end_date: \"\",\n    time: \"\",\n    location: \"\",\n    description: \"\",\n    image: null,\n  });\n  var apiUrl = \"https://backend.amourette.no/\";\n  const [restr_message, setrestr_message] = useState(false);\n  const today = new Date(); // Get today's date\n  const day = String(today.getDate()).padStart(2, \"0\"); // Get day and ensure 2 digits\n  const month = String(today.getMonth() + 1).padStart(2, \"0\"); // Get month and ensure 2 digits (months are zero-indexed)\n  const year = today.getFullYear(); // Get the full year\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const today_enddate = `${day}-${month}-${year}`;\n  if (!isOpen) return null;\n\n  const handleOverlayClick = (e) => {\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose();\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value, type, files } = e.target;\n\n    // Check for restricted words only for text inputs\n    if (type === \"text\" || type === \"textarea\") {\n      const hasRestrictedWord = restrictedWords.some((word) =>\n        value.toLowerCase().includes(word.toLowerCase())\n      );\n\n      if (hasRestrictedWord) {\n        // Display a message or set an error state\n        setrestr_message(true);\n      } else {\n        setrestr_message(false);\n      }\n    }\n\n    // Update event data\n    setEventData((prevData) => ({\n      ...prevData,\n      [name]: type === \"file\" ? files[0] : value,\n    }));\n  };\n  const restrictedWords = [\n    \"arse\",\n    \"arsehead\",\n    \"arsehole\",\n    \"ass\",\n    \"ass hole\",\n    \"asshole\",\n    \"bastard\",\n    \"bitch\",\n    \"bloody\",\n    \"bollocks\",\n    \"brotherfucker\",\n    \"bugger\",\n    \"bullshit\",\n    \"child-fucker\",\n    \"Christ on a bike\",\n    \"Christ on a cracker\",\n    \"cock\",\n    \"cocksucker\",\n    \"crap\",\n    \"cunt\",\n    \"dammit\",\n    \"damn\",\n    \"damned\",\n    \"damn it\",\n    \"dick\",\n    \"dick-head\",\n    \"dickhead\",\n    \"dumb ass\",\n    \"dumb-ass\",\n    \"dumbass\",\n    \"dyke\",\n    \"faggot\",\n    \"father-fucker\",\n    \"fatherfucker\",\n    \"fuck\",\n    \"fucker\",\n    \"fucking\",\n    \"god dammit\",\n    \"goddammit\",\n    \"God damn\",\n    \"god damn\",\n    \"goddamn\",\n    \"Goddamn\",\n    \"goddamned\",\n    \"goddamnit\",\n    \"godsdamn\",\n    \"holy shit\",\n    \"horseshit\",\n    \"in shit\",\n    \"jackarse\",\n    \"jack-ass\",\n    \"jackass\",\n    \"Jesus Christ\",\n    \"Jesus fuck\",\n    \"Jesus Harold Christ\",\n    \"Jesus H. Christ\",\n    \"Jesus, Mary and Joseph\",\n    \"Jesus wept\",\n    \"kike\",\n    \"mother fucker\",\n    \"mother-fucker\",\n    \"motherfucker\",\n    \"nigga\",\n    \"nigra\",\n    \"pigfucker\",\n    \"piss\",\n    \"prick\",\n    \"pussy\",\n    \"shit\",\n    \"shit ass\",\n    \"shite\",\n    \"sibling fucker\",\n    \"sisterfuck\",\n    \"sisterfucker\",\n    \"slut\",\n    \"son of a bitch\",\n    \"son of a whore\",\n    \"spastic\",\n    \"sweet Jesus\",\n    \"twat\",\n    \"wanker\",\n  ];\n  const handleCheckboxChange = (e) => {\n    const { checked } = e.target;\n    setMakeImagePrivate(checked);\n  };\n  const MAX_FILE_SIZE = 2 * 1024 * 1024; // 2 MB\n  const handleFileChange = async (event) => {\n    const file = event.target.files[0];\n    if (!file) return;\n\n    const isImage = file.type.startsWith(\"image/\");\n    const isVideo = file.type.startsWith(\"video/\");\n\n    if (!isImage && !isVideo) {\n      setErrorMessage(\"Please upload a valid image or video file.\");\n      setSelectedFile(null);\n      return;\n    }\n\n    if (file.size > MAX_FILE_SIZE) {\n      setErrorMessage(\"File size must be less than 5 MB.\");\n      setSelectedFile(null);\n      return;\n    }\n\n    setErrorMessage(\"\");\n\n    if (isImage) {\n      const supportedTypes = [\"image/jpeg\", \"image/png\", \"image/gif\"];\n      if (!supportedTypes.includes(file.type)) {\n        try {\n          const convertedFile = await convertToPng(file);\n          setSelectedFile(convertedFile);\n\n          return;\n        } catch (err) {\n          console.error(\"Image conversion error:\", err);\n          setErrorMessage(\"Failed to convert image.\");\n          setSelectedFile(null);\n          return;\n        }\n      }\n\n      setSelectedFile(file);\n    }\n\n    if (isVideo) {\n      setSelectedFile(file);\n    }\n  };\n  const convertToPng = (file) => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = function (event) {\n        const img = new Image();\n        img.onload = function () {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = img.width;\n          canvas.height = img.height;\n\n          const ctx = canvas.getContext(\"2d\");\n          ctx.drawImage(img, 0, 0);\n\n          canvas.toBlob(\n            (blob) => {\n              if (blob) {\n                const pngFile = new File(\n                  [blob],\n                  file.name.replace(/\\.\\w+$/, \".png\"),\n                  {\n                    type: \"image/png\",\n                    lastModified: new Date().getTime(),\n                  }\n                );\n                resolve(pngFile);\n              } else {\n                reject(new Error(\"Failed to convert image.\"));\n              }\n            },\n            \"image/png\",\n            1\n          );\n        };\n        img.onerror = reject;\n        img.src = event.target.result;\n      };\n\n      reader.onerror = reject;\n      reader.readAsDataURL(file);\n    });\n  };\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    setspinner(true);\n    try {\n      const formData = new FormData();\n      // Append checkbox value to formData\n      formData.append(\"makeImagePrivate\", makeImagePrivate);\n      formData.append(\"user_id\", userLogin.id);\n      formData.append(\"fileType\", \"events\");\n      formData.append(\"image\", selectedFile);\n      for (const key in eventData) {\n        formData.append(key, eventData[key]);\n      }\n\n      const response = await axios.post(apiUrl + \"api/events\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\",\n        },\n      });\n      setspinner(false);\n      //console.log(response.data);\n      if (response.data.status === \"2\") {\n        setShowPopError(true);\n        setPoperrorMessage(response.data.message);\n        setTimeout(() => {\n          setShowPopError(false);\n          setPoperrorMessage(\"\");\n          window.location.reload();\n        }, 1000);\n      } else {\n        setShowPopSuccess(true);\n        setPopsuccessMessage(response.data.message);\n        setTimeout(() => {\n          setShowPopError(false);\n          setShowPopSuccess(false);\n          //navigate(\"/login\");\n          onEventCreated(response.data);\n          onClose();\n        }, 500);\n        console.log(\"Event created:\", response.data);\n        setEventData({\n          name: \"\",\n          start_date: \"\",\n          end_date: \"\",\n          time: \"\",\n          location: \"\",\n          description: \"\",\n          image: null,\n        });\n        setSelectedFile(null);\n      }\n\n      // Close the popup after submission\n    } catch (error) {\n      setspinner(false);\n      setShowPopError(true);\n      setPoperrorMessage(\"Some thing went wrong,Please try again:\", error);\n      setTimeout(() => {\n        setShowPopError(false);\n        setShowPopError(\"\");\n        onClose();\n      }, 1000);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose}>\n            &times; {/* Close button */}\n          </button>\n          {showPopSuccess && <SuccessPop message={successPopMessage} />}\n          {showPopError && <ErrorPop message={errorPopMessage} />}\n          <div className=\"cneventup d-flex flex-column gap-4\">\n            <h3> {t(\"create_new_event\")}</h3>\n\n            <form onSubmit={handleSubmit}>\n              <div className=\"row gy-4\">\n                <div className=\"col-md-4\">\n                  <div className=\"uploadfile rel bgload\">\n                    <input\n                      type=\"file\"\n                      required\n                      accept=\"image/*,video/mp4,video/webm,video/ogg\"\n                      name=\"image\"\n                      onChange={handleFileChange}\n                      className=\"fileload\"\n                    />\n                    <div className=\"upload_image\">\n                      {selectedFile && (\n                        <img\n                          className=\"w-100 h-100\"\n                          src={URL.createObjectURL(selectedFile)} // Create a URL for the selected image\n                          alt=\"Selected\"\n                        />\n                      )}\n                    </div>\n                    <div className=\"inload\" style={{ height: \"100px\" }}>\n                      <div>\n                        <BsCloudUpload style={{ fontSize: \"24px\" }} />\n                        <h3 style={{ fontSize: \"14px\" }}>\n                          {t(\"upload_image\")} *\n                        </h3>\n                      </div>\n                    </div>\n                    {errorMessage && (\n                      <p className=\"text-danger\">{errorMessage}</p>\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <input\n                    type=\"text\"\n                    placeholder={t(\"event_name\")}\n                    name=\"name\"\n                    value={eventData.name}\n                    onChange={handleInputChange}\n                    required\n                  />\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"datetimeline rel\">\n                    <label className=\"stextlabel\">{t(\"start_date\")} *</label>\n                    <input\n                      type=\"date\"\n                      name=\"start_date\"\n                      value={eventData.start_date}\n                      onChange={handleInputChange}\n                      min={new Date().toISOString().split(\"T\")[0]} // Set min to today's date\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"datetimeline rel\">\n                    <label className=\"stextlabel\">{t(\"end_date\")} *</label>\n                    <input\n                      type=\"date\"\n                      name=\"end_date\"\n                      value={eventData.end_date}\n                      minLength={today_enddate}\n                      onChange={handleInputChange}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"col-md-4\">\n                  <div className=\"datetimeline rel\">\n                    <label className=\"stextlabel\">{t(\"time\")} *</label>\n                    <input\n                      type=\"time\"\n                      name=\"time\"\n                      value={eventData.time}\n                      onChange={handleInputChange}\n                      required\n                    />\n                  </div>\n                </div>\n                <div className=\"col-12\">\n                  <input\n                    type=\"text\"\n                    placeholder={t(\"Location\")}\n                    name=\"location\"\n                    value={eventData.location}\n                    onChange={handleInputChange}\n                  />\n                </div>\n                <div className=\"col-12\">\n                  <textarea\n                    name=\"description\"\n                    rows=\"5\"\n                    placeholder={t(\"event_description\")}\n                    value={eventData.description}\n                    onChange={handleInputChange}\n                  ></textarea>\n                </div>\n                <div className=\"col-12\">\n                  <div className=\"listbox\">\n                    <label className=\"cbox\">\n                      {t(\"Make_private\")}\n                      <input\n                        type=\"checkbox\"\n                        name=\"makeImagePrivate\"\n                        checked={makeImagePrivate} // Use the state directly\n                        onChange={handleCheckboxChange} // Use dedicated handler\n                      />\n                      <span className=\"checkmark\"></span>\n                    </label>\n                  </div>\n                </div>\n                {restr_message && (\n                  <span className=\"text-danger\" style={{ fontSize: \"14px\" }}>\n                    {t(\"Your_message_contain\")}\n                  </span>\n                )}\n                <div className=\"col-12\">\n                  {spinner && (\n                    <div\n                      className=\"spinner-border text-success date-load\"\n                      role=\"status\"\n                    >\n                      <span className=\"visually-hidden\">{t(\"loading\")}...</span>\n                    </div>\n                  )}\n                  <button type=\"submit\">{t(\"create_new_event\")}</button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nexport const InviteEventsFriend = ({\n  isOpen1,\n  onClose1,\n  children,\n  friends,\n  LoginData,\n  eventId,\n  onInvitesSent,\n}) => {\n  const [selectedFriends, setSelectedFriends] = useState([]);\n  const [invMessage, setinvMessage] = useState(\"\");\n  var apiUrl = \"https://backend.amourette.no/\";\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  if (!isOpen1) return null;\n  const handleOverlayClick = (e) => {\n    // Check if the clicked element is the overlay\n    if (e.target.classList.contains(\"popup-overlay\")) {\n      onClose1(); // Close the popup if the overlay is clicked\n    }\n  };\n\n  const handleCheckboxChange = (userId) => {\n    setSelectedFriends((prevSelected) => {\n      if (prevSelected.includes(userId)) {\n        // If already selected, remove from selectedFriends\n        return prevSelected.filter((id) => id !== userId);\n      } else {\n        // If not selected, add to selectedFriends\n        return [...prevSelected, userId];\n      }\n    });\n  };\n  const handleInviterequest = async (e) => {\n    e.preventDefault(); // Prevent default form submission\n\n    // Create a FormData object to hold the selected friend IDs\n    let formData = {\n      friendIds: selectedFriends,\n      user_id: LoginData.id,\n      eventId: eventId,\n    };\n    console.log(formData);\n    // Append selected friend IDs to formData\n\n    try {\n      const response = await axios.post(\n        apiUrl + \"api/sendEventinvite\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      );\n      setinvMessage(\"Invites sent successfully\");\n      setSelectedFriends([]);\n      onInvitesSent();\n      setTimeout(() => {\n        setinvMessage(\"\");\n      }, 1500);\n      console.log(\"Invites sent successfully:\", response.data);\n    } catch (error) {\n      console.error(\"Error sending invites:\", error);\n      // Optionally handle error (e.g., show an error message)\n    }\n  };\n\n  return (\n    <>\n      <div className=\"popup-overlay\" onClick={handleOverlayClick}>\n        <div className=\"popup-content col-md-5\">\n          <button className=\"close-button\" onClick={onClose1}>\n            &times; {/* Close button */}\n          </button>\n          <div className=\"invite_pop gallery_pop d-flex flex-column gap-4\">\n            <div className=\"d-flex flex-column gap-2\">\n              <h3>{`${t(\"invite_a_friend\")}`}</h3>\n              <p className=\"invite_text\"></p>\n            </div>\n            <form\n              action=\"javascript:void(0)\"\n              onSubmit={handleInviterequest}\n              method=\"post\"\n            >\n              <div className=\"row gy-3 align-items-end\">\n                <div className=\"col-12\">\n                  <ul className=\"invite_list scroll_bar p-0\">\n                    {friends.length > 0 ? (\n                      friends.map((friend, index) => (\n                        <li key={index}>\n                          <div className=\"d-flex align-items-center gap-3\">\n                            <div className=\"invite_profile\">\n                              {friend.profile_image ? ( // Display the image URL if available\n                                <img\n                                  className=\"w-100 h-100 object-fit-cover\"\n                                  src={friend.profile_image} // Use the URL created from the file\n                                  alt=\"Selected\"\n                                />\n                              ) : (\n                                <img\n                                  className=\"w-100 h-100 object-fit-cover\"\n                                  src={require(\"../assets/images/thumb.jpg\")} // If it's an image URL from the profile\n                                  alt=\"Profile\"\n                                />\n                              )}\n                            </div>\n                            <h4>{friend.username}</h4>{\" \"}\n                            {/* Display the friend's username */}\n                          </div>\n                          <div className=\"listbox d-flex justify-content-center\">\n                            <label className=\"cbox\">\n                              <input\n                                type=\"checkbox\"\n                                onChange={() => handleCheckboxChange(friend.id)} // Handle checkbox change\n                                checked={selectedFriends.includes(friend.id)} // Check if this friend is selected\n                                name=\"makeImagePrivate\"\n                              />\n                              <span className=\"checkmark\"></span>\n                            </label>\n                          </div>\n                        </li>\n                      ))\n                    ) : (\n                      <li className=\"invite_text\">\n                        <p>{`${t(\"No_friend_ab\")}`}.</p>{\" \"}\n                        {/* Message when there are no friends */}\n                      </li>\n                    )}\n                  </ul>\n                </div>\n                {invMessage !== \"\" && (\n                  <p className=\"invite_text text-success\">{invMessage}</p>\n                )}\n\n                <div className=\"col-12\">\n                  {friends.length > 0 ? (\n                    <button\n                      type=\"submit\"\n                      className={selectedFriends.length === 0 ? \"opa\" : \"\"}\n                      disabled={selectedFriends.length === 0}\n                    >\n                      {`${t(\"SEND_INVITE\")}`}\n                    </button>\n                  ) : (\n                    <p>{`${t(\"No_friend_ab\")}`}</p> // Optional message when there are no friends\n                  )}\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport ev1 from \"../assets/images/ev1.png\";\nimport ev2 from \"../assets/images/ev2.png\";\nimport ev3 from \"../assets/images/ev3.png\";\nimport { IoMdCloseCircleOutline } from \"react-icons/io\";\nimport { FaSortAmountDown, FaSortAmountUp } from \"react-icons/fa\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Tabs from \"react-bootstrap/Tabs\";\n\nimport { FaFacebookMessenger } from \"react-icons/fa\";\nimport axios from \"axios\";\nimport { useNavigate, Link, useLocation } from \"react-router-dom\";\nimport Headertwo from \"../components/Headertwo\";\nimport { Createnewevent } from \"../components/Createnewevent\";\nimport { InviteEventsFriend } from \"../components/InviteEventsFriend\";\nimport { useTranslation } from \"react-i18next\";\nimport i18n from \"../i18n\";\nimport { IconHome } from \"@tabler/icons-react\";\nfunction AllEvents() {\n  const [key, setKey] = useState(\"Invite\");\n  // State to track the active button\n  const [inviteGuestuser, setinviteGuestuser] = useState([]);\n  var apiUrl = \"https://backend.amourette.no/api/\";\n  var apiUrl2 = \"https://backend.amourette.no/api/members/\";\n  const [activeIndex, setActiveIndex] = useState(0); // Default to the first button\n  const [LoginData, setLoginData] = useState(null);\n  const [searchTerm, setsearchTerm] = useState(\"\");\n  const [AllfriendId, setAllfriendId] = useState([]);\n  const [isInterested, setIsInterested] = useState(false);\n  const [EventDetailIntersted, setEventDetailIntersted] = useState([]);\n  const [eventId, seteventId] = useState(\"\");\n  const [events, setEvents] = useState([]);\n  const [allevents, setallevents] = useState([]);\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  const [isPopupOpen1, setIsPopupOpen1] = useState(false);\n  const [allyoureventsUser, setallyoureventsUser] = useState([]);\n  const navigate = useNavigate();\n  const handleButtonClick = async (index) => {\n    setActiveIndex(index); // Set the clicked button as active\n    if (index === 2) {\n      const storedUsername = localStorage.getItem(\"userLogin\");\n      const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n\n      const userIdsWithSelf = [...AllfriendId, userLogin.id]; // e.g., [3, 1, 5]\n\n      let formData = {\n        user_ids: userIdsWithSelf,\n        user_id: userLogin.id,\n      };\n      console.log(formData);\n      try {\n        const res = await axios.post(\n          apiUrl + \"getalleventsDiscover\",\n          formData,\n          {\n            headers: {\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n            },\n          }\n        );\n        console.log(\"testt\");\n        console.log(res.data.events);\n        setallevents(res.data.events);\n        console.log(\"Response data:\", res.data.events);\n      } catch (err) {\n        console.error(\"Error fetching events:\", err);\n      }\n    } else {\n      getAllfriends();\n    }\n  };\n  const [isAscending, setIsAscending] = useState(true);\n\n  const handleSortToggle = () => {\n    setIsAscending((prevState) => !prevState);\n  };\n\n  const location = useLocation();\n  const getallevents = async (userIds) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n\n    const userIdsWithSelf = [...userIds, userLogin.id]; // e.g., [3, 1, 5]\n\n    let formData = {\n      user_id: userIdsWithSelf,\n      id: userLogin.id,\n      orderBy: isAscending,\n    };\n    console.log(formData);\n    try {\n      const res = await axios.post(\n        apiUrl + \"getalleventsWithInterseted\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      console.log(\"testt\");\n      console.log(res.data.events);\n      setallevents(res.data.events);\n      console.log(\"Response data:\", res.data.events);\n    } catch (err) {\n      console.error(\"Error fetching events:\", err);\n    }\n  };\n\n  useEffect(() => {\n    // Check if the username key exists in session storage\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = JSON.parse(storedUsername);\n    if (userLogin == null) {\n      navigate(\"/login\");\n    } else {\n      setLoginData(userLogin);\n      //getallevents(userLogin.id);\n    }\n  }, []);\n\n  useEffect(() => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null; // Safely parse login data\n\n    getAllfriends();\n  }, []);\n  const getAllfriends = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl2 + \"getAllfriends\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n      const friendUserIds = respo.map((friend) => friend.id);\n      setAllfriendId(friendUserIds);\n      const galleries = await getallevents(friendUserIds);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getalleventsUser = async (id) => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n      event_id: id,\n    };\n\n    try {\n      const res = await axios.post(apiUrl + \"getallYoureventsUser\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      console.log(\"invite friend\");\n      console.log(res.data.events);\n      setallyoureventsUser(res.data.events);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n\n  const openPopup = () => {\n    setIsPopupOpen(true);\n    // Disable body scroll when popup is open\n    document.body.style.overflowY = \"hidden\";\n  };\n\n  const closePopup = () => {\n    setIsPopupOpen(false);\n    // Re-enable body scroll when popup is closed\n    document.body.style.overflowY = \"auto\";\n  };\n  const openPopup1 = (id) => {\n    seteventId(id);\n    getalleventsUser(id);\n    setIsPopupOpen1(true);\n\n    document.body.style.overflowY = \"hidden\";\n  };\n\n  const closePopup1 = () => {\n    setIsPopupOpen1(false);\n    document.body.style.overflowY = \"auto\";\n  };\n  const handleEventCreated = (newEvent) => {\n    console.log(\"aaas\");\n    console.log(newEvent.user_id);\n    getallevents(newEvent.user_id);\n    setEvents((prevEvents) => [...prevEvents, newEvent]);\n  };\n  const refreshFriendsList = () => {\n    getalleventsUser(eventId);\n  };\n  const handleInterested = async (event_id) => {\n    let formData = {\n      event_id: event_id,\n      user_id: LoginData.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"userEventIntersted\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      console.log(\"hh\");\n      getallevents(AllfriendId);\n      if (res.data.status === \"1\") {\n        setIsInterested(true); // User is now interested\n      } else if (res.data.status === \"2\") {\n        setIsInterested(false); // User is no longer interested\n      }\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const getEventdetailallIntersted = async (idd) => {\n    let formData = {\n      event_id: idd,\n    };\n\n    try {\n      const res = await axios.post(\n        apiUrl + \"get_EventdetailAllIntersted\",\n        formData,\n        {\n          headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n          },\n        }\n      );\n      console.log(\"hh\");\n      console.log(res.data.results);\n      setEventDetailIntersted(res.data.results);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const setSearchTerm = async (e) => {\n    setsearchTerm(e);\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    const userIdsWithSelf = [...AllfriendId, userLogin.id]; // e.g., [3, 1, 5]\n    const userIdsString = userIdsWithSelf.join(\", \");\n    let formData = {\n      search: e,\n      user_ids: userIdsString,\n      user_id: userLogin.id, // Sending as a string for the query\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getAlleventsSearch\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.results;\n\n      setallevents(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const { t } = useTranslation();\n\n  useEffect(() => {\n    const savedLanguage = localStorage.getItem(\"language\") || \"en\"; // Default to 'en' if no language is saved\n    console.log(\"language\");\n    console.log(savedLanguage);\n\n    // Change the language if it's not already the current language\n    if (i18n.language !== savedLanguage) {\n      i18n.changeLanguage(savedLanguage);\n    }\n  }, [i18n, t]);\n  const [openGuest, setopenGuest] = useState(false);\n  const getinviteUserGroup = async () => {\n    const storedUsername = localStorage.getItem(\"userLogin\");\n    const userLogin = storedUsername ? JSON.parse(storedUsername) : null;\n    let formData = {\n      user_id: userLogin.id,\n    };\n    try {\n      const res = await axios.post(apiUrl + \"getinviteUserEvent\", formData, {\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\", // Ensure the content type is JSON\n        },\n      });\n      var respo = res.data.result;\n\n      setinviteGuestuser(respo);\n    } catch (err) {\n      // Enhanced error handling\n      if (err.response) {\n      } else if (err.request) {\n        console.error(\"Request data:\", err.request);\n      } else {\n        console.error(\"Error message:\", err.message);\n      }\n    }\n  };\n  const OpenGuest = () => {\n    getinviteUserGroup();\n    setopenGuest(true);\n  };\n  const guestClose = () => {\n    setopenGuest(false);\n  };\n  return (\n    <>\n      <Headertwo />\n      <section className=\"alleventsbox d-block gapy\">\n        <div className=\"container-lg\">\n          <div className=\"row gy-4\">\n            <div className=\"col-md-3 sticky-md-top h-100  evleft\">\n              <div className=\"d-flex flex-column gap-3 searchleftfilter scroll_bar pe-2 \">\n                <h1>{t(\"Events\")}</h1>\n                <div className=\"filtersearch\">\n                  <form action=\"\">\n                    <input\n                      type=\"text\"\n                      value={searchTerm}\n                      onInput={(e) => setSearchTerm(e.target.value)}\n                      placeholder={t(\"Search_Event\")}\n                    />\n                  </form>\n                </div>\n                <div className=\"d-flex flex-column gap-2\">\n                  <Link\n                    to=\"/dashboard\"\n                    className=\"d-flex gap-3 align-items-center listoficons\"\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"userpic userpic_main ofit rounded-circle ratio-unset overflow-hidden\">\n                        <IconHome\n                          stroke={1}\n                          className=\"w-100 h-100 main_homei\"\n                        />\n                      </div>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <h4>{t(\"Home\")}</h4>\n                    </div>\n                  </Link>\n                  <Link\n                    to=\"/allevents\"\n                    type=\"button\"\n                    className={\n                      location.pathname === \"/allevents\"\n                        ? \"d-flex gap-2 align-items-center filterlist active\"\n                        : \"d-flex gap-2 align-items-center filterlist\"\n                    }\n                    onClick={() => handleButtonClick(0)}\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"eventicon fulw\">\n                        <img src={ev1} alt=\"eventicon\" />\n                      </div>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <h3>{t(\"All_Events\")}</h3>\n                    </div>\n                  </Link>\n                  <Link\n                    to=\"/events\"\n                    className={\n                      location.pathname === \"/events\"\n                        ? \"d-flex gap-2 align-items-center filterlist active\"\n                        : \"d-flex gap-2 align-items-center filterlist\"\n                    }\n                    onClick={() => handleButtonClick(1)}\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"eventicon fulw\">\n                        <img src={ev2} alt=\"eventicon\" />\n                      </div>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <h3>{t(\"Your_Events\")}</h3>\n                    </div>\n                  </Link>\n                  <button\n                    type=\"button\"\n                    className={`d-flex gap-2 align-items-center filterlist ${\n                      activeIndex === 2 ? \"active\" : \"\"\n                    }`}\n                    onClick={() => handleButtonClick(2)}\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"eventicon fulw\">\n                        <img src={ev3} alt=\"eventicon\" />\n                      </div>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <h3>{t(\"Discover_new\")}</h3>\n                    </div>\n                  </button>\n                  <button\n                    type=\"button\"\n                    className={`d-flex gap-2 align-items-center filterlist ${\n                      activeIndex === 3 ? \"active\" : \"\"\n                    }`}\n                    onClick={OpenGuest}\n                  >\n                    <div className=\"flex-shrink-0\">\n                      <div className=\"eventicon fulw\">\n                        <img src={ev3} alt=\"eventicon\" />\n                      </div>\n                    </div>\n                    <div className=\"flex-grow-1\">\n                      <h3>{t(\"GuestUser\")}</h3>\n                    </div>\n                  </button>\n                  <div className=\"newebentbtn d-block\">\n                    <button type=\"button\" onClick={openPopup}>\n                      {t(\"Create_new_event\")}\n                    </button>\n                  </div>\n                  <hr className=\"linehr\" />\n                  {/* <div className=\"d-flex flex-column gap-3 categorieslist\">\n                    <h6>Categories</h6>\n                    <div className=\"d-flex flex-column gap-2\">\n                      <div className=\"listbox d-flex flex-column gap-3\">\n                        <label className=\"cbox\">\n                          Drinks\n                          <input type=\"radio\" name=\"labels\" value=\"Drinks\" />\n                          <span className=\"checkmark\"></span>\n                        </label>\n\n                        <label className=\"cbox\">\n                          Fetish\n                          <input type=\"radio\" name=\"labels\" value=\"Fetish\" />\n                          <span className=\"checkmark\"></span>\n                        </label>\n\n                        <label className=\"cbox\">\n                          Meetups\n                          <input type=\"radio\" name=\"labels\" value=\"Meetups\" />\n                          <span className=\"checkmark\"></span>\n                        </label>\n\n                        <label className=\"cbox\">\n                          Love\n                          <input type=\"radio\" name=\"labels\" value=\"Love\" />\n                          <span className=\"checkmark\"></span>\n                        </label>\n                        <label className=\"cbox\">\n                          Party\n                          <input type=\"radio\" name=\"labels\" value=\"Party\" />\n                          <span className=\"checkmark\"></span>\n                        </label>\n                      </div>\n                    </div>\n                  </div> */}\n                </div>\n              </div>\n            </div>\n            <div className=\"col-md-9\">\n              <div className=\"row gy-4\">\n                {/* <div className=\"col-12\">\n                  <div className=\"d-flex justify-content-end\">\n                    <button\n                      type=\"button\"\n                      onClick={handleSortToggle}\n                      className=\"sortbtn\"\n                    >\n                      {t(\"Sortby\")}{\" \"}\n                      {isAscending ? <FaSortAmountUp /> : <FaSortAmountDown />}\n                    </button>\n                  </div>\n                </div> */}\n                {allevents.length === 0 ? (\n                  <div className=\"col-12\">\n                    <p className=\"text-center\">{t(\"No_event_found\")}.</p>\n                  </div>\n                ) : (\n                  allevents.map((event) => (\n                    <div className=\"col-md-6\" key={event.id}>\n                      <div className=\"eventname d-flex flex-column gap-3 h-100\">\n                        <div className=\"row gy-3 align-items-center flex-md-row-reverse\">\n                          <div className=\"col-md-6\">\n                            <Link\n                              to={`/singleevent/${event.slug}`}\n                              className=\"flex-shrink-0 float-md-end\"\n                            >\n                              <div className=\"eventpic ofit\">\n                                {event.image ? ( // Display the image URL if available\n                                  <img\n                                    src={event.image} // Use the URL created from the file\n                                    alt=\"eventspic\"\n                                  />\n                                ) : (\n                                  <img\n                                    src={require(\"../assets/images/thumb.jpg\")} // If it's an image URL from the profile\n                                    alt=\"eventspic\"\n                                  />\n                                )}\n                              </div>\n                            </Link>\n                          </div>\n                          <div className=\"col-md-6\">\n                            <div className=\"flex-grow-1\">\n                              <div className=\"d-flex flex-column gap-2\">\n                                <div className=\"d-flex flex-column gap-2 h-100\">\n                                  <h3>\n                                    {new Date(\n                                      event.created_at\n                                    ).toLocaleDateString(\"en-GB\", {\n                                      day: \"2-digit\",\n                                      month: \"short\",\n                                      year: \"numeric\",\n                                    })}\n                                  </h3>\n                                  <h4>{event.name}</h4>\n                                  <h5>{event.location}</h5>\n                                  <ul className=\"avimgs1\">\n                                    {event?.invited_users?.length > 0 &&\n                                      event.invited_users\n                                        .filter(\n                                          (inuser) => inuser.user_id !== null\n                                        ) // Remove null values\n                                        .map((inuser, index) => (\n                                          <li key={index}>\n                                            <Link\n                                              target=\"_blank\"\n                                              to={`/friend/${inuser.user_id}`}\n                                            >\n                                              <img\n                                                className=\"w-100 h-100\"\n                                                src={inuser.user_image}\n                                                alt=\"Profile\"\n                                              />\n                                            </Link>\n                                          </li>\n                                        ))}\n                                  </ul>\n                                  {event.invited_users.length === 0 && (\n                                    <h6>{t(\"nomember\")}</h6>\n                                  )}\n                                </div>\n                                {LoginData.id === event.user_id ? (\n                                  <div className=\"d-flex flex-column flex-lg-row gap-2 justify-content-md-between inbtns mt-auto\">\n                                    <button\n                                      onClick={() => openPopup1(event.id)}\n                                      type=\"button\"\n                                      className=\"btn prbtn\"\n                                    >\n                                      {t(\"invite_a_friend\")}\n                                    </button>\n                                  </div>\n                                ) : (\n                                  <div className=\"d-flex flex-column flex-lg-row gap-2 justify-content-md-between inbtns mt-auto\">\n                                    <button\n                                      type=\"button\"\n                                      onClick={() => handleInterested(event.id)} // Pass the event.id to handleInterested\n                                      className={`btn prbtn ${\n                                        event.inter_id !== null\n                                          ? \"interested_btn\"\n                                          : \"\"\n                                      }`} // Conditional class based on inter_id\n                                    >\n                                      {t(\"INTERESTED\")}\n                                    </button>\n                                  </div>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n      {openGuest && (\n        <>\n          <div className=\"d-flex flex-column gap-3 scroll_bar guest_invitepop\">\n            <h4>{t(\"Guest\")}</h4>\n            <button onClick={guestClose} className=\"guestClose\">\n              <IoMdCloseCircleOutline />\n            </button>\n            <Tabs\n              id=\"controlled-tab-example\"\n              activeKey={key}\n              onSelect={(k) => setKey(k)}\n              className=\"mb-3 flex gap-3\"\n            >\n              <Tab\n                eventKey=\"Invite\"\n                title={`Invite (${inviteGuestuser.length || 0})`}\n              >\n                <div className=\"d-flex flex-column gap-4\">\n                  <div className=\"d-flex flex-column gap-2\">\n                    <h5>\n                      {t(\"Friends\")} ({inviteGuestuser.length})\n                    </h5>\n                    <ul className=\"scroll_bar invite_people\">\n                      {inviteGuestuser.length === 0 ? (\n                        <li className=\"d-flex flex-column gap-2\">\n                          <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                            {t(\"No_result_found\")}\n                          </div>\n                        </li>\n                      ) : (\n                        inviteGuestuser.map((invite, index) => (\n                          <li className=\"d-flex flex-column gap-2\">\n                            <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                              <div className=\"d-flex align-items-center gap-3 pt-2\">\n                                <div className=\"d-block main_profile\">\n                                  <img\n                                    src={invite.creator_profile_image}\n                                    alt=\"image\"\n                                  />\n                                </div>\n                                <div className=\"d-flex flex-column gap-2\">\n                                  <h6>{invite.creator_username}</h6>\n                                </div>\n                              </div>\n                              <Link\n                                to={`/receivedchatmessage/${invite.creator_slug}`}\n                                className=\"send_messsage\"\n                              >\n                                <FaFacebookMessenger />\n                                <p> {t(\"Message\")}</p>\n                              </Link>\n                            </div>\n                          </li>\n                        ))\n                      )}\n                    </ul>\n                  </div>\n                  {/* <div className=\"d-flex flex-column gap-2\">\n                          <h5>Add friend (1)</h5>\n                          <ul className=\"scroll_bar invite_people\">\n                            <li className=\"d-flex flex-column gap-2\">\n                              <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                                <div className=\"d-flex align-items-center gap-3 pt-2\">\n                                  <div className=\"d-block main_profile\">\n                                    <img\n                                      src=\"https://amouretteno.s3.us-east-1.amazonaws.com/others/1739446958422_1734518798576_istockphoto-1453838542-612x612.jpg\"\n                                      alt=\"image\"\n                                    />\n                                  </div>\n                                  <div className=\"d-flex flex-column gap-2\">\n                                    <h6>John Deo</h6>\n                                  </div>\n                                </div>\n                                <button className=\"send_messsage\">\n                                  <HiUserAdd />\n                                  <p>Add Friend</p>\n                                </button>\n                              </div>\n                            </li>\n                            <li className=\"d-flex flex-column gap-2\">\n                              <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                                <div className=\"d-flex align-items-center gap-3 pt-2\">\n                                  <div className=\"d-block main_profile\">\n                                    <img\n                                      src=\"https://amouretteno.s3.us-east-1.amazonaws.com/others/1739446958422_1734518798576_istockphoto-1453838542-612x612.jpg\"\n                                      alt=\"image\"\n                                    />\n                                  </div>\n                                  <div className=\"d-flex flex-column gap-2\">\n                                    <h6>John Deo</h6>\n                                  </div>\n                                </div>\n                                <button className=\"send_messsage\">\n                                  <HiUserAdd />\n                                  <p>Add Friend</p>\n                                </button>\n                              </div>\n                            </li>\n                            <li className=\"d-flex flex-column gap-2\">\n                              <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                                <div className=\"d-flex align-items-center gap-3 pt-2\">\n                                  <div className=\"d-block main_profile\">\n                                    <img\n                                      src=\"https://amouretteno.s3.us-east-1.amazonaws.com/others/1739446958422_1734518798576_istockphoto-1453838542-612x612.jpg\"\n                                      alt=\"image\"\n                                    />\n                                  </div>\n                                  <div className=\"d-flex flex-column gap-2\">\n                                    <h6>John Deo</h6>\n                                  </div>\n                                </div>\n                                <button className=\"send_messsage\">\n                                  <HiUserAdd />\n                                  <p>Add Friend</p>\n                                </button>\n                              </div>\n                            </li>\n                            <li className=\"d-flex flex-column gap-2\">\n                              <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                                <div className=\"d-flex align-items-center gap-3 pt-2\">\n                                  <div className=\"d-block main_profile\">\n                                    <img\n                                      src=\"https://amouretteno.s3.us-east-1.amazonaws.com/others/1739446958422_1734518798576_istockphoto-1453838542-612x612.jpg\"\n                                      alt=\"image\"\n                                    />\n                                  </div>\n                                  <div className=\"d-flex flex-column gap-2\">\n                                    <h6>John Deo</h6>\n                                  </div>\n                                </div>\n                                <button className=\"send_messsage\">\n                                  <HiUserAdd />\n                                  <p>Add Friend</p>\n                                </button>\n                              </div>\n                            </li>\n                            <li className=\"d-flex flex-column gap-2\">\n                              <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                                <div className=\"d-flex align-items-center gap-3 pt-2\">\n                                  <div className=\"d-block main_profile\">\n                                    <img\n                                      src=\"https://amouretteno.s3.us-east-1.amazonaws.com/others/1739446958422_1734518798576_istockphoto-1453838542-612x612.jpg\"\n                                      alt=\"image\"\n                                    />\n                                  </div>\n                                  <div className=\"d-flex flex-column gap-2\">\n                                    <h6>John Deo</h6>\n                                  </div>\n                                </div>\n                                <button className=\"send_messsage\">\n                                  <HiUserAdd />\n                                  <p>Add Friend</p>\n                                </button>\n                              </div>\n                            </li>\n                            <li className=\"d-flex flex-column gap-2\">\n                              <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                                <div className=\"d-flex align-items-center gap-3 pt-2\">\n                                  <div className=\"d-block main_profile\">\n                                    <img\n                                      src=\"https://amouretteno.s3.us-east-1.amazonaws.com/others/1739446958422_1734518798576_istockphoto-1453838542-612x612.jpg\"\n                                      alt=\"image\"\n                                    />\n                                  </div>\n                                  <div className=\"d-flex flex-column gap-2\">\n                                    <h6>John Deo</h6>\n                                  </div>\n                                </div>\n                                <button className=\"send_messsage\">\n                                  <HiUserAdd />\n                                  <p>Add Friend</p>\n                                </button>\n                              </div>\n                            </li>\n                            <li className=\"d-flex flex-column gap-2\">\n                              <div className=\"d-flex justify-content-between gap-3 align-items-center\">\n                                <div className=\"d-flex align-items-center gap-3 pt-2\">\n                                  <div className=\"d-block main_profile\">\n                                    <img\n                                      src=\"https://amouretteno.s3.us-east-1.amazonaws.com/others/1739446958422_1734518798576_istockphoto-1453838542-612x612.jpg\"\n                                      alt=\"image\"\n                                    />\n                                  </div>\n                                  <div className=\"d-flex flex-column gap-2\">\n                                    <h6>John Deo</h6>\n                                  </div>\n                                </div>\n                                <button className=\"send_messsage\">\n                                  <HiUserAdd />\n                                  <p>Add Friend</p>\n                                </button>\n                              </div>\n                            </li>\n                          </ul>\n                        </div> */}\n                </div>\n              </Tab>\n\n              {/* <Tab eventKey=\"contact\" title=\"Contact\">\n                      Tab content for Contact\n                    </Tab> */}\n            </Tabs>\n          </div>\n        </>\n      )}\n      <Createnewevent\n        isOpen={isPopupOpen}\n        onClose={closePopup}\n        onEventCreated={handleEventCreated}\n      ></Createnewevent>\n      <InviteEventsFriend\n        isOpen1={isPopupOpen1}\n        onClose1={closePopup1}\n        friends={allyoureventsUser}\n        LoginData={LoginData}\n        eventId={eventId}\n        onInvitesSent={refreshFriendsList}\n      ></InviteEventsFriend>\n      {/* <Footer /> */}\n    </>\n  );\n}\n\nexport default AllEvents;\n"],"names":["Createnewevent","_ref","isOpen","onClose","onEventCreated","selectedFile","setSelectedFile","useState","errorMessage","setErrorMessage","showPopSuccess","setShowPopSuccess","showPopError","setShowPopError","successPopMessage","setPopsuccessMessage","errorPopMessage","setPoperrorMessage","makeImagePrivate","setMakeImagePrivate","spinner","setspinner","eventData","setEventData","name","start_date","end_date","time","location","description","image","restr_message","setrestr_message","today","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","t","useTranslation","useEffect","savedLanguage","localStorage","getItem","console","log","i18n","language","changeLanguage","today_enddate","handleInputChange","e","value","type","files","target","hasRestrictedWord","restrictedWords","some","word","toLowerCase","includes","prevData","convertToPng","file","Promise","resolve","reject","reader","FileReader","onload","event","img","Image","canvas","document","createElement","width","height","getContext","drawImage","toBlob","blob","pngFile","File","replace","lastModified","getTime","Error","onerror","src","result","readAsDataURL","_jsx","_Fragment","children","className","onClick","classList","contains","_jsxs","SuccessPop","message","ErrorPop","onSubmit","async","preventDefault","storedUsername","userLogin","JSON","parse","formData","FormData","append","id","key","response","axios","post","apiUrl","headers","data","status","setTimeout","window","reload","error","required","accept","onChange","isImage","startsWith","isVideo","size","convertedFile","err","URL","createObjectURL","alt","style","BsCloudUpload","fontSize","placeholder","min","toISOString","split","minLength","rows","checked","role","InviteEventsFriend","isOpen1","onClose1","friends","LoginData","eventId","onInvitesSent","selectedFriends","setSelectedFriends","invMessage","setinvMessage","action","friendIds","user_id","method","length","map","friend","index","profile_image","require","username","handleCheckboxChange","userId","prevSelected","filter","disabled","setKey","inviteGuestuser","setinviteGuestuser","activeIndex","setActiveIndex","setLoginData","searchTerm","setsearchTerm","AllfriendId","setAllfriendId","isInterested","setIsInterested","EventDetailIntersted","setEventDetailIntersted","seteventId","events","setEvents","allevents","setallevents","isPopupOpen","setIsPopupOpen","isPopupOpen1","setIsPopupOpen1","allyoureventsUser","setallyoureventsUser","navigate","useNavigate","handleButtonClick","user_ids","res","Accept","getAllfriends","isAscending","setIsAscending","useLocation","getallevents","userIds","orderBy","friendUserIds","apiUrl2","results","request","getalleventsUser","event_id","openGuest","setopenGuest","Headertwo","onInput","search","join","respo","setSearchTerm","Link","to","IconHome","stroke","pathname","ev1","ev2","ev3","OpenGuest","getinviteUserGroup","openPopup","body","overflowY","_event$invited_users","slug","created_at","toLocaleDateString","invited_users","inuser","user_image","openPopup1","handleInterested","inter_id","guestClose","IoMdCloseCircleOutline","Tabs","activeKey","onSelect","k","Tab","eventKey","title","invite","creator_profile_image","creator_username","creator_slug","FaFacebookMessenger","closePopup","newEvent","prevEvents","closePopup1","refreshFriendsList"],"sourceRoot":""}